"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkUD2TOWHPjs = require('./chunk-UD2TOWHP.js');var u=t=>{let r=t.skipNotification&&"?skipNotification=true"||"",e=t.card.cardType==="CREDIT"?"creditcards":"cards",n={...t.payload,query:r,flag:t.flag};return{input:t,metadata:{commandName:"SendAuthorizationToCore",path:`/${e}/${t.card.internalCardId}/authorization${r}`,method:"POST"},execute:async a=>{t.tenantId&&(a.tenantId=t.tenantId);let o=await _chunkUD2TOWHPjs.d.call(void 0, a);try{return await o.post(`/${e}/${t.card.internalCardId}/authorization${r}`,n)}catch(c){_chunkUD2TOWHPjs.c.call(void 0, c)}}}},C= exports.b =t=>({input:t,metadata:{commandName:"UpdateCardID",path:`/clients/${t.clientId}`,method:"PUT"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let e=await _chunkUD2TOWHPjs.d.call(void 0, r);try{await e.put(`/clients/${t.clientId}`,{businessCardIDURL:t.businessCardIDURL,businessCardIDQRCode:t.businessCardIDQRCode})}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}});var _graphql = require('graphql');var y=t=>({input:t,metadata:{commandName:t.operationName||"GraphQL",path:"/graphql",method:"POST"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let e=await _chunkUD2TOWHPjs.d.call(void 0, r),n=r.graphqlPath||"/graphql";try{let a=typeof t.command=="string"?t.command:_graphql.print.call(void 0, t.command),{data:o}=await e.post(n,{query:a,variables:t.variables,operationName:t.operationName});if(_optionalChain([o, 'access', _ => _.errors, 'optionalAccess', _2 => _2.length]))throw _chunkUD2TOWHPjs.a.call(void 0, {message:o.errors[0].message,code:"graphql_error",originalError:o.errors[0]});if(!o.data)throw _chunkUD2TOWHPjs.a.call(void 0, {message:"No data returned from GraphQL query",code:"graphql_no_data"});return o.data}catch(a){throw a.name==="CommandError"?a:_chunkUD2TOWHPjs.a.call(void 0, {message:a.message,code:"graphql_request_failed",originalError:a})}}});exports.a = u; exports.b = C; exports.c = y;
