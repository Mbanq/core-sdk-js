"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var y=({message:e,statusCode:a,code:i,requestId:o,originalError:p})=>({name:"CommandError",message:e,statusCode:a,code:i,requestId:o,originalError:p}),ln= exports.b =e=>typeof e=="object"&&e!==null&&"name"in e&&e.name==="CommandError",Be=e=>{if(!e||typeof e!="object")return e;let a={...e};if(a.config&&typeof a.config=="object"){let i=a.config;if(i.httpsAgent&&typeof i.httpsAgent=="object")try{i.httpsAgent.sockets&&delete i.httpsAgent.sockets,i.httpsAgent.freeSockets&&delete i.httpsAgent.freeSockets,i.httpsAgent._sessionCache&&delete i.httpsAgent._sessionCache}catch (e2){}}return a},u= exports.c =e=>{if(_axios2.default.isAxiosError(e)){let a=_optionalChain([e, 'access', _2 => _2.response, 'optionalAccess', _3 => _3.data, 'optionalAccess', _4 => _4.message]),i=_optionalChain([e, 'access', _5 => _5.response, 'optionalAccess', _6 => _6.status])?`Request failed with status code ${e.response.status}`:e.message||"Request failed";throw y({message:a||i,statusCode:_optionalChain([e, 'access', _7 => _7.response, 'optionalAccess', _8 => _8.status]),code:e.code,requestId:_optionalChain([e, 'access', _9 => _9.response, 'optionalAccess', _10 => _10.headers, 'optionalAccess', _11 => _11["x-request-id"]]),originalError:Be(e)})}throw e};var _zod = require('zod'); var _zod2 = _interopRequireDefault(_zod);var _=_zod.z.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),S= exports.f =_zod.z.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),R= exports.g =_zod.z.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),v= exports.h =_zod.z.enum(["CREDIT","DEBIT"]),L= exports.i =_zod.z.enum(["ASC","DESC"]),gn=_.options,fn=S.options,bn=R.options,hn=v.options,Cn=L.options,je=e=>_.parse(e),ze=e=>S.parse(e),$e=e=>R.parse(e),_e=e=>v.parse(e),Ge=e=>L.parse(e),G=_zod.z.string().min(1),M=_zod.z.string().min(1),K=_zod.z.string().min(1),V=_zod.z.string().min(1),W=_zod.z.string().min(1),H=_zod.z.string().min(1),Q=_zod.z.string().min(1),Y=_zod.z.string().min(1),X=_zod.z.string().min(1),J=_zod.z.union([_zod.z.string(),_zod.z.number()]),Z=_zod.z.string(),ee=_zod.z.string(),te=_zod.z.string(),O=_zod.z.string(),N=_zod.z.string(),T=_zod.z.string(),ne=_zod.z.boolean(),ae=_zod.z.string(),Me=e=>G.parse(e),Ke=e=>M.parse(e),Ve=e=>K.parse(e),We=e=>V.parse(e),He=e=>W.parse(e),Qe=e=>H.parse(e),Ye=e=>Q.parse(e),Xe=e=>Y.parse(e),Je=e=>X.parse(e),Ze=e=>J.parse(e),et=e=>Z.parse(e),tt=e=>ee.parse(e),nt=e=>te.parse(e),at=e=>O.parse(e),rt=e=>N.parse(e),it=e=>T.parse(e),ot=e=>ne.parse(e),st=e=>ae.parse(e),ct= exports.j ={originatorName:G.optional(),originatorAccount:M.optional(),originatorBankRoutingCode:K.optional(),recipientName:V.optional(),recipientAccount:W.optional(),recipientBankRoutingCode:H.optional(),reference:Q.optional(),traceNumber:Y.optional(),externalId:X.optional(),clientId:J.optional(),dateFormat:Z.optional(),locale:ee.optional(),originatedBy:te.optional(),paymentRail:R.optional(),paymentType:v.optional(),fromValueDate:O.optional(),toValueDate:O.optional(),fromExecuteDate:N.optional(),toExecuteDate:N.optional(),status:S.optional(),fromReturnDate:T.optional(),toReturnDate:T.optional(),isSettlement:ne.optional(),orderBy:ae.optional(),sortOrder:L.optional(),limit:_zod.z.number().min(0).optional().describe("Maximum number of records to return. Defaults to 20 if not specified. Set to 0 to return all records."),offset:_zod.z.number().min(0).optional()},In= exports.k =_zod.z.object(ct).partial();var pt={id:_zod.z.number(),clientId:_zod.z.number(),amount:_zod.z.number().positive(),correlationId:_zod.z.string(),paymentType:v,paymentRail:R,recipient:_zod.z.object({cardId:_zod.z.string().optional(),recipientType:_zod.z.string(),address:_zod.z.object({line1:_zod.z.string().optional(),line2:_zod.z.string().optional(),stateCode:_zod.z.string().optional(),countryCode:_zod.z.string(),postalCode:_zod.z.string().optional()}),name:_zod.z.string()}),originator:_zod.z.object({accountId:_zod.z.string().optional(),recipientType:_zod.z.string(),address:_zod.z.object({line1:_zod.z.string().optional(),line2:_zod.z.string().optional(),stateCode:_zod.z.string().optional(),countryCode:_zod.z.string(),postalCode:_zod.z.string().optional()}),name:_zod.z.string()}),executedAt:_zod.z.string(),createdAt:_zod.z.string(),externalId:_zod.z.string(),status:S,paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),currencyData:_zod.z.object({code:_zod.z.string(),name:_zod.z.string(),decimalPlaces:_zod.z.number(),displaySymbol:_zod.z.string(),nameCode:_zod.z.string(),currencyCodeInDigit:_zod.z.number(),isBaseCurrency:_zod.z.boolean()}),currency:_zod.z.string().min(3).max(3)},re=_zod.z.object(pt).catchall(_zod.z.any()),dt=_zod.z.object({line1:_zod.z.string().optional(),line2:_zod.z.string().optional(),city:_zod.z.string().optional(),stateCode:_zod.z.string().optional(),countryCode:_zod.z.string().optional(),postalCode:_zod.z.string().optional()}).optional(),lt=_zod.z.object({accountId:_zod.z.string()}),z=_zod.z.object({name:_zod.z.string(),accountId:_zod.z.string().optional(),recipientId:_zod.z.string().optional(),accountType:_zod.z.enum(["CHECKING","SAVINGS"]).optional(),recipientType:_zod.z.enum(["INDIVIDUAL","BUSINESS"]).optional(),accountEntity:_zod.z.enum(["PERSONAL","BUSINESS"]).optional(),accountNumber:_zod.z.string().optional(),bankInformation:_zod.z.object({routingNumber:_zod.z.string()}).optional(),cardId:_zod.z.string().optional(),contactNumber:_zod.z.string().optional(),address:dt}),mt= exports.m ={amount:_zod.z.number().positive(),currency:_zod.z.string().min(3).max(3),paymentRail:R,paymentType:v,originator:lt,recipient:z,clientId:_zod.z.string().optional(),correspondent:z.optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),chargeBearer:_zod.z.enum(["OUR","BEN","SHA"]).optional(),purposeCode:_zod.z.string().optional(),valueDate:_zod.z.string().optional(),executionDate:_zod.z.string().optional()},ut= exports.n =_zod.z.object(mt).catchall(_zod.z.any()).refine(e=>(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")&&e.recipient?e.recipient.name&&e.recipient.address&&e.recipient.address.stateCode&&e.recipient.address.countryCode&&e.recipient.accountNumber&&e.recipient.accountType&&e.recipient.bankInformation:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}).refine(e=>e.paymentRail==="INTERNAL"?e.originator.accountId&&e.recipient.accountId:!0,{message:"For INTERNAL transfers, both originator and recipient accountId are mandatory"}).refine(e=>e.paymentRail==="ACH"||e.paymentRail==="SAMEDAYACH"?e.recipient.name&&e.originator.accountId&&e.recipient.accountType&&e.recipient.recipientType&&e.recipient.accountNumber&&e.recipient.bankInformation:!0,{message:"For ACH/SAMEDAYACH transfers, originator and recipient accountId, recipient accountType, originator recipientType, recipient accountNumber and recipient bankInformation are mandatory"}).refine(e=>e.paymentRail==="CARD"&&e.recipient?e.recipient.cardId:!0,{message:"For CARD payments, recipient cardId is mandatory"}).refine(e=>e.paymentRail==="FXPAY"?e.recipient.recipientId&&e.recipient.name&&e.recipient.accountNumber&&e.recipient.accountType&&e.recipient.recipientType&&e.recipient.accountEntity&&e.paymentRailMetaData:!0,{message:"For FXPAY payments, correspondent name and identifier are mandatory"}),yt= exports.o ={amount:_zod.z.number().positive().optional(),correspondent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional()}).optional(),creditor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),debtor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),errorCode:_zod.z.string().optional(),errorMessage:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),status:S.optional()},gt= exports.p =_zod.z.object(yt).catchall(_zod.z.any()),Rn= exports.q =_zod.z.object({totalFilteredRecords:_zod.z.number(),pageItems:_zod.z.array(re)}),k=e=>re.parse(e),ie=e=>ut.parse(e),oe=e=>gt.parse(e);var xn=_zod.z.object({id:_zod.z.string(),clientId:_zod.z.number(),resourceId:_zod.z.number(),resourceIdentifier:_zod.z.string()}),se=e=>{try{je(e)}catch(a){throw a instanceof _zod.ZodError?y({message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},ce=(e,a)=>{try{switch(e){case"status":ze(a);break;case"paymentRail":$e(a);break;case"paymentType":_e(a);break;case"sortOrder":Ge(a);break;case"originatorName":Me(a);break;case"originatorAccount":Ke(a);break;case"originatorBankRoutingCode":Ve(a);break;case"recipientName":We(a);break;case"recipientAccount":He(a);break;case"recipientBankRoutingCode":Qe(a);break;case"reference":Ye(a);break;case"traceNumber":Xe(a);break;case"externalId":Je(a);break;case"clientId":Ze(a);break;case"dateFormat":et(a);break;case"locale":tt(a);break;case"originatedBy":nt(a);break;case"fromValueDate":case"toValueDate":at(a);break;case"fromExecuteDate":case"toExecuteDate":rt(a);break;case"fromReturnDate":case"toReturnDate":it(a);break;case"isSettlement":ot(a);break;case"orderBy":st(a);break;default:break}}catch(i){throw i instanceof _zod.ZodError?y({message:`Invalid value for '${e}': '${a}'. ${i.message}`,code:`invalid_${e}_value`}):i}};var _uuid = require('uuid');var _https = require('https'); var me = _interopRequireWildcard(_https);var _jsonwebtoken = require('jsonwebtoken'); var _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);var pe=(e,a)=>{if(!e)throw y({message:"Missing JWT secret",code:"missing_jwt_secret"});return _jsonwebtoken2.default.sign({signee:a},e,{algorithm:"HS512",expiresIn:"1d"})||""},de=async(e,a,i,o)=>{let p={method:"POST",url:`${a}/oauth/token`,headers:{"Content-Type":"application/x-www-form-urlencoded",tenantId:i},data:o},{data:{access_token:d}}=await _axios2.default.request(p);return e=d,e};var le={token:""},It=e=>e&&(e.startsWith("Bearer ")?e:`Bearer ${e}`),m= exports.d =async e=>{let i=_axios2.default.create({timeout:_optionalChain([e, 'access', _12 => _12.axiosConfig, 'optionalAccess', _13 => _13.timeout])||29e3,baseURL:e.baseUrl,headers:{"Content-Type":"application/json; charset=utf-8","JWT-Token":_optionalChain([e, 'optionalAccess', _14 => _14.secret])?`${pe(_optionalChain([e, 'optionalAccess', _15 => _15.secret]),_optionalChain([e, 'optionalAccess', _16 => _16.signee])||"")}`:void 0,Authorization:e.bearerToken!==void 0?It(e.bearerToken):e.credential?`Bearer ${le.token||await de(le.token,e.baseUrl,e.tenantId,e.credential)}`:void 0,"trace-id":e.traceId||`RequestUUID=${_uuid.v4.call(void 0, )}`,tenantId:e.tenantId},httpsAgent:new me.Agent({rejectUnauthorized:!0,keepAlive:_optionalChain([e, 'access', _17 => _17.axiosConfig, 'optionalAccess', _18 => _18.keepAlive])})});return e.logger&&e.logger(i),i};var Bn=e=>({input:e,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async a=>{try{ie(e.payment)}catch(o){throw o instanceof _zod.ZodError?y({message:`Invalid payment data: ${o.message}`,code:"invalid_payment_input"}):o}e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post("/v1/payments",e.payment)).data}catch(o){u(o)}}}),jn= exports.s =e=>({input:e,metadata:{commandName:"GetPayment",path:`/v1/payments/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o=await i.get(`/v1/payments/${e.id}`);return k(o.data)}catch(o){u(o)}}}),zn= exports.t =e=>({input:e,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${e.id}`,method:"PUT"},execute:async a=>{try{oe(e.payment)}catch(o){throw o instanceof _zod.ZodError?y({message:`Invalid payment update data: ${o.message}`,code:"invalid_payment_update_input"}):o}e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o=await i.put(`/v1/payments/${e.id}`,e.payment);return k(o.data)}catch(o){u(o)}}}),A=(e,a,i,o)=>{if(a!==void 0&&a!==0&&a<=0)throw y({message:`Invalid limit: ${a}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(i!==void 0&&i<0)throw y({message:`Invalid offset: ${i}. Offset must be non-negative.`,code:"invalid_offset"});return{where:c=>(se(c),{eq:l=>(ce(c,l),A({...e,[c]:l},a,i,o))}),limit:c=>A(e,c,i,o),offset:c=>A(e,a,c,o),all:()=>A(e,0,i,o),execute:()=>{let c={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},l={...c,...e,limit:a||20,offset:i||0};return{input:{filters:e,limit:a,offset:i,tenantId:o},metadata:{commandName:"ListPayments",path:"/v1/payments",method:"GET"},execute:async g=>{o&&(g.tenantId=o);let f=await m(g);try{if(a===0){let b=[],C=i||0,I=0;do{let x={...c,...e,limit:200,offset:C},P=await f.get("/v1/payments",{params:x}),{totalFilteredRecords:w,pageItems:Fe}=P.data;b.push(...Fe),I=w,C+=200}while(C<I);return{totalFilteredRecords:I,pageItems:b}}else return(await f.get("/v1/payments",{params:l})).data}catch(b){u(b)}}}}}},$n= exports.u =e=>({list:()=>A({},void 0,void 0,_optionalChain([e, 'optionalAccess', _19 => _19.tenantId]))}),_n= exports.v =(e,a)=>({input:{params:e,configuration:a},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async i=>{_optionalChain([a, 'optionalAccess', _20 => _20.tenantId])&&(i.tenantId=a.tenantId);let o=await m(i),p=[],d=e.limit||20,c=e.offset||0,l=0,g={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},f=b=>{let C=["fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","fromReturnDate","toReturnDate"].some(x=>b[x]!==void 0),I={...b};return C&&I.dateFormat===void 0&&(I.dateFormat="yyyy-MM-dd"),I};try{if(e.limit===0){do{let b={...g,...f(e),limit:d,offset:c},h=await o.get("/v1/payments",{params:b}),{totalFilteredRecords:C,pageItems:I}=h.data;p.push(...I),l=C,c+=d}while(c<l);return{totalFilteredRecords:l,pageItems:p}}else{let b={...g,...f(e),limit:d,offset:c};return(await o.get("/v1/payments",{params:b})).data}}catch(b){u(b)}}}),Gn= exports.w =e=>({input:e,metadata:{commandName:"DeletePayment",path:`/v1/payments/${e.id}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{await i.delete(`/v1/payments/${e.id}`)}catch(o){u(o)}}});var ye=_zod2.default.object({id:_zod2.default.number(),code:_zod2.default.string(),value:_zod2.default.string()}),ge=_zod2.default.object({id:_zod2.default.number(),code:_zod2.default.string(),value:_zod2.default.string()}),fe=_zod2.default.object({active:_zod2.default.boolean(),mandatory:_zod2.default.boolean(),systemDefined:_zod2.default.boolean()}),be=_zod2.default.object({id:_zod2.default.number()}),he=_zod2.default.object({id:_zod2.default.number(),name:_zod2.default.string().optional()}),Ce=_zod2.default.object({active:_zod2.default.boolean()}),Ie=_zod2.default.object({submittedOnDate:_zod2.default.array(_zod2.default.number()),submittedByUsername:_zod2.default.string().optional(),submittedByFirstname:_zod2.default.string().optional(),submittedByLastname:_zod2.default.string().optional(),activatedOnDate:_zod2.default.array(_zod2.default.number()).optional(),activatedByUsername:_zod2.default.string().optional(),activatedByFirstname:_zod2.default.string().optional(),activatedByLastname:_zod2.default.string().optional()}),Rt=_zod2.default.object({}).catchall(_zod2.default.any()),xt=_zod2.default.object({}).catchall(_zod2.default.any()),St=_zod2.default.object({}).catchall(_zod2.default.any()),Re=_zod2.default.object({constitution:Rt,mainBusinessLine:xt,countryOfIncorporation:St}).catchall(_zod2.default.any()),xe=_zod2.default.object({isExternalCardDebitDisable:_zod2.default.boolean(),isExternalCardCreditDisable:_zod2.default.boolean(),isAchDebitOutgoingDisable:_zod2.default.boolean(),isAchCreditOutgoingDisable:_zod2.default.boolean(),isAchDebitIncomingDisable:_zod2.default.boolean(),isAchCreditIncomingDisable:_zod2.default.boolean(),isInternalCreditDisable:_zod2.default.boolean(),isInternalDebitDisable:_zod2.default.boolean(),isWireCreditOutgoingDisable:_zod2.default.boolean(),isWireCreditIncomingDisable:_zod2.default.boolean(),isSwiftCreditOutgoingDisable:_zod2.default.boolean(),isSwiftCreditIncomingDisable:_zod2.default.boolean(),isFxpayCreditOutgoingDisable:_zod2.default.boolean(),isAllocateToSubAccountDisable:_zod2.default.boolean(),isInternalCreditOwnDisable:_zod2.default.boolean(),type:_zod2.default.string(),resourceId:_zod2.default.number(),id:_zod2.default.number()}).catchall(_zod2.default.any()),Se=_zod2.default.object({}).catchall(_zod2.default.any()),ve=_zod2.default.object({id:_zod2.default.number(),accountNo:_zod2.default.string(),status:ge,subStatus:fe,active:_zod2.default.boolean(),activationDate:_zod2.default.array(_zod2.default.number()).optional(),firstname:_zod2.default.string(),lastname:_zod2.default.string(),displayName:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string(),dateOfBirth:_zod2.default.array(_zod2.default.number()),gender:be,clientTypes:_zod2.default.array(_zod2.default.any()),clientClassification:he,occupation:Ce,isStaff:_zod2.default.boolean(),skipAvs:_zod2.default.boolean(),officeId:_zod2.default.number(),officeName:_zod2.default.string(),imageId:_zod2.default.string().optional(),imagePresent:_zod2.default.boolean().optional(),timeline:Ie,legalForm:ye,clientVerificationStatus:_zod2.default.string(),updatedAt:_zod2.default.string(),isBlockExternalCardsAddition:_zod2.default.boolean(),clientNonPersonDetails:Re,clientTransferOptionData:xe,authorizations:_zod2.default.array(_zod2.default.number()).optional(),mobileCountryCode:_zod2.default.string(),clientKycStatus:Se,ofLoanCycle:_zod2.default.number(),ofLoanActive:_zod2.default.number(),activeDepositAccount:_zod2.default.number(),onBoardingStatus:_zod2.default.string().optional()}).catchall(_zod2.default.any()),vt=_zod2.default.object({riskScore:_zod2.default.number(),rating:_zod2.default.string()}).catchall(_zod2.default.any()),At=_zod2.default.object({street:_zod2.default.string(),city:_zod2.default.string(),state:_zod2.default.string(),zipCode:_zod2.default.string()}).catchall(_zod2.default.any()),Dt=_zod2.default.object({type:_zod2.default.string(),value:_zod2.default.string()}).catchall(_zod2.default.any()),Et={firstname:_zod2.default.string(),middlename:_zod2.default.string().optional(),lastname:_zod2.default.string(),fullname:_zod2.default.string().optional(),dob:_zod2.default.string(),genderId:_zod2.default.number(),locale:_zod2.default.string(),officeId:_zod2.default.number(),mobileCountryCode:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string().email(),legalFormId:_zod2.default.number(),externalId:_zod2.default.string().optional(),isOptedForMLALStatus:_zod2.default.boolean().optional(),currentMLALStatus:_zod2.default.string().optional(),isStaff:_zod2.default.boolean().optional(),staffId:_zod2.default.number().optional(),clientClassificationId:_zod2.default.number().optional(),savingsProductId:_zod2.default.number().optional(),active:_zod2.default.boolean().optional(),dateFormat:_zod2.default.string(),activationDate:_zod2.default.string().optional(),submittedOnDate:_zod2.default.string(),dateOfBirth:_zod2.default.string()},Wn=_zod2.default.object(Et).catchall(_zod2.default.any()),Pt={clientId:_zod2.default.number(),status:_zod2.default.string()},Hn=_zod2.default.object(Pt).catchall(_zod2.default.any()),wt={firstname:_zod2.default.string().optional(),middlename:_zod2.default.string().optional(),fullname:_zod2.default.string().optional(),genderId:_zod2.default.number().optional(),lastname:_zod2.default.string().optional(),occupationId:_zod2.default.number().optional(),mobileCountryCode:_zod2.default.string().optional(),mobileNo:_zod2.default.string().optional(),emailAddress:_zod2.default.string().email().optional(),externalId:_zod2.default.string().optional(),clientClassificationId:_zod2.default.number().optional(),dateOfBirth:_zod2.default.string().optional(),dateFormat:_zod2.default.string().optional()},Qn=_zod2.default.object(wt).catchall(_zod2.default.any()),Ot={documentTypeId:_zod2.default.string(),documentKey:_zod2.default.string(),status:_zod2.default.string(),description:_zod2.default.string().optional(),issuedBy:_zod2.default.string().optional(),locale:_zod2.default.string().optional(),dateFormat:_zod2.default.string().optional(),expiryDate:_zod2.default.string().optional(),nationality:_zod2.default.number().optional(),issuedDate:_zod2.default.string().optional()},Yn=_zod2.default.object(Ot).catchall(_zod2.default.any()),Nt={id:_zod2.default.number(),officeId:_zod2.default.number(),clientId:_zod2.default.number(),resourceId:_zod2.default.number(),changes:_zod2.default.record(_zod2.default.string(),_zod2.default.any()),isScheduledTransfer:_zod2.default.boolean(),isSkipNotification:_zod2.default.boolean()},Xn=_zod2.default.object(Nt).catchall(_zod2.default.any()),Tt={developerMessage:_zod2.default.string(),defaultUserMessage:_zod2.default.string(),userMessageGlobalisationCode:_zod2.default.string(),parameterName:_zod2.default.string().optional(),value:_zod2.default.any().nullable(),args:_zod2.default.array(_zod2.default.object({value:_zod2.default.any()})).optional()},Lt=_zod2.default.object(Tt),kt={developerMessage:_zod2.default.string(),httpStatusCode:_zod2.default.string(),defaultUserMessage:_zod2.default.string(),userMessageGlobalisationCode:_zod2.default.string(),errors:_zod2.default.array(Lt).optional()},Jn=_zod2.default.object(kt).catchall(_zod2.default.any()),qt={tenantId:_zod2.default.string().optional(),offset:_zod2.default.number().optional(),limit:_zod2.default.number().optional(),orderBy:_zod2.default.string().optional(),sortOrder:_zod2.default.string().optional(),officeId:_zod2.default.number().optional(),displayName:_zod2.default.string().optional(),firstname:_zod2.default.string().optional(),lastname:_zod2.default.string().optional(),externalId:_zod2.default.string().optional(),orphansOnly:_zod2.default.boolean().optional(),clientStatus:_zod2.default.string().optional(),mobileNo:_zod2.default.string().optional(),createdStartDate:_zod2.default.string().optional(),creationEndDate:_zod2.default.string().optional(),activatedStartDate:_zod2.default.string().optional(),activatedEndDate:_zod2.default.string().optional(),closedStartDate:_zod2.default.string().optional(),closedEndDate:_zod2.default.string().optional()},Zn=_zod2.default.object(qt),ea={id:_zod2.default.number(),accountNo:_zod2.default.string(),status:ge,subStatus:fe,active:_zod2.default.boolean(),activationDate:_zod2.default.array(_zod2.default.number()).optional(),firstname:_zod2.default.string(),lastname:_zod2.default.string(),displayName:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string(),dateOfBirth:_zod2.default.array(_zod2.default.number()),gender:be,clientTypes:_zod2.default.array(_zod2.default.any()),clientClassification:he,occupation:Ce,isStaff:_zod2.default.boolean(),skipAvs:_zod2.default.boolean(),officeId:_zod2.default.number(),officeName:_zod2.default.string(),imageId:_zod2.default.string().optional(),imagePresent:_zod2.default.boolean().optional(),timeline:Ie,legalForm:ye,clientVerificationStatus:_zod2.default.string(),updatedAt:_zod2.default.string(),isBlockExternalCardsAddition:_zod2.default.boolean(),clientNonPersonDetails:Re,clientTransferOptionData:xe,authorizations:_zod2.default.array(_zod2.default.number()).optional(),mobileCountryCode:_zod2.default.string(),clientKycStatus:Se,ofLoanCycle:_zod2.default.number(),ofLoanActive:_zod2.default.number(),activeDepositAccount:_zod2.default.number(),onBoardingStatus:_zod2.default.string().optional()},Ft={totalFilteredRecords:_zod2.default.number(),pageItems:_zod2.default.array(ve)},ta=_zod2.default.object(Ft).catchall(_zod2.default.any()),Ut={clientData:ve.optional(),riskRatingData:vt.optional(),clientAddressData:At.optional(),clientIdentifierData:Dt.optional()},na=_zod2.default.object(Ut);var Bt=_zod2.default.enum(["offset","limit","orderBy","sortOrder","officeId","displayName","firstname","lastname","externalId","orphansOnly","clientStatus","mobileNo","createdStartDate","creationEndDate","activatedStartDate","activatedEndDate","closedStartDate","closedEndDate"]),jt=_zod2.default.enum(["displayName","accountNo","officeId","officeName"]),zt=_zod2.default.enum(["ASC","DESC"]),$t=_zod2.default.enum(["ACTIVE","PENDING","INACTIVE"]),q=e=>Bt.parse(e),_t=e=>jt.parse(e),Gt=e=>zt.parse(e),Mt=e=>$t.parse(e),Ae=e=>{try{for(let[a,i]of Object.entries(e))if(q(a),i!=null)switch(a){case"orderBy":_t(i);break;case"sortOrder":Gt(i);break;case"clientStatus":Mt(i);break;case"offset":case"limit":case"officeId":_zod2.default.number().min(0).parse(i);break;case"orphansOnly":_zod2.default.boolean().parse(i);break;case"displayName":case"firstname":case"lastname":case"externalId":case"mobileNo":case"createdStartDate":case"creationEndDate":case"activatedStartDate":case"activatedEndDate":case"closedStartDate":case"closedEndDate":_zod2.default.string().min(1).parse(i);break}}catch(a){throw a instanceof _zod2.default.ZodError?y({message:`Validation error: ${a.errors.map(i=>i.message).join(", ")}`,code:"validation_error"}):a}};var ga=e=>({input:e,metadata:{commandName:"GetClient",path:`/v1/clients/${e.clientId}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o={},p=new URLSearchParams;e.staffInSelectedOfficeOnly&&p.append("staffInSelectedOfficeOnly","true"),e.checkIdentitiesExpiration&&p.append("checkIdentitiesExpiration","true"),e.clientAccountAssociate&&p.append("clientAccountAssociate","true");let d=p.toString(),c=`/v1/clients/${e.clientId}${d?`?${d}`:""}`,l=await i.get(c);if(o.clientData=l,e.riskRating){let g=await i.get(`/v1/clients/${e.clientId}/riskrating`);o.riskRatingData=g}if(e.clientAddress){let g=await i.get(`/v1/client/${e.clientId}/addresses`);o.clientAddressData=g}if(e.clientIdentifier){let g=await i.get(`/v1/clients/${e.clientId}/identifiers?unmaskValue=true`);o.clientIdentifierData=g}return o}catch(o){u(o)}}}),fa= exports.y =e=>({input:e,metadata:{commandName:"UpdateClient",path:`/v1/clients/${e.clientId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/clients/${e.clientId}`,{...e.updates})).data}catch(o){u(o)}}}),ba= exports.z =e=>({input:e,metadata:{commandName:"UpdateClientIdentifier",path:`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,{...e.updates})).data}catch(o){u(o)}}}),ha= exports.A =e=>({input:e,metadata:{commandName:"CreateClient",path:"/v1/clients",method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post("/v1/clients",e.clientData)).data}catch(o){u(o)}}}),D=(e,a,i,o)=>{if(a!==void 0&&a!==0&&a<=0)throw y({message:`Invalid limit: ${a}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(i!==void 0&&i<0)throw y({message:`Invalid offset: ${i}. Offset must be non-negative.`,code:"invalid_offset"});return{where:c=>(q(c),{eq:l=>(Ae({[c]:l}),D({...e,[c]:l},a,i,o))}),limit:c=>D(e,c,i,o),offset:c=>D(e,a,c,o),all:()=>D(e,0,i,o),execute:()=>{let c={...e,limit:a||200,offset:i||0};return{input:{filters:e,limit:a,offset:i,tenantId:o},metadata:{commandName:"ListClients",path:"/v1/clients",method:"GET"},execute:async l=>{o&&(l.tenantId=o);let g=await m(l);try{if(a===0){let f=[],h=i||0,C=0;do{let I={...e,limit:200,offset:h},x=await g.get("/v1/clients",{params:I}),{totalFilteredRecords:P,pageItems:w}=x.data;f.push(...w),C=P,h+=200}while(h<C);return{totalFilteredRecords:C,pageItems:f}}else return(await g.get("/v1/clients",{params:c})).data}catch(f){u(f)}}}}}},Ca= exports.B =e=>({list:()=>D({},void 0,void 0,_optionalChain([e, 'optionalAccess', _21 => _21.tenantId]))}),Ia= exports.C =(e,a)=>({input:{params:e,configuration:a},metadata:{commandName:"GetClients",path:"/v1/clients",method:"GET"},execute:async i=>{a.tenantId&&(i.tenantId=a.tenantId);let o=await m(i),p=[],d=e.limit||200,c=e.offset||0,l=0,g={...e,limit:d,offset:c};try{if(e.limit===0){do{let f=await o.get("/v1/clients",{params:g}),{totalFilteredRecords:b,pageItems:h}=f.data;p.push(...h),l=b,c+=d}while(c<l);return{totalFilteredRecords:l,pageItems:p}}else return(await o.get("/v1/clients",{params:g})).data}catch(f){u(f)}}}),Ra= exports.D =e=>({input:e,metadata:{commandName:"DeleteClient",path:`/v1/clients/${e.clientId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/clients/${e.clientId}`)).data}catch(o){u(o)}}});var De=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string(),submittedAndPendingApproval:_zod.z.boolean(),approved:_zod.z.boolean(),rejected:_zod.z.boolean(),withdrawnByApplicant:_zod.z.boolean(),active:_zod.z.boolean(),closed:_zod.z.boolean(),prematureClosed:_zod.z.boolean(),transferInProgress:_zod.z.boolean(),transferOnHold:_zod.z.boolean(),matured:_zod.z.boolean()}),F=_zod.z.object({code:_zod.z.string(),name:_zod.z.string(),decimalPlaces:_zod.z.number(),inMultiplesOf:_zod.z.number(),displaySymbol:_zod.z.string(),nameCode:_zod.z.string(),displayLabel:_zod.z.string(),currencyCodeInDigit:_zod.z.number().optional(),isBaseCurrency:_zod.z.boolean().optional()}),Kt=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),Ee=_zod.z.object({submittedOnDate:_zod.z.array(_zod.z.number()),submittedByUsername:_zod.z.string(),submittedByFirstname:_zod.z.string(),submittedByLastname:_zod.z.string(),approvedOnDate:_zod.z.array(_zod.z.number()).optional(),approvedByUsername:_zod.z.string().optional(),approvedByFirstname:_zod.z.string().optional(),approvedByLastname:_zod.z.string().optional(),activatedOnDate:_zod.z.array(_zod.z.number()).optional(),activatedByUsername:_zod.z.string().optional(),activatedByFirstname:_zod.z.string().optional(),activatedByLastname:_zod.z.string().optional()}),Pe=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string(),none:_zod.z.boolean(),inactive:_zod.z.boolean(),dormant:_zod.z.boolean(),escheat:_zod.z.boolean(),block:_zod.z.boolean(),blockCredit:_zod.z.boolean(),blockDebit:_zod.z.boolean()}),we=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),Vt=_zod.z.object({id:_zod.z.number(),accountNo:_zod.z.string(),productId:_zod.z.number(),productName:_zod.z.string(),shortProductName:_zod.z.string(),status:De,currency:F,accountBalance:_zod.z.number(),accountType:Kt,timeline:Ee,subStatus:Pe,lastActiveTransactionDate:_zod.z.array(_zod.z.number()).optional(),depositType:we,availableBalance:_zod.z.number(),allowPrepaidCard:_zod.z.boolean(),primaryAccount:_zod.z.record(_zod.z.any())}),Wt= exports.E ={id:_zod.z.number(),accountNo:_zod.z.string(),depositType:we,clientId:_zod.z.number(),clientName:_zod.z.string(),savingsProductId:_zod.z.number(),savingsProductName:_zod.z.string(),fieldOfficerId:_zod.z.number(),status:De,subStatus:Pe,timeline:Ee,currency:F,nominalAnnualInterestRate:_zod.z.number(),interestCompoundingPeriodType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestPostingPeriodType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestCalculationType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestCalculationDaysInYearType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),lockinPeriodFrequency:_zod.z.number(),lockinPeriodFrequencyType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),enforceMinRequiredBalance:_zod.z.boolean(),onHoldFunds:_zod.z.number(),withHoldTax:_zod.z.boolean(),lastActiveTransactionDate:_zod.z.array(_zod.z.number()),isDormancyTrackingActive:_zod.z.boolean(),savingsAmountOnHold:_zod.z.number(),summary:_zod.z.object({currency:F,totalDeposits:_zod.z.number(),totalInterestEarned:_zod.z.number(),totalInterestPosted:_zod.z.number(),accountBalance:_zod.z.number(),totalOverdraftInterestDerived:_zod.z.number(),interestNotPosted:_zod.z.number(),lastInterestCalculationDate:_zod.z.array(_zod.z.number()),availableBalance:_zod.z.number()}),isLinkedToFloatingInterestRates:_zod.z.boolean(),interestRateDifferential:_zod.z.number(),overdraftInterestRateDifferential:_zod.z.number(),floatingRateId:_zod.z.number(),isBaseLendingRate:_zod.z.boolean(),isFloatingInterestRateCalculationAllowed:_zod.z.boolean(),bankDetails:_zod.z.object({routingNumber:_zod.z.string(),name:_zod.z.string(),swiftCode:_zod.z.string(),address:_zod.z.string(),city:_zod.z.string(),postcode:_zod.z.string()}),skipCollectTransferCharge:_zod.z.boolean(),cardRestricted:_zod.z.boolean(),overdraftLimit:_zod.z.number(),minRequiredBalance:_zod.z.number(),minBalanceForInterestCalculation:_zod.z.number(),minOverdraftForInterestCalculation:_zod.z.number(),overdraftMinimumDue:_zod.z.number(),currentFloatingInterestPeriod:_zod.z.object({fromDate:_zod.z.array(_zod.z.number()),interestRate:_zod.z.number(),isDifferentialToBLR:_zod.z.boolean()}),floatingRateName:_zod.z.string(),floatingRateDifferential:_zod.z.number(),parentAccount:_zod.z.object({withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),enforceMinRequiredBalance:_zod.z.boolean(),withHoldTax:_zod.z.boolean(),isDormancyTrackingActive:_zod.z.boolean(),isLinkedToFloatingInterestRates:_zod.z.boolean(),isBaseLendingRate:_zod.z.boolean(),skipCollectTransferCharge:_zod.z.boolean(),cardRestricted:_zod.z.boolean(),allowPrepaidCard:_zod.z.boolean(),prepaidAccount:_zod.z.boolean()}),allowPrepaidCard:_zod.z.boolean(),prepaidAccount:_zod.z.boolean(),prepaidLimitAmount:_zod.z.number()},Aa= exports.F =_zod.z.object(Wt),Ht= exports.G ={savingsAccounts:_zod.z.array(Vt)},Da= exports.H =_zod.z.object(Ht),Qt=_zod.z.enum(["showReservedAccount"]),Yt= exports.I ={tenantId:_zod.z.string().optional(),showReservedAccount:_zod.z.boolean().optional().default(!1)},Ea= exports.J =_zod.z.object(Yt),U=e=>Qt.parse(e),Oe=e=>{try{for(let[a,i]of Object.entries(e))if(U(a),i!=null)switch(a){case"showReservedAccount":_zod.z.boolean().parse(i);break}}catch(a){throw a instanceof _zod.z.ZodError?y({message:`Validation error: ${a.errors.map(i=>i.message).join(", ")}`,code:"validation_error"}):a}},Xt= exports.K ={clientId:_zod.z.number(),productId:_zod.z.number(),submittedOnDate:_zod.z.string(),nominalAnnualInterestRate:_zod.z.string(),minRequiredOpeningBalance:_zod.z.string(),lockinPeriodFrequency:_zod.z.string(),withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),overdraftLimit:_zod.z.number(),minOverdraftForInterestCalculation:_zod.z.number(),enforceMinRequiredBalance:_zod.z.boolean(),minRequiredBalance:_zod.z.number(),withHoldTax:_zod.z.boolean(),interestCompoundingPeriodType:_zod.z.number(),interestPostingPeriodType:_zod.z.number(),interestCalculationType:_zod.z.number(),interestCalculationDaysInYearType:_zod.z.number(),fieldOfficerId:_zod.z.number(),lockinPeriodFrequencyType:_zod.z.number(),locale:_zod.z.string(),dateFormat:_zod.z.string(),monthDayFormat:_zod.z.string(),charges:_zod.z.array(_zod.z.any())},Pa= exports.L =_zod.z.object(Xt);var Fa=e=>({input:e,metadata:{commandName:"GetAccount",path:`/v1/savingaccounts/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.get(`/v1/savingaccounts/${e.id}`)).data}catch(o){u(o)}}}),Ua= exports.N =e=>({input:e,metadata:{commandName:"UpdateAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/savingsaccounts/${e.accountId}`,{...e.updates,clientId:e.clientId})).data}catch(o){u(o)}}}),Ba= exports.O =e=>({input:e,metadata:{commandName:"DeleteAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/savingsaccounts/${e.accountId}`)).data}catch(o){u(o)}}}),Ne=(e,a,i)=>({where:d=>(U(d),{eq:c=>(Oe({[d]:c}),Ne({...e,[d]:c},a,i))}),execute:()=>({input:{filters:e,tenantId:i},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${a}/accounts`,method:"GET"},execute:async d=>{i&&(d.tenantId=i);let c=await m(d);try{return(await c.get(`/v1/clients/${a}/accounts`,{params:e})).data}catch(l){u(l)}}})}),ja= exports.P =e=>({list:()=>Ne({},_optionalChain([e, 'optionalAccess', _22 => _22.clientId])||0,_optionalChain([e, 'optionalAccess', _23 => _23.tenantId]))}),za= exports.Q =(e,a,i)=>({input:{params:a,configuration:i},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${e}/accounts`,method:"GET"},execute:async o=>{i.tenantId&&(o.tenantId=i.tenantId);let p=await m(o);try{return(await p.get(`/v1/clients/${e}/accounts`,{params:a})).data}catch(d){u(d)}}});var Jt=_zod.z.object({routingNumber:_zod.z.string(),swiftCode:_zod.z.string()}),B=_zod.z.object({accountNumber:_zod.z.string(),bankInformation:Jt}),j=_zod.z.object({line1:_zod.z.string(),line2:_zod.z.string(),city:_zod.z.string(),stateCode:_zod.z.string(),countryCode:_zod.z.string(),postalCode:_zod.z.string()}),Zt={id:_zod.z.number(),clientId:_zod.z.number(),nickName:_zod.z.string(),firstName:_zod.z.string(),lastName:_zod.z.string(),businessName:_zod.z.string(),emailAddress:_zod.z.string(),phoneNumber:_zod.z.string(),recipientType:_zod.z.string(),paymentRail:_zod.z.string(),isOwnAccount:_zod.z.boolean(),address:j,accountDetailsData:B},en=_zod.z.object(Zt),Ka=_zod.z.array(en),tn={limit:_zod.z.number().min(1).optional().describe("Maximum number of records to return. Defaults to 20 if not specified. Set to 0 to return all records."),offset:_zod.z.number().min(0).optional(),name:_zod.z.string().optional()},Va=_zod.z.object(tn),nn={nickName:_zod.z.string(),firstName:_zod.z.string(),lastName:_zod.z.string(),businessName:_zod.z.string().optional(),emailAddress:_zod.z.string().email(),phoneNumber:_zod.z.string(),recipientType:_zod.z.string(),paymentRail:R,isOwnAccount:_zod.z.boolean().optional(),address:j.optional(),accountDetailsData:B},Wa=_zod.z.object(nn).refine(e=>e.paymentRail==="WIRE"||e.paymentRail==="SWIFT"?e.address!==void 0&&e.address.stateCode!==void 0&&e.address.countryCode!==void 0:!0,{message:"Address with state code and country code is required for WIRE and SWIFT payment rails",path:["address"]}),an=_zod.z.enum(["name"]),rn=e=>an.parse(e),Le=e=>{try{rn(e)}catch(a){throw a instanceof _zod.ZodError?y({message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},ke=(e,a)=>{try{switch(e){case"name":_zod.z.string().parse(a);break;default:break}}catch(i){throw i instanceof _zod.ZodError?y({message:`Invalid value for '${e}': '${a}'. ${i.message}`,code:`invalid_${e}_value`}):i}},on={nickName:_zod.z.string().optional(),firstName:_zod.z.string().optional(),lastName:_zod.z.string().optional(),businessName:_zod.z.string().optional(),emailAddress:_zod.z.string().email().optional(),phoneNumber:_zod.z.string().optional(),recipientType:_zod.z.string().optional(),paymentRail:R.optional(),isOwnAccount:_zod.z.boolean().optional(),address:j.optional(),accountDetailsData:B.optional()},Ha=_zod.z.object(on).refine(e=>e.paymentRail&&e.address&&(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")?e.address.stateCode!==void 0&&e.address.countryCode!==void 0:!0,{message:"When updating address for WIRE/SWIFT payment rails, state code and country code are required",path:["address"]});var ar=e=>({input:e,metadata:{commandName:"GetRecipient",path:`/v1/clients/${e.clientId}/recipients/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.get(`/v1/clients/${e.clientId}/recipients/${e.id}`)).data}catch(o){u(o)}}}),rr= exports.S =e=>({input:e,metadata:{commandName:"CreateRecipient",path:`/v1/clients/${e.clientId}/recipients`,method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post(`/v1/clients/${e.clientId}/recipients`,e.recipient)).data}catch(o){u(o)}}}),ir= exports.T =e=>({input:e,metadata:{commandName:"DeleteRecipient",path:`/v1/clients/${e.clientId}/recipients/${e.recipientId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/clients/${e.clientId}/recipients/${e.recipientId}`)).data}catch(o){u(o)}}}),E=(e,a,i,o,p)=>({where:l=>(Le(l),{eq:g=>(ke(l,g),E(e,{...a,[l]:g},i,o,p))}),limit:l=>E(e,a,l,o,p),offset:l=>E(e,a,i,l,p),execute:()=>{let g={...{name:""},...a,limit:i||20,offset:o||0};return{input:{tenantId:p},metadata:{commandName:"ListRecipients",path:`/v1/clients/${e}/recipients`,method:"GET"},execute:async f=>{p&&(f.tenantId=p);let b=await m(f);try{return(await b.get(`/v1/clients/${e}/recipients`,{params:g})).data}catch(h){u(h)}}}}}),or= exports.U =e=>({list:()=>E(_optionalChain([e, 'optionalAccess', _24 => _24.clientId])||0,{},void 0,void 0,_optionalChain([e, 'optionalAccess', _25 => _25.tenantId]))}),sr= exports.V =(e,a,i)=>({input:{params:a,configuration:i},metadata:{commandName:"GetRecipients",path:`/v1/clients/${e}/recipients`,method:"GET"},execute:async o=>{i.tenantId&&(o.tenantId=i.tenantId);let p=await m(o);(!a.limit||a.limit<=0)&&(a.limit=20),a.name||(a.name="");try{return(await p.get(`/v1/clients/${e}/recipients`,{params:a})).data}catch(d){u(d)}}});var _graphql = require('graphql');var sn=`
  mutation updateRecipient($id: ID!, $input: UpdateRecipientInput!) {
    updateRecipient(id: $id, input: $input) {
      id
      clientId
      nickName
      firstName
      lastName
      businessName
      emailAddress
      phoneNumber
      recipientType
      paymentRail
      isOwnAccount
      address {
        line1
        line2
        city
        stateCode
        countryCode
        postalCode
      }
      accountDetailsData {
        accountNumber
        bankInformation {
          routingNumber
          swiftCode
        }
      }
    }
  }
`,dr= exports.X =e=>{let a=qe({command:sn,variables:{id:e.id,input:e.input},operationName:"updateRecipient",tenantId:e.tenantId});return{input:e,metadata:{commandName:"UpdateRecipientGQL",path:"/graphql",method:"POST"},execute:a.execute}};var qe=e=>({input:e,metadata:{commandName:e.operationName||"GraphQL",path:"/graphql",method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a),o=a.graphqlPath||"/graphql";try{let p=typeof e.command=="string"?e.command:_graphql.print.call(void 0, e.command),{data:d}=await i.post(o,{query:p,variables:e.variables,operationName:e.operationName});if(_optionalChain([d, 'access', _26 => _26.errors, 'optionalAccess', _27 => _27.length]))throw y({message:d.errors[0].message,code:"graphql_error",originalError:d.errors[0]});if(!d.data)throw y({message:"No data returned from GraphQL query",code:"graphql_no_data"});return d.data}catch(p){throw p.name==="CommandError"?p:y({message:p.message,code:"graphql_request_failed",originalError:p})}}});var Cr=e=>({input:e||{},metadata:{commandName:"GetUserDetail",path:"/v1/userdetails",method:"GET"},execute:async a=>{_optionalChain([e, 'optionalAccess', _28 => _28.tenantId])&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post("/v1/userdetails")).data}catch(o){u(o)}}});exports.a = y; exports.b = ln; exports.c = u; exports.d = m; exports.e = _; exports.f = S; exports.g = R; exports.h = v; exports.i = L; exports.j = ct; exports.k = In; exports.l = pt; exports.m = mt; exports.n = ut; exports.o = yt; exports.p = gt; exports.q = Rn; exports.r = Bn; exports.s = jn; exports.t = zn; exports.u = $n; exports.v = _n; exports.w = Gn; exports.x = ga; exports.y = fa; exports.z = ba; exports.A = ha; exports.B = Ca; exports.C = Ia; exports.D = Ra; exports.E = Wt; exports.F = Aa; exports.G = Ht; exports.H = Da; exports.I = Yt; exports.J = Ea; exports.K = Xt; exports.L = Pa; exports.M = Fa; exports.N = Ua; exports.O = Ba; exports.P = ja; exports.Q = za; exports.R = ar; exports.S = rr; exports.T = ir; exports.U = or; exports.V = sr; exports.W = qe; exports.X = dr; exports.Y = Cr;
