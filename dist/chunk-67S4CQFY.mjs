import{A as v,B as L,D as O,M as D,N as E,O as T,P as j,R as G,S as M,T as _,U as $,X as F,a as I,r as b,s as h,t as R,u as q,w as U,x as A,y as B,z as P}from"./chunk-ZRBPB43P.mjs";var w=d=>{let p=[];if(!d.baseUrl)p.push("baseUrl is required");else if(typeof d.baseUrl!="string")p.push("baseUrl must be a string");else try{new URL(d.baseUrl)}catch{p.push("baseUrl must be a valid URL")}return d.axiosConfig?.timeout!==void 0&&(typeof d.axiosConfig.timeout!="number"||d.axiosConfig.timeout<0)&&p.push("timeout must be a positive number"),p};var Z=d=>{let p=w(d);if(p.length>0)throw I({message:`Invalid configuration: ${p.join(", ")}`,code:"invalid_config"});let C=async(o,t,n)=>{if(d.middlewares)for(let e of d.middlewares)o==="before"&&e.before?await e.before(t):o==="after"&&e.after?await e.after(t,n):o==="onError"&&e.onError&&await e.onError(t,n)},f={...d},a=async o=>{try{await C("before",o);let t=await o.execute(f);return await C("after",o,t),t}catch(t){throw await C("onError",o,t),t}},x=o=>{let t=o||f.tenantId;return{payment:{create:n=>{let e=b({payment:n,tenantId:t});return{execute:async()=>a(e)}},get:n=>{let e=h({id:n,tenantId:t});return{execute:async()=>a(e)}},update:(n,e)=>{let s=R({id:n,payment:e,tenantId:t});return{execute:async()=>a(s)}},delete:n=>{let e=U({id:n,tenantId:t});return{execute:async()=>a(e)}},list:()=>{let e=q({tenantId:t}).list(),s=u=>({where:u.where,limit:i=>{let m=u.limit(i);return s(m)},offset:i=>{let m=u.offset(i);return s(m)},all:()=>{let i=u.all();return s(i)},execute:async()=>{let i=u.execute();return a(i)}});return s(e)}},client:{create:n=>{let e=v({clientData:n,tenantId:t});return{execute:async()=>a(e)}},get:n=>{let e=A({clientId:n,tenantId:t});return{execute:async()=>a(e)}},update:(n,e)=>{let s=B({clientId:n,updates:e,tenantId:t});return{execute:async()=>a(s)}},updateDocumentRecord:(n,e)=>{let s=P({clientId:n,identifierId:e.id,updates:e,tenantId:t});return{execute:async()=>a(s)}},delete:n=>{let e=O({clientId:n,tenantId:t});return{execute:async()=>a(e)}},for:n=>{let e=parseInt(n,10),u=j({clientId:e,tenantId:t}).list(),m=$({clientId:e,tenantId:t}).list(),H=async()=>{let r=u.execute();return(await a(r))?.savingsAccounts||[]},y=r=>({where:c=>{let l=r.where?r.where(c):r;return{eq:N=>{let g=l.eq?l.eq(N):l;return{where:Q=>y(g).where(Q),list:()=>y(g)}}}},execute:async()=>{let c=r.execute();return a(c)}});return{accounts:{get:r=>({execute:async()=>{let c=D({id:r,tenantId:t});return a(c)}}),getFromList:r=>({execute:async()=>(await H()).find(l=>l.id===r)||null}),update:(r,c)=>{let l=E({clientId:e,accountId:r,updates:c,tenantId:t});return{execute:async()=>a(l)}},delete:r=>{let c=T({accountId:r,tenantId:t});return{execute:async()=>a(c)}},where:r=>y(u).where(r),list:()=>y(u)},recipients:{create:r=>{let c=M({clientId:e,recipient:r,tenantId:t});return{execute:async()=>a(c)}},get:r=>({execute:async()=>{let c=G({clientId:e,id:r,tenantId:t});return a(c)}}),update:(r,c)=>{let l=F({id:r,input:c,tenantId:t});return{execute:async()=>a(l)}},delete:r=>{let c=_({clientId:e,recipientId:r,tenantId:t});return{execute:async()=>a(c)}},where:r=>y(m).where(r),list:()=>y(m)}}},list:()=>{let e=L({tenantId:t}).list(),s=u=>({where:u.where,limit:i=>{let m=u.limit(i);return s(m)},offset:i=>{let m=u.offset(i);return s(m)},all:()=>{let i=u.all();return s(i)},execute:async()=>{let i=u.execute();return a(i)}});return s(e)}}}};return{setConfig:o=>{f=o},updateConfig:o=>{let t={...f,...o,axiosConfig:{...f.axiosConfig,...o.axiosConfig,headers:{...f.axiosConfig?.headers,...o.axiosConfig?.headers}}},n=w(t);if(n.length>0)throw I({message:`Invalid configuration: ${n.join(", ")}`,code:"invalid_config"});f=t},resetConfig:()=>{f=d},request:a,tenant:o=>x(o),...x()}};export{Z as a};
