import{a as c,c as y,d as u}from"./chunk-RX3BFHHX.mjs";var x=e=>{let a=[];if(!e.baseUrl)a.push("baseUrl is required");else if(typeof e.baseUrl!="string")a.push("baseUrl must be a string");else try{new URL(e.baseUrl)}catch{a.push("baseUrl must be a valid URL")}return e.axiosConfig?.timeout!==void 0&&(typeof e.axiosConfig.timeout!="number"||e.axiosConfig.timeout<0)&&a.push("timeout must be a positive number"),a};import{z as t}from"zod";var v=t.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),l=t.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),E=t.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),S=t.enum(["CREDIT","DEBIT"]),R=t.enum(["ASC","DESC"]),H=v.options,Y=l.options,W=E.options,X=S.options,J=R.options,b=e=>v.parse(e),T=e=>l.parse(e),w=e=>E.parse(e),A=e=>S.parse(e),U=e=>R.parse(e),D=t.object({id:t.string(),amount:t.number().positive(),clientId:t.string(),currency:t.string().min(3).max(3),status:l.optional(),createdAt:t.string().optional(),updatedAt:t.string().optional()}).catchall(t.any()),_=t.object({streetAddress:t.string().optional(),city:t.string().optional(),state:t.string().optional(),country:t.string().optional(),postalCode:t.string().optional()}).optional(),V=t.object({name:t.string().optional(),identifier:t.string().optional(),address:_}).optional(),h=t.object({name:t.string(),identifier:t.string(),accountType:t.enum(["CHECKING","SAVINGS"]).optional(),address:_,agent:V}),G=t.object({amount:t.number().positive(),currency:t.string().min(3).max(3),paymentRail:E,paymentType:S,debtor:h,creditor:h,clientId:t.string().optional(),correspondent:h.optional(),exchangeRate:t.number().positive().optional(),externalId:t.string().optional(),reference:t.union([t.string(),t.array(t.string())]).optional(),paymentRailMetaData:t.record(t.string(),t.any()).optional(),chargeBearer:t.enum(["OUR","BEN","SHA"]).optional(),purposeCode:t.string().optional(),valueDate:t.string().optional(),executionDate:t.string().optional()}).catchall(t.any()).refine(e=>(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")&&e.creditor?e.creditor.address&&e.creditor.address.state&&e.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),q=t.object({amount:t.number().positive().optional(),correspondent:t.object({name:t.string().optional(),identifier:t.string().optional(),accountType:t.string().optional()}).optional(),creditor:t.object({name:t.string().optional(),identifier:t.string().optional(),accountType:t.string().optional(),agent:t.object({name:t.string().optional(),identifier:t.string().optional()}).optional()}).optional(),debtor:t.object({name:t.string().optional(),identifier:t.string().optional(),accountType:t.string().optional(),agent:t.object({name:t.string().optional(),identifier:t.string().optional()}).optional()}).optional(),exchangeRate:t.number().positive().optional(),externalId:t.string().optional(),errorCode:t.string().optional(),errorMessage:t.string().optional(),reference:t.union([t.string(),t.array(t.string())]).optional(),paymentRailMetaData:t.record(t.string(),t.any()).optional(),status:l.optional()}).catchall(t.any()),Q=t.object({totalFilteredRecords:t.number(),pageItems:t.array(D)}),g=e=>D.parse(e),N=e=>G.parse(e),L=e=>q.parse(e);import{ZodError as P}from"zod";var k=e=>{try{b(e)}catch(a){throw a instanceof P?c({message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},z=(e,a)=>{try{switch(e){case"status":T(a);break;case"paymentRail":w(a);break;case"paymentType":A(a);break;case"sortOrder":U(a);break;default:break}}catch(o){throw o instanceof P?c({message:`Invalid value for '${e}': '${a}'. ${o.message}`,code:`invalid_${e}_value`}):o}},O=e=>({input:e,metadata:{commandName:"CreatePayment",path:"/v1/transfers",method:"POST"},execute:async a=>{try{N(e.payment)}catch(n){throw n instanceof P?c({message:`Invalid payment data: ${n.message}`,code:"invalid_payment_input"}):n}e.tenantId&&(a.tenantId=e.tenantId);let o=await u(a);try{let n=await o.post("/v1/transfers",e.payment);return g(n.data)}catch(n){y(n)}}}),F=e=>({input:e,metadata:{commandName:"GetPayment",path:`/v1/transfers/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let o=await u(a);try{let n=await o.get(`/v1/transfers/${e.id}`);return g(n.data)}catch(n){y(n)}}}),$=e=>({input:e,metadata:{commandName:"UpdatePayment",path:`/v1/transfers/${e.id}`,method:"PUT"},execute:async a=>{try{L(e.payment)}catch(n){throw n instanceof P?c({message:`Invalid payment update data: ${n.message}`,code:"invalid_payment_update_input"}):n}e.tenantId&&(a.tenantId=e.tenantId);let o=await u(a);try{let n=await o.put(`/v1/transfers/${e.id}`,e.payment);return g(n.data)}catch(n){y(n)}}}),f=(e,a,o,n)=>({where:m=>(k(m),{eq:r=>(z(m,r),f({...e,[m]:r},a,o,n))}),limit:m=>f(e,m,o,n),offset:m=>f(e,a,m,n),execute:()=>{let m={...e,limit:a||200,offset:o||0};return{input:{filters:e,limit:a,offset:o,tenantId:n},metadata:{commandName:"GetPayments",path:"/v1/transfers",method:"GET"},execute:async r=>{n&&(r.tenantId=n);let i=await u(r);try{return(await i.get("/v1/transfers",{params:m})).data.pageItems}catch(p){y(p)}}}}}),j=e=>({list:()=>f({},void 0,void 0,e?.tenantId)}),M=e=>({input:e,metadata:{commandName:"DeletePayment",path:`/v1/transfers/${e.id}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let o=await u(a);try{await o.delete(`/v1/transfers/${e.id}`)}catch(n){y(n)}}});var pt=e=>{let a=x(e);if(a.length>0)throw c({message:`Invalid configuration: ${a.join(", ")}`,code:"invalid_config"});let o=async(r,i,p)=>{if(e.middlewares)for(let s of e.middlewares)r==="before"&&s.before?await s.before(i):r==="after"&&s.after?await s.after(i,p):r==="onError"&&s.onError&&await s.onError(i,p)},n={...e},d=async r=>{try{await o("before",r);let i=await r.execute(n);return await o("after",r,i),i}catch(i){throw await o("onError",r,i),i}},I=r=>{let i=r||n.tenantId;return{payment:{create:async p=>{let s=O({payment:p,tenantId:i});return{execute:async()=>d(s)}},get:async p=>{let s=F({id:p,tenantId:i});return{execute:async()=>d(s)}},update:async(p,s)=>{let C=$({id:p,payment:s,tenantId:i});return{execute:async()=>d(C)}},delete:async p=>{let s=M({id:p,tenantId:i});return{execute:async()=>d(s)}},list:()=>{let s=j({tenantId:i}).list();return{where:s.where,limit:s.limit,offset:s.offset,execute:async()=>{let C=s.execute();return d(C)}}}}}};return{setConfig:r=>{n=r},updateConfig:r=>{let i={...n,...r,axiosConfig:{...n.axiosConfig,...r.axiosConfig,headers:{...n.axiosConfig?.headers,...r.axiosConfig?.headers}}},p=x(i);if(p.length>0)throw c({message:`Invalid configuration: ${p.join(", ")}`,code:"invalid_config"});n=i},resetConfig:()=>{n=e},request:d,tenant:r=>I(r),...I()}};export{O as a,F as b,$ as c,j as d,pt as e};
