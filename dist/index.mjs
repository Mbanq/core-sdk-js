import{a as K}from"./chunk-ICLPMQUX.mjs";import{a as Q,b as B}from"./chunk-VKDW7GQQ.mjs";import{A as M,C as L,D as Z,E as v,F as E,G as I,H as D,I as q,J as G,K as N,L as F,M as O,N as T,O as $,P as k,Q as z,W as _,Y as j,a as n,b as s,e as i,f as m,g as c,h as p,i as d,j as u,k as y,l,m as f,n as S,o as g,p as P,q as h,r as C,s as x,t as A,v as U,x as R,y as w,z as b}from"./chunk-PEZBB7Q7.mjs";var H=(a=console)=>({before:async t=>{a.info(`Executing ${t.metadata.commandName}`,{input:t.input,metadata:t.metadata})},after:async(t,r)=>{a.info(`Completed ${t.metadata.commandName}`,{response:r,metadata:t.metadata})},onError:async(t,r)=>{a.error(`Error in ${t.metadata.commandName}`,{error:r,input:t.input,metadata:t.metadata})}});var J=a=>({before:async t=>{a.incrementCounter(`${t.metadata.commandName}_started`)},after:async t=>{a.incrementCounter(`${t.metadata.commandName}_completed`)},onError:async(t,r)=>{a.incrementCounter(`${t.metadata.commandName}_error`),a.recordError&&typeof a.recordError=="function"&&a.recordError(r)}});import{z as e}from"zod";var V=e.object({id:e.number(),name:e.string(),description:e.string(),disabled:e.boolean(),isSelfService:e.boolean(),position:e.number()}),o={username:e.string(),userId:e.number(),accessToken:e.string(),authenticated:e.boolean(),officeId:e.number(),officeName:e.string(),roles:e.array(V),permissions:e.array(e.string()),shouldRenewPassword:e.boolean(),isTwoFactorAuthenticationRequired:e.boolean(),isSelfServiceUser:e.boolean()},W=e.object(o);export{M as CreateClient,C as CreatePayment,f as CreatePaymentInputShape,S as CreatePaymentInputZod,$ as DeleteAccount,Z as DeleteClient,O as GetAccount,z as GetAccountsOfClient,R as GetClient,L as GetClients,x as GetPayment,U as GetPayments,j as GetUserDetail,_ as GraphQL,k as ListAccountsOfClient,I as ListAccountsOfClientResponseShape,D as ListAccountsOfClientResponseZod,q as ListAccountsRequestShape,G as ListAccountsRequestZod,i as PaymentFilterKeyZod,u as PaymentFilterShape,y as PaymentFiltersZod,c as PaymentRailZod,h as PaymentResponseZod,l as PaymentShape,m as PaymentStatusZod,p as PaymentTypeZod,v as SavingAccountShape,E as SavingAccountZod,Q as SendAuthorizationToCore,d as SortOrderZod,T as UpdateAccount,N as UpdateAccountRequestShape,F as UpdateAccountRequestZod,B as UpdateCardID,w as UpdateClient,b as UpdateClientIdentifier,A as UpdatePayment,g as UpdatePaymentInputShape,P as UpdatePaymentInputZod,W as UserDetailSchema,o as UserDetailShape,K as createClient,n as createCommandError,H as createLoggingMiddleware,J as createMetricsMiddleware,s as isCommandError};
