import{a as c,c as o}from"./chunk-YPDJGVWM.mjs";import T from"axios";import{v4 as R}from"uuid";import*as f from"https";import y from"axios";import x from"jsonwebtoken";var p=(t,e)=>{if(!t)throw new Error("Missing JWT secret");return x.sign({signee:e},t,{algorithm:"HS512",expiresIn:"1d"})||""},l=async(t,e,n,r)=>{let a={method:"POST",url:`${e}/oauth/token`,headers:{"Content-Type":"application/x-www-form-urlencoded",tenantId:n},data:r},{data:{access_token:i}}=await y.request(a);return t=i,t};var I={token:""},s=async t=>{let n=T.create({timeout:t.axiosConfig?.timeout||29e3,baseURL:t.baseUrl,headers:{"Content-Type":"application/json; charset=utf-8","JWT-Token":t?.secret?`${p(t?.secret,t?.signee||"")}`:void 0,Authorization:t.credential?`Bearer ${I.token||await l(I.token,t.baseUrl,t.tenantId,t.credential)}`:void 0,"trace-id":t.traceId||`RequestUUID=${R()}`,tenantId:t.tenantId},httpsAgent:new f.Agent({rejectUnauthorized:!0,keepAlive:t.axiosConfig?.keepAlive})});return t.logger&&t.logger(n),n};import A from"axios";var _=t=>({input:t,metadata:{commandName:"CreateTransfer",path:"/v1/transfers",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.post("/v1/transfers",t.transfer)).data}catch(r){o(r)}}}),G=t=>({input:t,metadata:{commandName:"GetTransfer",path:`/v1/transfers/${t.id}`,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.get(`/v1/transfers/${t.id}`)).data}catch(r){o(r)}}}),M=t=>{let e={paymentType:t.paymentType,status:t.transferStatus||"EXECUTION_SCHEDULED",toExecuteDate:t.executedAt,locale:"en",dateFormat:"yyyy-MM-dd",associateClientData:!0,originatedBy:"us",accountType:t.accountType};return{input:t,metadata:{commandName:"GetTransfers",path:"/v1/transfers",method:"GET"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await s(n),a=[],i=t.queryLimit||200,d=0,m=0,g={...e,limit:i,offset:d};try{do{let u=await r.get("/v1/transfers",{params:g}),{totalFilteredRecords:C,pageItems:h}=u.data;a.push(...h),m=C,d+=i}while(d<m);return a}catch(u){o(u)}}}},L=t=>{let e={...t,paymentType:t.paymentType||"ACH"};return{input:t,metadata:{commandName:"MarkAsSuccess",path:"/v1/external-transfers?command=MARK_AS_SUCCESS",method:"POST"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await s(n);try{return(await r.post("/v1/external-transfers?command=MARK_AS_SUCCESS",e)).data}catch(a){o(a)}}}},q=t=>({input:t,metadata:{commandName:"MarkAsProcessing",path:"/v1/external-transfers?command=MARK_AS_PROCESSING",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.post("/v1/external-transfers?command=MARK_AS_PROCESSING",t)).data}catch(r){o(r)}}}),F=t=>({input:t,metadata:{commandName:"MarkAsReturned",path:"/v1/external-transfers?command=MARK_AS_RETURN",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.post("/v1/external-transfers?command=MARK_AS_RETURN",{...t})).data}catch(r){o(r)}}}),z=t=>{let e={...t.payload};return{input:t,metadata:{commandName:"LogFailTransfer",path:"/v1/external-transfers?command=LOG_FAILURE",method:"POST"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await s(n);try{return(await r.post("/v1/external-transfers?command=LOG_FAILURE",e)).data}catch(a){throw A.isAxiosError(a)?c({message:"LogFailTransfer command failed",statusCode:a.response?.status,code:a.code,requestId:a.response?.headers?.["x-request-id"],originalError:a}):a}}}},Q=t=>({input:t,metadata:{commandName:"MarkAsFail",path:"/v1/external-transfers?command=MARK_AS_FAIL",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.post("/v1/external-transfers?command=MARK_AS_FAIL",t)).data}catch(r){o(r)}}}),j=t=>{let e={traceNumbers:t.traceNumbers};return{input:t,metadata:{commandName:"UpdateTraceNumber",path:`/v1/external-transfers/${t.externalId}`,method:"PUT"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await s(n);try{return(await r.put(`/v1/external-transfers/${t.externalId}`,e)).data}catch(a){o(a)}}}};var H=t=>{let e=t.skipNotification&&"?skipNotification=true"||"",n=t.card.cardType==="CREDIT"?"creditcards":"cards",r={...t.payload,query:e,flag:t.flag};return{input:t,metadata:{commandName:"SendAuthorizationToCore",path:`/${n}/${t.card.internalCardId}/authorization${e}`,method:"POST"},execute:async a=>{t.tenantId&&(a.tenantId=t.tenantId);let i=await s(a);try{return await i.post(`/${n}/${t.card.internalCardId}/authorization${e}`,r)}catch(d){o(d)}}}},B=t=>({input:t,metadata:{commandName:"UpdateCardID",path:`/clients/${t.clientId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{await n.put(`/clients/${t.clientId}`,{businessCardIDURL:t.businessCardIDURL,businessCardIDQRCode:t.businessCardIDQRCode})}catch(r){o(r)}}});var Z=t=>({input:t,metadata:{commandName:"GetClientData",path:`/v1/clients/${t.clientId}`,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e),r={clientData:void 0,riskRatingData:void 0,clientAddressData:void 0,clientIdentifierData:void 0};try{return r.clientData=await n.get(`/v1/clients/${t.clientId}`),t.riskRating&&(r.riskRatingData=await n.get(`/v1/clients/${t.clientId}/riskrating`)),t.clientAddress&&(r.clientAddressData=await n.get(`/v1/client/${t.clientId}/addresses`)),t.clientIdentifier&&(r.clientIdentifierData=await n.get(`/v1/clients/${t.clientId}/identifiers?unmaskValue=true`)),r}catch(a){o(a)}}}),tt=t=>({input:t,metadata:{commandName:"UpdateClient",path:`/v1/clients/${t.clientId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.put(`/v1/clients/${t.clientId}`,{...t.updates})).data}catch(r){o(r)}}}),et=t=>({input:t,metadata:{commandName:"UpdateClientIdentifier",path:`/v1/clients/${t.clientId}/identifiers/${t.identifierId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e);try{return(await n.put(`/v1/clients/${t.clientId}/identifiers/${t.identifierId}`,{...t.updates})).data}catch(r){o(r)}}});import{print as P}from"graphql";var ot=t=>({input:t,metadata:{commandName:t.operationName||"GraphQL",path:"/graphql",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await s(e),r=e.graphqlPath||"/graphql";try{let a=typeof t.command=="string"?t.command:P(t.command),{data:i}=await n.post(r,{query:a,variables:t.variables,operationName:t.operationName});if(i.errors?.length)throw c({message:i.errors[0].message,code:"graphql_error",originalError:i.errors[0]});if(!i.data)throw c({message:"No data returned from GraphQL query",code:"graphql_no_data"});return i.data}catch(a){throw a.name==="CommandError"?a:c({message:a.message,code:"graphql_request_failed",originalError:a})}}});export{s as a,_ as b,G as c,M as d,L as e,q as f,F as g,z as h,Q as i,j,H as k,B as l,Z as m,tt as n,et as o,ot as p};
