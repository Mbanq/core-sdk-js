"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var u=({message:e,statusCode:o,code:r,requestId:i,originalError:m})=>({name:"CommandError",message:e,statusCode:o,code:r,requestId:i,originalError:m}),Gt= exports.b =e=>typeof e=="object"&&e!==null&&"name"in e&&e.name==="CommandError",Xe=e=>{if(!e||typeof e!="object")return e;let o={...e};if(o.config&&typeof o.config=="object"){let r=o.config;if(r.httpsAgent&&typeof r.httpsAgent=="object"){let i=r.httpsAgent;delete i.sockets,delete i.freeSockets,delete i._sessionCache}}return o},p= exports.c =e=>{if(_axios2.default.isAxiosError(e)){let o=_optionalChain([e, 'access', _2 => _2.response, 'optionalAccess', _3 => _3.data, 'optionalAccess', _4 => _4.message]),r=_optionalChain([e, 'access', _5 => _5.response, 'optionalAccess', _6 => _6.status])?`Request failed with status code ${e.response.status}`:e.message||"Request failed";throw u({message:o||r,statusCode:_optionalChain([e, 'access', _7 => _7.response, 'optionalAccess', _8 => _8.status]),code:e.code,requestId:_optionalChain([e, 'access', _9 => _9.response, 'optionalAccess', _10 => _10.headers, 'optionalAccess', _11 => _11["x-request-id"]]),originalError:Xe(e)})}throw e};var _zod = require('zod'); var _zod2 = _interopRequireDefault(_zod);var q=_zod.z.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),S= exports.f =_zod.z.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),R= exports.g =_zod.z.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),v= exports.h =_zod.z.enum(["CREDIT","DEBIT"]),N= exports.i =_zod.z.enum(["ASC","DESC"]),Ht=q.options,Yt=S.options,Jt=R.options,Xt=v.options,Qt=N.options,j=e=>q.parse(e),z=e=>S.parse(e),$=e=>R.parse(e),_=e=>v.parse(e),M=e=>N.parse(e),V=_zod.z.string().min(1),G=_zod.z.string().min(1),K=_zod.z.string().min(1),W=_zod.z.string().min(1),H=_zod.z.string().min(1),Y=_zod.z.string().min(1),J=_zod.z.string().min(1),X=_zod.z.string().min(1),Q=_zod.z.string().min(1),Z=_zod.z.union([_zod.z.string(),_zod.z.number()]),ee=_zod.z.string(),te=_zod.z.string(),ne=_zod.z.string(),T=_zod.z.string(),k=_zod.z.string(),L=_zod.z.string(),ae=_zod.z.boolean(),oe=_zod.z.string(),re=e=>V.parse(e),ie=e=>G.parse(e),se=e=>K.parse(e),ce=e=>W.parse(e),le=e=>H.parse(e),pe=e=>Y.parse(e),de=e=>J.parse(e),me=e=>X.parse(e),ue=e=>Q.parse(e),ye=e=>Z.parse(e),ge=e=>ee.parse(e),fe=e=>te.parse(e),be=e=>ne.parse(e),Ce=e=>T.parse(e),he=e=>k.parse(e),Ie=e=>L.parse(e),xe=e=>ae.parse(e),Se=e=>oe.parse(e),Qe= exports.j ={originatorName:V.optional(),originatorAccount:G.optional(),originatorBankRoutingCode:K.optional(),recipientName:W.optional(),recipientAccount:H.optional(),recipientBankRoutingCode:Y.optional(),reference:J.optional(),traceNumber:X.optional(),externalId:Q.optional(),clientId:Z.optional(),dateFormat:ee.optional(),locale:te.optional(),originatedBy:ne.optional(),paymentRail:R.optional(),paymentType:v.optional(),fromValueDate:T.optional(),toValueDate:T.optional(),fromExecuteDate:k.optional(),toExecuteDate:k.optional(),status:S.optional(),fromReturnDate:L.optional(),toReturnDate:L.optional(),isSettlement:ae.optional(),orderBy:oe.optional(),sortOrder:N.optional(),limit:_zod.z.number().min(0).optional().describe("Maximum number of records to return. Defaults to 20 if not specified. Set to 0 to return all records."),offset:_zod.z.number().min(0).optional()},Zt= exports.k =_zod.z.object(Qe).partial();var Ze={id:_zod.z.number(),clientId:_zod.z.number(),amount:_zod.z.number().positive(),correlationId:_zod.z.string(),paymentType:v,paymentRail:R,recipient:_zod.z.object({cardId:_zod.z.string().optional(),recipientType:_zod.z.string(),address:_zod.z.object({line1:_zod.z.string().optional(),line2:_zod.z.string().optional(),stateCode:_zod.z.string().optional(),countryCode:_zod.z.string(),postalCode:_zod.z.string().optional()}),name:_zod.z.string()}),originator:_zod.z.object({accountId:_zod.z.string().optional(),recipientType:_zod.z.string(),address:_zod.z.object({line1:_zod.z.string().optional(),line2:_zod.z.string().optional(),stateCode:_zod.z.string().optional(),countryCode:_zod.z.string(),postalCode:_zod.z.string().optional()}),name:_zod.z.string()}),executedAt:_zod.z.string(),createdAt:_zod.z.string(),externalId:_zod.z.string(),status:S,paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),currencyData:_zod.z.object({code:_zod.z.string(),name:_zod.z.string(),decimalPlaces:_zod.z.number(),displaySymbol:_zod.z.string(),nameCode:_zod.z.string(),currencyCodeInDigit:_zod.z.number(),isBaseCurrency:_zod.z.boolean()}),currency:_zod.z.string().min(3).max(3)},Re=_zod.z.object(Ze).catchall(_zod.z.any()),ve=_zod.z.object({streetAddress:_zod.z.string().optional(),city:_zod.z.string().optional(),state:_zod.z.string().optional(),country:_zod.z.string().optional(),postalCode:_zod.z.string().optional()}).optional(),et=_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),address:ve}).optional(),w=_zod.z.object({name:_zod.z.string(),identifier:_zod.z.string(),accountType:_zod.z.enum(["CHECKING","SAVINGS"]).optional(),address:ve,agent:et}),tt= exports.m ={amount:_zod.z.number().positive(),currency:_zod.z.string().min(3).max(3),paymentRail:R,paymentType:v,debtor:w,creditor:w,clientId:_zod.z.string().optional(),correspondent:w.optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),chargeBearer:_zod.z.enum(["OUR","BEN","SHA"]).optional(),purposeCode:_zod.z.string().optional(),valueDate:_zod.z.string().optional(),executionDate:_zod.z.string().optional()},nt= exports.n =_zod.z.object(tt).catchall(_zod.z.any()).refine(e=>(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")&&e.creditor?e.creditor.address&&e.creditor.address.state&&e.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),at= exports.o ={amount:_zod.z.number().positive().optional(),correspondent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional()}).optional(),creditor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),debtor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),errorCode:_zod.z.string().optional(),errorMessage:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),status:S.optional()},ot= exports.p =_zod.z.object(at).catchall(_zod.z.any()),en= exports.q =_zod.z.object({totalFilteredRecords:_zod.z.number(),pageItems:_zod.z.array(Re)}),P=e=>Re.parse(e),De=e=>nt.parse(e),Ae=e=>ot.parse(e);var tn=_zod.z.object({id:_zod.z.string(),clientId:_zod.z.number(),resourceId:_zod.z.number(),resourceIdentifier:_zod.z.string()});var _uuid = require('uuid');var _https = require('https'); var we = _interopRequireWildcard(_https);var _jsonwebtoken = require('jsonwebtoken'); var _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);var Pe=(e,o)=>{if(!e)throw u({message:"Missing JWT secret",code:"missing_jwt_secret"});return _jsonwebtoken2.default.sign({signee:o},e,{algorithm:"HS512",expiresIn:"1d"})||""},Oe=async(e,o,r,i)=>{let m={method:"POST",url:`${o}/oauth/token`,headers:{"Content-Type":"application/x-www-form-urlencoded",tenantId:r},data:i},{data:{access_token:l}}=await _axios2.default.request(m);return e=l,e};var Ee={token:""},lt=e=>e&&(e.startsWith("Bearer ")?e:`Bearer ${e}`),d= exports.d =async e=>{let r=_axios2.default.create({timeout:_optionalChain([e, 'access', _12 => _12.axiosConfig, 'optionalAccess', _13 => _13.timeout])||29e3,baseURL:e.baseUrl,headers:{"Content-Type":"application/json; charset=utf-8","JWT-Token":_optionalChain([e, 'optionalAccess', _14 => _14.secret])?`${Pe(_optionalChain([e, 'optionalAccess', _15 => _15.secret]),_optionalChain([e, 'optionalAccess', _16 => _16.signee])||"")}`:void 0,Authorization:e.bearerToken!==void 0?lt(e.bearerToken):e.credential?`Bearer ${Ee.token||await Oe(Ee.token,e.baseUrl,e.tenantId,e.credential)}`:void 0,"trace-id":e.traceId||`RequestUUID=${_uuid.v4.call(void 0, )}`,tenantId:e.tenantId},httpsAgent:new we.Agent({rejectUnauthorized:!0,keepAlive:_optionalChain([e, 'access', _17 => _17.axiosConfig, 'optionalAccess', _18 => _18.keepAlive])})});return e.logger&&e.logger(r),r};var pt=e=>{try{j(e)}catch(o){throw o instanceof _zod.ZodError?u({message:`Invalid filter key: '${e}'. ${o.message}`,code:"invalid_filter_key"}):o}},dt=(e,o)=>{try{switch(e){case"status":z(o);break;case"paymentRail":$(o);break;case"paymentType":_(o);break;case"sortOrder":M(o);break;case"originatorName":re(o);break;case"originatorAccount":ie(o);break;case"originatorBankRoutingCode":se(o);break;case"recipientName":ce(o);break;case"recipientAccount":le(o);break;case"recipientBankRoutingCode":pe(o);break;case"reference":de(o);break;case"traceNumber":me(o);break;case"externalId":ue(o);break;case"clientId":ye(o);break;case"dateFormat":ge(o);break;case"locale":fe(o);break;case"originatedBy":be(o);break;case"fromValueDate":case"toValueDate":Ce(o);break;case"fromExecuteDate":case"toExecuteDate":he(o);break;case"fromReturnDate":case"toReturnDate":Ie(o);break;case"isSettlement":xe(o);break;case"orderBy":Se(o);break;default:break}}catch(r){throw r instanceof _zod.ZodError?u({message:`Invalid value for '${e}': '${o}'. ${r.message}`,code:`invalid_${e}_value`}):r}},bn= exports.r =e=>({input:e,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async o=>{try{De(e.payment)}catch(i){throw i instanceof _zod.ZodError?u({message:`Invalid payment data: ${i.message}`,code:"invalid_payment_input"}):i}e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{let i=await r.post("/v1/payments",e.payment);return P(i.data)}catch(i){p(i)}}}),Cn= exports.s =e=>({input:e,metadata:{commandName:"GetPayment",path:`/v1/payments/${e.id}`,method:"GET"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{let i=await r.get(`/v1/payments/${e.id}`);return P(i.data)}catch(i){p(i)}}}),hn= exports.t =e=>({input:e,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${e.id}`,method:"PUT"},execute:async o=>{try{Ae(e.payment)}catch(i){throw i instanceof _zod.ZodError?u({message:`Invalid payment update data: ${i.message}`,code:"invalid_payment_update_input"}):i}e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{let i=await r.put(`/v1/payments/${e.id}`,e.payment);return P(i.data)}catch(i){p(i)}}}),D=(e,o,r,i)=>{if(o!==void 0&&o!==0&&o<=0)throw u({message:`Invalid limit: ${o}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(r!==void 0&&r<0)throw u({message:`Invalid offset: ${r}. Offset must be non-negative.`,code:"invalid_offset"});return{where:s=>(pt(s),{eq:c=>(dt(s,c),D({...e,[s]:c},o,r,i))}),limit:s=>D(e,s,r,i),offset:s=>D(e,o,s,i),all:()=>D(e,0,r,i),execute:()=>{let s={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},c={...s,...e,limit:o||200,offset:r||0};return{input:{filters:e,limit:o,offset:r,tenantId:i},metadata:{commandName:"ListPayments",path:"/v1/payments",method:"GET"},execute:async y=>{i&&(y.tenantId=i);let g=await d(y);try{if(o===0){let b=[],C=r||0,h=0;do{let I={...s,...e,limit:200,offset:C},x=await g.get("/v1/payments",{params:I}),{totalFilteredRecords:E,pageItems:Ye}=x.data;b.push(...Ye),h=E,C+=200}while(C<h);return{totalFilteredRecords:h,pageItems:b}}else return(await g.get("/v1/payments",{params:c})).data}catch(b){p(b)}}}}}},In= exports.u =e=>({list:()=>D({},void 0,void 0,_optionalChain([e, 'optionalAccess', _19 => _19.tenantId]))}),xn= exports.v =(e,o)=>({input:{params:e,configuration:o},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async r=>{o.tenantId&&(r.tenantId=o.tenantId);let i=await d(r),m=[],l=e.limit||20,s=e.offset||0,c=0,b={...{locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},...(f=>{let h=["fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","fromReturnDate","toReturnDate"].some(x=>f[x]!==void 0),I={...f};return h&&I.dateFormat===void 0&&(I.dateFormat="yyyy-MM-dd"),I})(e),limit:l,offset:s};try{if(e.limit===0){do{let f=await i.get("/v1/payments",{params:b}),{totalFilteredRecords:C,pageItems:h}=f.data;m.push(...h),c=C,s+=l}while(s<c);return{totalFilteredRecords:c,pageItems:m}}else return(await i.get("/v1/payments",{params:b})).data}catch(f){p(f)}}}),Sn= exports.w =e=>({input:e,metadata:{commandName:"DeletePayment",path:`/v1/payments/${e.id}`,method:"DELETE"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{await r.delete(`/v1/payments/${e.id}`)}catch(i){p(i)}}});var Te=_zod2.default.object({id:_zod2.default.number(),code:_zod2.default.string(),value:_zod2.default.string()}),ke=_zod2.default.object({id:_zod2.default.number(),code:_zod2.default.string(),value:_zod2.default.string()}),Le=_zod2.default.object({active:_zod2.default.boolean(),mandatory:_zod2.default.boolean(),systemDefined:_zod2.default.boolean()}),Ne=_zod2.default.object({id:_zod2.default.number()}),Fe=_zod2.default.object({id:_zod2.default.number(),name:_zod2.default.string().optional()}),Be=_zod2.default.object({active:_zod2.default.boolean()}),Ue=_zod2.default.object({submittedOnDate:_zod2.default.array(_zod2.default.number()),submittedByUsername:_zod2.default.string().optional(),submittedByFirstname:_zod2.default.string().optional(),submittedByLastname:_zod2.default.string().optional(),activatedOnDate:_zod2.default.array(_zod2.default.number()).optional(),activatedByUsername:_zod2.default.string().optional(),activatedByFirstname:_zod2.default.string().optional(),activatedByLastname:_zod2.default.string().optional()}),mt=_zod2.default.object({}).catchall(_zod2.default.any()),ut=_zod2.default.object({}).catchall(_zod2.default.any()),yt=_zod2.default.object({}).catchall(_zod2.default.any()),qe=_zod2.default.object({constitution:mt,mainBusinessLine:ut,countryOfIncorporation:yt}).catchall(_zod2.default.any()),je=_zod2.default.object({isExternalCardDebitDisable:_zod2.default.boolean(),isExternalCardCreditDisable:_zod2.default.boolean(),isAchDebitOutgoingDisable:_zod2.default.boolean(),isAchCreditOutgoingDisable:_zod2.default.boolean(),isAchDebitIncomingDisable:_zod2.default.boolean(),isAchCreditIncomingDisable:_zod2.default.boolean(),isInternalCreditDisable:_zod2.default.boolean(),isInternalDebitDisable:_zod2.default.boolean(),isWireCreditOutgoingDisable:_zod2.default.boolean(),isWireCreditIncomingDisable:_zod2.default.boolean(),isSwiftCreditOutgoingDisable:_zod2.default.boolean(),isSwiftCreditIncomingDisable:_zod2.default.boolean(),isFxpayCreditOutgoingDisable:_zod2.default.boolean(),isAllocateToSubAccountDisable:_zod2.default.boolean(),isInternalCreditOwnDisable:_zod2.default.boolean(),type:_zod2.default.string(),resourceId:_zod2.default.number(),id:_zod2.default.number()}).catchall(_zod2.default.any()),ze=_zod2.default.object({}).catchall(_zod2.default.any()),$e=_zod2.default.object({id:_zod2.default.number(),accountNo:_zod2.default.string(),status:ke,subStatus:Le,active:_zod2.default.boolean(),activationDate:_zod2.default.array(_zod2.default.number()).optional(),firstname:_zod2.default.string(),lastname:_zod2.default.string(),displayName:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string(),dateOfBirth:_zod2.default.array(_zod2.default.number()),gender:Ne,clientTypes:_zod2.default.array(_zod2.default.any()),clientClassification:Fe,occupation:Be,isStaff:_zod2.default.boolean(),skipAvs:_zod2.default.boolean(),officeId:_zod2.default.number(),officeName:_zod2.default.string(),imageId:_zod2.default.string().optional(),imagePresent:_zod2.default.boolean().optional(),timeline:Ue,legalForm:Te,clientVerificationStatus:_zod2.default.string(),updatedAt:_zod2.default.string(),isBlockExternalCardsAddition:_zod2.default.boolean(),clientNonPersonDetails:qe,clientTransferOptionData:je,authorizations:_zod2.default.array(_zod2.default.number()).optional(),mobileCountryCode:_zod2.default.string(),clientKycStatus:ze,ofLoanCycle:_zod2.default.number(),ofLoanActive:_zod2.default.number(),activeDepositAccount:_zod2.default.number(),onBoardingStatus:_zod2.default.string().optional()}).catchall(_zod2.default.any()),gt=_zod2.default.object({riskScore:_zod2.default.number(),rating:_zod2.default.string()}).catchall(_zod2.default.any()),ft=_zod2.default.object({street:_zod2.default.string(),city:_zod2.default.string(),state:_zod2.default.string(),zipCode:_zod2.default.string()}).catchall(_zod2.default.any()),bt=_zod2.default.object({type:_zod2.default.string(),value:_zod2.default.string()}).catchall(_zod2.default.any()),Ct={firstname:_zod2.default.string(),middlename:_zod2.default.string().optional(),lastname:_zod2.default.string(),fullname:_zod2.default.string().optional(),dob:_zod2.default.string(),genderId:_zod2.default.number(),locale:_zod2.default.string(),officeId:_zod2.default.number(),mobileCountryCode:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string().email(),legalFormId:_zod2.default.number(),externalId:_zod2.default.string().optional(),isOptedForMLALStatus:_zod2.default.boolean().optional(),currentMLALStatus:_zod2.default.string().optional(),isStaff:_zod2.default.boolean().optional(),staffId:_zod2.default.number().optional(),clientClassificationId:_zod2.default.number().optional(),savingsProductId:_zod2.default.number().optional(),active:_zod2.default.boolean().optional(),dateFormat:_zod2.default.string(),activationDate:_zod2.default.string().optional(),submittedOnDate:_zod2.default.string(),dateOfBirth:_zod2.default.string()},An=_zod2.default.object(Ct).catchall(_zod2.default.any()),ht={clientId:_zod2.default.number(),status:_zod2.default.string()},Pn=_zod2.default.object(ht).catchall(_zod2.default.any()),It={firstname:_zod2.default.string().optional(),middlename:_zod2.default.string().optional(),fullname:_zod2.default.string().optional(),genderId:_zod2.default.number().optional(),lastname:_zod2.default.string().optional(),occupationId:_zod2.default.number().optional(),mobileCountryCode:_zod2.default.string().optional(),mobileNo:_zod2.default.string().optional(),emailAddress:_zod2.default.string().email().optional(),externalId:_zod2.default.string().optional(),clientClassificationId:_zod2.default.number().optional(),dateOfBirth:_zod2.default.string().optional(),dateFormat:_zod2.default.string().optional()},On=_zod2.default.object(It).catchall(_zod2.default.any()),xt={documentTypeId:_zod2.default.string(),documentKey:_zod2.default.string(),status:_zod2.default.string(),description:_zod2.default.string().optional(),issuedBy:_zod2.default.string().optional(),locale:_zod2.default.string().optional(),dateFormat:_zod2.default.string().optional(),expiryDate:_zod2.default.string().optional(),nationality:_zod2.default.number().optional(),issuedDate:_zod2.default.string().optional()},En=_zod2.default.object(xt).catchall(_zod2.default.any()),St={id:_zod2.default.number(),officeId:_zod2.default.number(),clientId:_zod2.default.number(),resourceId:_zod2.default.number(),changes:_zod2.default.record(_zod2.default.string(),_zod2.default.any()),isScheduledTransfer:_zod2.default.boolean(),isSkipNotification:_zod2.default.boolean()},wn=_zod2.default.object(St).catchall(_zod2.default.any()),Rt={developerMessage:_zod2.default.string(),defaultUserMessage:_zod2.default.string(),userMessageGlobalisationCode:_zod2.default.string(),parameterName:_zod2.default.string().optional(),value:_zod2.default.any().nullable(),args:_zod2.default.array(_zod2.default.object({value:_zod2.default.any()})).optional()},vt=_zod2.default.object(Rt),Dt={developerMessage:_zod2.default.string(),httpStatusCode:_zod2.default.string(),defaultUserMessage:_zod2.default.string(),userMessageGlobalisationCode:_zod2.default.string(),errors:_zod2.default.array(vt).optional()},Tn=_zod2.default.object(Dt).catchall(_zod2.default.any()),At={tenantId:_zod2.default.string().optional(),offset:_zod2.default.number().optional(),limit:_zod2.default.number().optional(),orderBy:_zod2.default.string().optional(),sortOrder:_zod2.default.string().optional(),officeId:_zod2.default.number().optional(),displayName:_zod2.default.string().optional(),firstname:_zod2.default.string().optional(),lastname:_zod2.default.string().optional(),externalId:_zod2.default.string().optional(),orphansOnly:_zod2.default.boolean().optional(),clientStatus:_zod2.default.string().optional(),mobileNo:_zod2.default.string().optional(),createdStartDate:_zod2.default.string().optional(),creationEndDate:_zod2.default.string().optional(),activatedStartDate:_zod2.default.string().optional(),activatedEndDate:_zod2.default.string().optional(),closedStartDate:_zod2.default.string().optional(),closedEndDate:_zod2.default.string().optional()},kn=_zod2.default.object(At),Ln={id:_zod2.default.number(),accountNo:_zod2.default.string(),status:ke,subStatus:Le,active:_zod2.default.boolean(),activationDate:_zod2.default.array(_zod2.default.number()).optional(),firstname:_zod2.default.string(),lastname:_zod2.default.string(),displayName:_zod2.default.string(),mobileNo:_zod2.default.string(),emailAddress:_zod2.default.string(),dateOfBirth:_zod2.default.array(_zod2.default.number()),gender:Ne,clientTypes:_zod2.default.array(_zod2.default.any()),clientClassification:Fe,occupation:Be,isStaff:_zod2.default.boolean(),skipAvs:_zod2.default.boolean(),officeId:_zod2.default.number(),officeName:_zod2.default.string(),imageId:_zod2.default.string().optional(),imagePresent:_zod2.default.boolean().optional(),timeline:Ue,legalForm:Te,clientVerificationStatus:_zod2.default.string(),updatedAt:_zod2.default.string(),isBlockExternalCardsAddition:_zod2.default.boolean(),clientNonPersonDetails:qe,clientTransferOptionData:je,authorizations:_zod2.default.array(_zod2.default.number()).optional(),mobileCountryCode:_zod2.default.string(),clientKycStatus:ze,ofLoanCycle:_zod2.default.number(),ofLoanActive:_zod2.default.number(),activeDepositAccount:_zod2.default.number(),onBoardingStatus:_zod2.default.string().optional()},Pt={totalFilteredRecords:_zod2.default.number(),pageItems:_zod2.default.array($e)},Nn=_zod2.default.object(Pt).catchall(_zod2.default.any()),Ot={clientData:$e.optional(),riskRatingData:gt.optional(),clientAddressData:ft.optional(),clientIdentifierData:bt.optional()},Fn=_zod2.default.object(Ot);var Et=_zod2.default.enum(["offset","limit","orderBy","sortOrder","officeId","displayName","firstname","lastname","externalId","orphansOnly","clientStatus","mobileNo","createdStartDate","creationEndDate","activatedStartDate","activatedEndDate","closedStartDate","closedEndDate"]),wt=_zod2.default.enum(["displayName","accountNo","officeId","officeName"]),Tt=_zod2.default.enum(["ASC","DESC"]),kt=_zod2.default.enum(["ACTIVE","PENDING","INACTIVE"]),F=e=>Et.parse(e),Lt=e=>wt.parse(e),Nt=e=>Tt.parse(e),Ft=e=>kt.parse(e),_e=e=>{try{for(let[o,r]of Object.entries(e))if(F(o),r!=null)switch(o){case"orderBy":Lt(r);break;case"sortOrder":Nt(r);break;case"clientStatus":Ft(r);break;case"offset":case"limit":case"officeId":_zod2.default.number().min(0).parse(r);break;case"orphansOnly":_zod2.default.boolean().parse(r);break;case"displayName":case"firstname":case"lastname":case"externalId":case"mobileNo":case"createdStartDate":case"creationEndDate":case"activatedStartDate":case"activatedEndDate":case"closedStartDate":case"closedEndDate":_zod2.default.string().min(1).parse(r);break}}catch(o){throw o instanceof _zod2.default.ZodError?u({message:`Validation error: ${o.errors.map(r=>r.message).join(", ")}`,code:"validation_error"}):o}};var Hn=e=>({input:e,metadata:{commandName:"GetClient",path:`/v1/clients/${e.clientId}`,method:"GET"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{let i={},m=new URLSearchParams;e.staffInSelectedOfficeOnly&&m.append("staffInSelectedOfficeOnly","true"),e.checkIdentitiesExpiration&&m.append("checkIdentitiesExpiration","true"),e.clientAccountAssociate&&m.append("clientAccountAssociate","true");let l=m.toString(),s=`/v1/clients/${e.clientId}${l?`?${l}`:""}`,c=await r.get(s);if(i.clientData=c,e.riskRating){let y=await r.get(`/v1/clients/${e.clientId}/riskrating`);i.riskRatingData=y}if(e.clientAddress){let y=await r.get(`/v1/client/${e.clientId}/addresses`);i.clientAddressData=y}if(e.clientIdentifier){let y=await r.get(`/v1/clients/${e.clientId}/identifiers?unmaskValue=true`);i.clientIdentifierData=y}return i}catch(i){p(i)}}}),Yn= exports.y =e=>({input:e,metadata:{commandName:"UpdateClient",path:`/v1/clients/${e.clientId}`,method:"PUT"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.put(`/v1/clients/${e.clientId}`,{...e.updates})).data}catch(i){p(i)}}}),Jn= exports.z =e=>({input:e,metadata:{commandName:"UpdateClientIdentifier",path:`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,method:"PUT"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.put(`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,{...e.updates})).data}catch(i){p(i)}}}),Xn= exports.A =e=>({input:e,metadata:{commandName:"CreateClient",path:"/v1/clients",method:"POST"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.post("/v1/clients",e.clientData)).data}catch(i){p(i)}}}),A=(e,o,r,i)=>{if(o!==void 0&&o!==0&&o<=0)throw u({message:`Invalid limit: ${o}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(r!==void 0&&r<0)throw u({message:`Invalid offset: ${r}. Offset must be non-negative.`,code:"invalid_offset"});return{where:s=>(F(s),{eq:c=>(_e({[s]:c}),A({...e,[s]:c},o,r,i))}),limit:s=>A(e,s,r,i),offset:s=>A(e,o,s,i),all:()=>A(e,0,r,i),execute:()=>{let s={...e,limit:o||200,offset:r||0};return{input:{filters:e,limit:o,offset:r,tenantId:i},metadata:{commandName:"ListClients",path:"/v1/clients",method:"GET"},execute:async c=>{i&&(c.tenantId=i);let y=await d(c);try{if(o===0){let g=[],f=r||0,C=0;do{let h={...e,limit:200,offset:f},I=await y.get("/v1/clients",{params:h}),{totalFilteredRecords:x,pageItems:E}=I.data;g.push(...E),C=x,f+=200}while(f<C);return{totalFilteredRecords:C,pageItems:g}}else return(await y.get("/v1/clients",{params:s})).data}catch(g){p(g)}}}}}},Qn= exports.B =e=>({list:()=>A({},void 0,void 0,_optionalChain([e, 'optionalAccess', _20 => _20.tenantId]))}),Zn= exports.C =(e,o)=>({input:{params:e,configuration:o},metadata:{commandName:"GetClients",path:"/v1/clients",method:"GET"},execute:async r=>{o.tenantId&&(r.tenantId=o.tenantId);let i=await d(r),m=[],l=e.limit||200,s=e.offset||0,c=0,y={...e,limit:l,offset:s};try{if(e.limit===0){do{let g=await i.get("/v1/clients",{params:y}),{totalFilteredRecords:b,pageItems:f}=g.data;m.push(...f),c=b,s+=l}while(s<c);return{totalFilteredRecords:c,pageItems:m}}else return(await i.get("/v1/clients",{params:y})).data}catch(g){p(g)}}}),ea= exports.D =e=>({input:e,metadata:{commandName:"DeleteClient",path:`/v1/clients/${e.clientId}`,method:"DELETE"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.delete(`/v1/clients/${e.clientId}`)).data}catch(i){p(i)}}});var Me=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string(),submittedAndPendingApproval:_zod.z.boolean(),approved:_zod.z.boolean(),rejected:_zod.z.boolean(),withdrawnByApplicant:_zod.z.boolean(),active:_zod.z.boolean(),closed:_zod.z.boolean(),prematureClosed:_zod.z.boolean(),transferInProgress:_zod.z.boolean(),transferOnHold:_zod.z.boolean(),matured:_zod.z.boolean()}),B=_zod.z.object({code:_zod.z.string(),name:_zod.z.string(),decimalPlaces:_zod.z.number(),inMultiplesOf:_zod.z.number(),displaySymbol:_zod.z.string(),nameCode:_zod.z.string(),displayLabel:_zod.z.string(),currencyCodeInDigit:_zod.z.number().optional(),isBaseCurrency:_zod.z.boolean().optional()}),Bt=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),Ve=_zod.z.object({submittedOnDate:_zod.z.array(_zod.z.number()),submittedByUsername:_zod.z.string(),submittedByFirstname:_zod.z.string(),submittedByLastname:_zod.z.string(),approvedOnDate:_zod.z.array(_zod.z.number()).optional(),approvedByUsername:_zod.z.string().optional(),approvedByFirstname:_zod.z.string().optional(),approvedByLastname:_zod.z.string().optional(),activatedOnDate:_zod.z.array(_zod.z.number()).optional(),activatedByUsername:_zod.z.string().optional(),activatedByFirstname:_zod.z.string().optional(),activatedByLastname:_zod.z.string().optional()}),Ge=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string(),none:_zod.z.boolean(),inactive:_zod.z.boolean(),dormant:_zod.z.boolean(),escheat:_zod.z.boolean(),block:_zod.z.boolean(),blockCredit:_zod.z.boolean(),blockDebit:_zod.z.boolean()}),Ke=_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),Ut=_zod.z.object({id:_zod.z.number(),accountNo:_zod.z.string(),productId:_zod.z.number(),productName:_zod.z.string(),shortProductName:_zod.z.string(),status:Me,currency:B,accountBalance:_zod.z.number(),accountType:Bt,timeline:Ve,subStatus:Ge,lastActiveTransactionDate:_zod.z.array(_zod.z.number()).optional(),depositType:Ke,availableBalance:_zod.z.number(),allowPrepaidCard:_zod.z.boolean(),primaryAccount:_zod.z.record(_zod.z.any())}),qt= exports.E ={id:_zod.z.number(),accountNo:_zod.z.string(),depositType:Ke,clientId:_zod.z.number(),clientName:_zod.z.string(),savingsProductId:_zod.z.number(),savingsProductName:_zod.z.string(),fieldOfficerId:_zod.z.number(),status:Me,subStatus:Ge,timeline:Ve,currency:B,nominalAnnualInterestRate:_zod.z.number(),interestCompoundingPeriodType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestPostingPeriodType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestCalculationType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),interestCalculationDaysInYearType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),lockinPeriodFrequency:_zod.z.number(),lockinPeriodFrequencyType:_zod.z.object({id:_zod.z.number(),code:_zod.z.string(),value:_zod.z.string()}),withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),enforceMinRequiredBalance:_zod.z.boolean(),onHoldFunds:_zod.z.number(),withHoldTax:_zod.z.boolean(),lastActiveTransactionDate:_zod.z.array(_zod.z.number()),isDormancyTrackingActive:_zod.z.boolean(),savingsAmountOnHold:_zod.z.number(),summary:_zod.z.object({currency:B,totalDeposits:_zod.z.number(),totalInterestEarned:_zod.z.number(),totalInterestPosted:_zod.z.number(),accountBalance:_zod.z.number(),totalOverdraftInterestDerived:_zod.z.number(),interestNotPosted:_zod.z.number(),lastInterestCalculationDate:_zod.z.array(_zod.z.number()),availableBalance:_zod.z.number()}),isLinkedToFloatingInterestRates:_zod.z.boolean(),interestRateDifferential:_zod.z.number(),overdraftInterestRateDifferential:_zod.z.number(),floatingRateId:_zod.z.number(),isBaseLendingRate:_zod.z.boolean(),isFloatingInterestRateCalculationAllowed:_zod.z.boolean(),bankDetails:_zod.z.object({routingNumber:_zod.z.string(),name:_zod.z.string(),swiftCode:_zod.z.string(),address:_zod.z.string(),city:_zod.z.string(),postcode:_zod.z.string()}),skipCollectTransferCharge:_zod.z.boolean(),cardRestricted:_zod.z.boolean(),overdraftLimit:_zod.z.number(),minRequiredBalance:_zod.z.number(),minBalanceForInterestCalculation:_zod.z.number(),minOverdraftForInterestCalculation:_zod.z.number(),overdraftMinimumDue:_zod.z.number(),currentFloatingInterestPeriod:_zod.z.object({fromDate:_zod.z.array(_zod.z.number()),interestRate:_zod.z.number(),isDifferentialToBLR:_zod.z.boolean()}),floatingRateName:_zod.z.string(),floatingRateDifferential:_zod.z.number(),parentAccount:_zod.z.object({withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),enforceMinRequiredBalance:_zod.z.boolean(),withHoldTax:_zod.z.boolean(),isDormancyTrackingActive:_zod.z.boolean(),isLinkedToFloatingInterestRates:_zod.z.boolean(),isBaseLendingRate:_zod.z.boolean(),skipCollectTransferCharge:_zod.z.boolean(),cardRestricted:_zod.z.boolean(),allowPrepaidCard:_zod.z.boolean(),prepaidAccount:_zod.z.boolean()}),allowPrepaidCard:_zod.z.boolean(),prepaidAccount:_zod.z.boolean(),prepaidLimitAmount:_zod.z.number()},oa= exports.F =_zod.z.object(qt),jt= exports.G ={savingsAccounts:_zod.z.array(Ut)},ra= exports.H =_zod.z.object(jt),zt=_zod.z.enum(["showReservedAccount"]),$t= exports.I ={tenantId:_zod.z.string().optional(),showReservedAccount:_zod.z.boolean().optional().default(!1)},ia= exports.J =_zod.z.object($t),U=e=>zt.parse(e),We=e=>{try{for(let[o,r]of Object.entries(e))if(U(o),r!=null)switch(o){case"showReservedAccount":_zod.z.boolean().parse(r);break}}catch(o){throw o instanceof _zod.z.ZodError?u({message:`Validation error: ${o.errors.map(r=>r.message).join(", ")}`,code:"validation_error"}):o}},_t= exports.K ={clientId:_zod.z.number(),productId:_zod.z.number(),submittedOnDate:_zod.z.string(),nominalAnnualInterestRate:_zod.z.string(),minRequiredOpeningBalance:_zod.z.string(),lockinPeriodFrequency:_zod.z.string(),withdrawalFeeForTransfers:_zod.z.boolean(),allowOverdraft:_zod.z.boolean(),overdraftLimit:_zod.z.number(),minOverdraftForInterestCalculation:_zod.z.number(),enforceMinRequiredBalance:_zod.z.boolean(),minRequiredBalance:_zod.z.number(),withHoldTax:_zod.z.boolean(),interestCompoundingPeriodType:_zod.z.number(),interestPostingPeriodType:_zod.z.number(),interestCalculationType:_zod.z.number(),interestCalculationDaysInYearType:_zod.z.number(),fieldOfficerId:_zod.z.number(),lockinPeriodFrequencyType:_zod.z.number(),locale:_zod.z.string(),dateFormat:_zod.z.string(),monthDayFormat:_zod.z.string(),charges:_zod.z.array(_zod.z.any())},sa= exports.L =_zod.z.object(_t);var ga=e=>({input:e,metadata:{commandName:"GetAccount",path:`/v1/savingaccounts/${e.id}`,method:"GET"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.get(`/v1/savingaccounts/${e.id}`)).data}catch(i){p(i)}}}),fa= exports.N =e=>({input:e,metadata:{commandName:"UpdateAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"PUT"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.put(`/v1/savingsaccounts/${e.accountId}`,{...e.updates,clientId:e.clientId})).data}catch(i){p(i)}}}),ba= exports.O =e=>({input:e,metadata:{commandName:"DeleteAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"DELETE"},execute:async o=>{e.tenantId&&(o.tenantId=e.tenantId);let r=await d(o);try{return(await r.delete(`/v1/savingsaccounts/${e.accountId}`)).data}catch(i){p(i)}}}),He=(e,o,r)=>({where:l=>(U(l),{eq:s=>(We({[l]:s}),He({...e,[l]:s},o,r))}),execute:()=>({input:{filters:e,tenantId:r},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${o}/accounts`,method:"GET"},execute:async l=>{r&&(l.tenantId=r);let s=await d(l);try{return(await s.get(`/v1/clients/${o}/accounts`,{params:e})).data}catch(c){p(c)}}})}),Ca= exports.P =e=>({list:()=>He({},_optionalChain([e, 'optionalAccess', _21 => _21.clientId])||0,_optionalChain([e, 'optionalAccess', _22 => _22.tenantId]))}),ha= exports.Q =(e,o,r)=>({input:{params:o,configuration:r},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${e}/accounts`,method:"GET"},execute:async i=>{r.tenantId&&(i.tenantId=r.tenantId);let m=await d(i);try{return(await m.get(`/v1/clients/${e}/accounts`,{params:o})).data}catch(l){p(l)}}});exports.a = u; exports.b = Gt; exports.c = p; exports.d = d; exports.e = q; exports.f = S; exports.g = R; exports.h = v; exports.i = N; exports.j = Qe; exports.k = Zt; exports.l = Ze; exports.m = tt; exports.n = nt; exports.o = at; exports.p = ot; exports.q = en; exports.r = bn; exports.s = Cn; exports.t = hn; exports.u = In; exports.v = xn; exports.w = Sn; exports.x = Hn; exports.y = Yn; exports.z = Jn; exports.A = Xn; exports.B = Qn; exports.C = Zn; exports.D = ea; exports.E = qt; exports.F = oa; exports.G = jt; exports.H = ra; exports.I = $t; exports.J = ia; exports.K = _t; exports.L = sa; exports.M = ga; exports.N = fa; exports.O = ba; exports.P = Ca; exports.Q = ha;
