import{a as u,c as f,d as x}from"./chunk-RX3BFHHX.mjs";var E=t=>{let n=[];if(!t.baseUrl)n.push("baseUrl is required");else if(typeof t.baseUrl!="string")n.push("baseUrl must be a string");else try{new URL(t.baseUrl)}catch{n.push("baseUrl must be a valid URL")}return t.axiosConfig?.timeout!==void 0&&(typeof t.axiosConfig.timeout!="number"||t.axiosConfig.timeout<0)&&n.push("timeout must be a positive number"),n};import{z as e}from"zod";var N=e.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),h=e.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),P=e.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),C=e.enum(["CREDIT","DEBIT"]),w=e.enum(["ASC","DESC"]),ze=N.options,Ve=h.options,je=P.options,Me=C.options,$e=w.options,B=t=>N.parse(t),F=t=>h.parse(t),k=t=>P.parse(t),U=t=>C.parse(t),L=t=>w.parse(t),_=e.string().min(1),z=e.string().min(1),V=e.string().min(1),j=e.string().min(1),M=e.string().min(1),$=e.string().min(1),G=e.string().min(1),K=e.string().min(1),q=e.string().min(1),H=e.union([e.string(),e.number()]),Y=e.string(),W=e.string(),X=e.string(),O=e.string(),T=e.string(),A=e.string(),J=e.boolean(),Q=e.string(),Z=t=>_.parse(t),ee=t=>z.parse(t),te=t=>V.parse(t),ne=t=>j.parse(t),ae=t=>M.parse(t),re=t=>$.parse(t),oe=t=>G.parse(t),ie=t=>K.parse(t),se=t=>q.parse(t),ce=t=>H.parse(t),pe=t=>Y.parse(t),me=t=>W.parse(t),de=t=>X.parse(t),ye=t=>O.parse(t),le=t=>T.parse(t),ue=t=>A.parse(t),ge=t=>J.parse(t),fe=t=>Q.parse(t),Oe={originatorName:_.optional(),originatorAccount:z.optional(),originatorBankRoutingCode:V.optional(),recipientName:j.optional(),recipientAccount:M.optional(),recipientBankRoutingCode:$.optional(),reference:G.optional(),traceNumber:K.optional(),externalId:q.optional(),clientId:H.optional(),dateFormat:Y.optional(),locale:W.optional(),originatedBy:X.optional(),paymentRail:P.optional(),paymentType:C.optional(),fromValueDate:O.optional(),toValueDate:O.optional(),fromExecuteDate:T.optional(),toExecuteDate:T.optional(),status:h.optional(),fromReturnDate:A.optional(),toReturnDate:A.optional(),isSettlement:J.optional(),orderBy:Q.optional(),sortOrder:w.optional(),limit:e.number().positive().optional().describe("Max number of records to return. Defaults to 20 if not provided. To fetch all records, set to 0."),offset:e.number().min(0).optional()},Ge=e.object(Oe).partial();var Te={id:e.number(),clientId:e.number(),amount:e.number().positive(),correlationId:e.string(),paymentType:C,paymentRail:P,recipient:e.object({cardId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),originator:e.object({accountId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),executedAt:e.string(),createdAt:e.string(),externalId:e.string(),status:h,paymentRailMetaData:e.record(e.string(),e.any()).optional(),currencyData:e.object({code:e.string(),name:e.string(),decimalPlaces:e.number(),displaySymbol:e.string(),nameCode:e.string(),currencyCodeInDigit:e.number(),isBaseCurrency:e.boolean()}),currency:e.string().min(3).max(3)},xe=e.object(Te).catchall(e.any()),Ie=e.object({streetAddress:e.string().optional(),city:e.string().optional(),state:e.string().optional(),country:e.string().optional(),postalCode:e.string().optional()}).optional(),Ae=e.object({name:e.string().optional(),identifier:e.string().optional(),address:Ie}).optional(),v=e.object({name:e.string(),identifier:e.string(),accountType:e.enum(["CHECKING","SAVINGS"]).optional(),address:Ie,agent:Ae}),we={amount:e.number().positive(),currency:e.string().min(3).max(3),paymentRail:P,paymentType:C,debtor:v,creditor:v,clientId:e.string().optional(),correspondent:v.optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),chargeBearer:e.enum(["OUR","BEN","SHA"]).optional(),purposeCode:e.string().optional(),valueDate:e.string().optional(),executionDate:e.string().optional()},Ne=e.object(we).catchall(e.any()).refine(t=>(t.paymentRail==="WIRE"||t.paymentRail==="SWIFT")&&t.creditor?t.creditor.address&&t.creditor.address.state&&t.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),Be={amount:e.number().positive().optional(),correspondent:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional()}).optional(),creditor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),debtor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),errorCode:e.string().optional(),errorMessage:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),status:h.optional()},Fe=e.object(Be).catchall(e.any()),Ke=e.object({totalFilteredRecords:e.number(),pageItems:e.array(xe)}),S=t=>xe.parse(t),he=t=>Ne.parse(t),Pe=t=>Fe.parse(t);var qe=e.object({id:e.string(),clientId:e.number(),resourceId:e.number(),resourceIdentifier:e.string()});import{ZodError as b}from"zod";var ke=t=>{try{B(t)}catch(n){throw n instanceof b?u({message:`Invalid filter key: '${t}'. ${n.message}`,code:"invalid_filter_key"}):n}},Ue=(t,n)=>{try{switch(t){case"status":F(n);break;case"paymentRail":k(n);break;case"paymentType":U(n);break;case"sortOrder":L(n);break;case"originatorName":Z(n);break;case"originatorAccount":ee(n);break;case"originatorBankRoutingCode":te(n);break;case"recipientName":ne(n);break;case"recipientAccount":ae(n);break;case"recipientBankRoutingCode":re(n);break;case"reference":oe(n);break;case"traceNumber":ie(n);break;case"externalId":se(n);break;case"clientId":ce(n);break;case"dateFormat":pe(n);break;case"locale":me(n);break;case"originatedBy":de(n);break;case"fromValueDate":case"toValueDate":ye(n);break;case"fromExecuteDate":case"toExecuteDate":le(n);break;case"fromReturnDate":case"toReturnDate":ue(n);break;case"isSettlement":ge(n);break;case"orderBy":fe(n);break;default:break}}catch(r){throw r instanceof b?u({message:`Invalid value for '${t}': '${n}'. ${r.message}`,code:`invalid_${t}_value`}):r}},Ce=t=>({input:t,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async n=>{try{he(t.payment)}catch(a){throw a instanceof b?u({message:`Invalid payment data: ${a.message}`,code:"invalid_payment_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let r=await x(n);try{let a=await r.post("/v1/payments",t.payment);return S(a.data)}catch(a){f(a)}}}),Re=t=>({input:t,metadata:{commandName:"GetPayment",path:`/v1/payments/${t.id}`,method:"GET"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await x(n);try{let a=await r.get(`/v1/payments/${t.id}`);return S(a.data)}catch(a){f(a)}}}),Se=t=>({input:t,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${t.id}`,method:"PUT"},execute:async n=>{try{Pe(t.payment)}catch(a){throw a instanceof b?u({message:`Invalid payment update data: ${a.message}`,code:"invalid_payment_update_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let r=await x(n);try{let a=await r.put(`/v1/payments/${t.id}`,t.payment);return S(a.data)}catch(a){f(a)}}}),R=(t,n,r,a)=>{if(n!==void 0&&n!==0&&n<=0)throw u({message:`Invalid limit: ${n}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(r!==void 0&&r<0)throw u({message:`Invalid offset: ${r}. Offset must be non-negative.`,code:"invalid_offset"});return{where:p=>(ke(p),{eq:o=>(Ue(p,o),R({...t,[p]:o},n,r,a))}),limit:p=>R(t,p,r,a),offset:p=>R(t,n,p,a),all:()=>R(t,0,r,a),execute:()=>{let p={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},o={...p,...t,limit:n||200,offset:r||0};return{input:{filters:t,limit:n,offset:r,tenantId:a},metadata:{commandName:"ListPayments",path:"/v1/payments",method:"GET"},execute:async s=>{a&&(s.tenantId=a);let c=await x(s);try{if(n===0){let i=[],y=r||0,d=0;do{let g={...p,...t,limit:200,offset:y},D=await c.get("/v1/payments",{params:g}),{totalFilteredRecords:Ee,pageItems:ve}=D.data;i.push(...ve),d=Ee,y+=200}while(y<d);return{totalFilteredRecords:d,pageItems:i}}else return(await c.get("/v1/payments",{params:o})).data}catch(i){f(i)}}}}}},be=t=>({list:()=>R({},void 0,void 0,t?.tenantId)}),Qe=(t,n)=>({input:{params:t,configuration:n},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async r=>{n.tenantId&&(r.tenantId=n.tenantId);let a=await x(r),l=[],I=t.limit||20,p=t.offset||0,o=0,i={...{locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},...(m=>{let d=["fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","fromReturnDate","toReturnDate"].some(D=>m[D]!==void 0),g={...m};return d&&g.dateFormat===void 0&&(g.dateFormat="yyyy-MM-dd"),g})(t),limit:I,offset:p};try{if(t.limit===0){do{let m=await a.get("/v1/payments",{params:i}),{totalFilteredRecords:y,pageItems:d}=m.data;l.push(...d),o=y,p+=I}while(p<o);return{totalFilteredRecords:o,pageItems:l}}else return(await a.get("/v1/payments",{params:i})).data}catch(m){f(m)}}}),De=t=>({input:t,metadata:{commandName:"DeletePayment",path:`/v1/payments/${t.id}`,method:"DELETE"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await x(n);try{await r.delete(`/v1/payments/${t.id}`)}catch(a){f(a)}}});var at=t=>{let n=E(t);if(n.length>0)throw u({message:`Invalid configuration: ${n.join(", ")}`,code:"invalid_config"});let r=async(o,s,c)=>{if(t.middlewares)for(let i of t.middlewares)o==="before"&&i.before?await i.before(s):o==="after"&&i.after?await i.after(s,c):o==="onError"&&i.onError&&await i.onError(s,c)},a={...t},l=async o=>{try{await r("before",o);let s=await o.execute(a);return await r("after",o,s),s}catch(s){throw await r("onError",o,s),s}},I=o=>{let s=o||a.tenantId;return{payment:{create:c=>{let i=Ce({payment:c,tenantId:s});return{execute:async()=>l(i)}},get:c=>{let i=Re({id:c,tenantId:s});return{execute:async()=>l(i)}},update:(c,i)=>{let m=Se({id:c,payment:i,tenantId:s});return{execute:async()=>l(m)}},delete:c=>{let i=De({id:c,tenantId:s});return{execute:async()=>l(i)}},list:()=>{let i=be({tenantId:s}).list(),m=y=>({where:y.where,limit:d=>{let g=y.limit(d);return m(g)},offset:d=>{let g=y.offset(d);return m(g)},all:()=>{let d=y.all();return m(d)},execute:async()=>{let d=y.execute();return l(d)}});return m(i)}}}};return{setConfig:o=>{a=o},updateConfig:o=>{let s={...a,...o,axiosConfig:{...a.axiosConfig,...o.axiosConfig,headers:{...a.axiosConfig?.headers,...o.axiosConfig?.headers}}},c=E(s);if(c.length>0)throw u({message:`Invalid configuration: ${c.join(", ")}`,code:"invalid_config"});a=s},resetConfig:()=>{a=t},request:l,tenant:o=>I(o),...I()}};export{N as a,h as b,P as c,C as d,w as e,Oe as f,Ge as g,Te as h,we as i,Ne as j,Be as k,Fe as l,Ke as m,Ce as n,Re as o,Se as p,Qe as q,at as r};
