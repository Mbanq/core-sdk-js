import{a as l,b as x,c as y,d as T,e as g,f as h}from"../chunk-5PEETHWV.mjs";import{a as m,c as o,d as s}from"../chunk-RX3BFHHX.mjs";import P from"axios";import A from"moment-timezone";var p=(t=new Date,e=!1,r=process.env.TIMEZONE??"Europe/Berlin")=>A(t.getTime()).tz(r).utc(!e);var O=t=>({input:t,metadata:{commandName:"CreateTransfer",path:"/v1/transfers",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.post("/v1/transfers",t.transfer)).data}catch(n){o(n)}}}),S=t=>({input:t,metadata:{commandName:"GetTransfer",path:`/v1/transfers/${t.id}`,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.get(`/v1/transfers/${t.id}`)).data}catch(n){o(n)}}}),R=t=>{let e={paymentType:t.paymentType||"ACH",status:t.transferStatus||"EXECUTION_SCHEDULED",toExecuteDate:t.executedAt||p().toISOString(!0).slice(0,10),locale:"en",dateFormat:"yyyy-MM-dd",associateClientData:!0,originatedBy:"us",accountType:t.accountType};return{input:t,metadata:{commandName:"GetTransfers",path:"/v1/transfers",method:"GET"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await s(r),a=[],c=t.queryLimit||200,d=0,i=0,I={...e,limit:c,offset:d};try{do{let u=await n.get("/v1/transfers",{params:I}),{totalFilteredRecords:f,pageItems:C}=u.data;a.push(...C),i=f,d+=c}while(d<i);return a}catch(u){o(u)}}}},w=t=>{let e={...t,paymentType:t.paymentType||"ACH"};return{input:t,metadata:{commandName:"MarkAsSuccess",path:"/v1/external-transfers?command=MARK_AS_SUCCESS",method:"POST"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await s(r);try{return(await n.post("/v1/external-transfers?command=MARK_AS_SUCCESS",e)).data}catch(a){o(a)}}}},N=t=>({input:t,metadata:{commandName:"MarkAsProcessing",path:"/v1/external-transfers?command=MARK_AS_PROCESSING",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_PROCESSING",t)).data}catch(n){o(n)}}}),M=t=>({input:t,metadata:{commandName:"MarkAsReturned",path:"/v1/external-transfers?command=MARK_AS_RETURN",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_RETURN",{...t})).data}catch(n){o(n)}}}),E=t=>{let e={...t.payload};return{input:t,metadata:{commandName:"LogFailTransfer",path:"/v1/external-transfers?command=LOG_FAILURE",method:"POST"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await s(r);try{return(await n.post("/v1/external-transfers?command=LOG_FAILURE",e)).data}catch(a){throw P.isAxiosError(a)?m({message:"LogFailTransfer command failed",statusCode:a.response?.status,code:a.code,requestId:a.response?.headers?.["x-request-id"],originalError:a}):a}}}},U=t=>({input:t,metadata:{commandName:"MarkAsFail",path:"/v1/external-transfers?command=MARK_AS_FAIL",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_FAIL",t)).data}catch(n){o(n)}}}),G=t=>{let e={traceNumbers:t.traceNumbers};return{input:t,metadata:{commandName:"UpdateTraceNumber",path:`/v1/external-transfers/${t.externalId}`,method:"PUT"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await s(r);try{return(await n.put(`/v1/external-transfers/${t.externalId}`,e)).data}catch(a){o(a)}}}};var v=t=>({input:t,metadata:{commandName:t.commandName||"CustomUpdate",path:t.url,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.put(t.url,{...t.updates},{params:t.params})).data}catch(n){o(n)}}}),_=t=>({input:t,metadata:{commandName:t.commandName||"CustomCreate",path:t.url,method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.post(t.url,t.data,{params:t.params})).data}catch(n){o(n)}}}),b=t=>({input:t,metadata:{commandName:t.commandName||"CustomGet",path:t.url,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await s(e);try{return(await r.get(t.url,{params:t.params})).data}catch(n){o(n)}}});export{O as CreateTransfer,_ as CustomCreate,b as CustomGet,v as CustomUpdate,y as GetClientData,S as GetTransfer,R as GetTransfers,h as GraphQL,E as LogFailTransfer,U as MarkAsFail,N as MarkAsProcessing,M as MarkAsReturned,w as MarkAsSuccess,l as SendAuthorizationToCore,x as UpdateCardID,T as UpdateClient,g as UpdateClientIdentifier,G as UpdateTraceNumber};
