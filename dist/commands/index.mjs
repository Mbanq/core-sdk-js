import{a as r,b as s,c as u,d as m,e as d,f as p,g as C,h as c,i,j as I,k as f,l as x,m as h,n as l,o as G,p as U}from"../chunk-ZC5XVPET.mjs";import{c as a}from"../chunk-YPDJGVWM.mjs";var T=t=>({input:t,metadata:{commandName:t.commandName||"CustomUpdate",path:t.url,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await r(e);try{return(await n.put(t.url,{...t.updates},{params:t.params})).data}catch(o){a(o)}}}),y=t=>({input:t,metadata:{commandName:t.commandName||"CustomCreate",path:t.url,method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await r(e);try{return(await n.post(t.url,t.data,{params:t.params})).data}catch(o){a(o)}}}),P=t=>({input:t,metadata:{commandName:t.commandName||"CustomGet",path:t.url,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let n=await r(e);try{return(await n.get(t.url,{params:t.params})).data}catch(o){a(o)}}});export{s as CreateTransfer,y as CustomCreate,P as CustomGet,T as CustomUpdate,h as GetClientData,u as GetTransfer,m as GetTransfers,U as GraphQL,c as LogFailTransfer,i as MarkAsFail,p as MarkAsProcessing,C as MarkAsReturned,d as MarkAsSuccess,f as SendAuthorizationToCore,x as UpdateCardID,l as UpdateClient,G as UpdateClientIdentifier,I as UpdateTraceNumber};
