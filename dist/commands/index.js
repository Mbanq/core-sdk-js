"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkS3G3HESYjs = require('../chunk-S3G3HESY.js');var _chunkUD2TOWHPjs = require('../chunk-UD2TOWHP.js');var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var _momenttimezone = require('moment-timezone'); var _momenttimezone2 = _interopRequireDefault(_momenttimezone);var p=(t=new Date,e=!1,r=_nullishCoalesce(process.env.TIMEZONE, () => ("Europe/Berlin")))=>_momenttimezone2.default.call(void 0, t.getTime()).tz(r).utc(!e);var w=t=>({input:t,metadata:{commandName:"CreateTransfer",path:"/v1/transfers",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.post("/v1/transfers",t.transfer)).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),N= exports.GetTransfer =t=>({input:t,metadata:{commandName:"GetTransfer",path:`/v1/transfers/${t.id}`,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.get(`/v1/transfers/${t.id}`)).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),M= exports.GetTransfers =t=>{let e={paymentType:t.paymentType||"ACH",status:t.transferStatus||"EXECUTION_SCHEDULED",toExecuteDate:t.executedAt||p().toISOString(!0).slice(0,10),locale:"en",dateFormat:"yyyy-MM-dd",associateClientData:!0,originatedBy:"us",accountType:t.accountType};return{input:t,metadata:{commandName:"GetTransfers",path:"/v1/transfers",method:"GET"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await _chunkUD2TOWHPjs.d.call(void 0, r),a=[],c=t.queryLimit||200,d=0,i=0,I={...e,limit:c,offset:d};try{do{let u=await n.get("/v1/transfers",{params:I}),{totalFilteredRecords:f,pageItems:C}=u.data;a.push(...C),i=f,d+=c}while(d<i);return a}catch(u){_chunkUD2TOWHPjs.c.call(void 0, u)}}}},E= exports.MarkAsSuccess =t=>{let e={...t,paymentType:t.paymentType||"ACH"};return{input:t,metadata:{commandName:"MarkAsSuccess",path:"/v1/external-transfers?command=MARK_AS_SUCCESS",method:"POST"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await _chunkUD2TOWHPjs.d.call(void 0, r);try{return(await n.post("/v1/external-transfers?command=MARK_AS_SUCCESS",e)).data}catch(a){_chunkUD2TOWHPjs.c.call(void 0, a)}}}},U= exports.MarkAsProcessing =t=>({input:t,metadata:{commandName:"MarkAsProcessing",path:"/v1/external-transfers?command=MARK_AS_PROCESSING",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_PROCESSING",t)).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),G= exports.MarkAsReturned =t=>({input:t,metadata:{commandName:"MarkAsReturned",path:"/v1/external-transfers?command=MARK_AS_RETURN",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_RETURN",{...t})).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),v= exports.LogFailTransfer =t=>{let e={...t.payload};return{input:t,metadata:{commandName:"LogFailTransfer",path:"/v1/external-transfers?command=LOG_FAILURE",method:"POST"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await _chunkUD2TOWHPjs.d.call(void 0, r);try{return(await n.post("/v1/external-transfers?command=LOG_FAILURE",e)).data}catch(a){throw _axios2.default.isAxiosError(a)?_chunkUD2TOWHPjs.a.call(void 0, {message:"LogFailTransfer command failed",statusCode:_optionalChain([a, 'access', _2 => _2.response, 'optionalAccess', _3 => _3.status]),code:a.code,requestId:_optionalChain([a, 'access', _4 => _4.response, 'optionalAccess', _5 => _5.headers, 'optionalAccess', _6 => _6["x-request-id"]]),originalError:a}):a}}}},_= exports.MarkAsFail =t=>({input:t,metadata:{commandName:"MarkAsFail",path:"/v1/external-transfers?command=MARK_AS_FAIL",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.post("/v1/external-transfers?command=MARK_AS_FAIL",t)).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),b= exports.UpdateTraceNumber =t=>{let e={traceNumbers:t.traceNumbers};return{input:t,metadata:{commandName:"UpdateTraceNumber",path:`/v1/external-transfers/${t.externalId}`,method:"PUT"},execute:async r=>{t.tenantId&&(r.tenantId=t.tenantId);let n=await _chunkUD2TOWHPjs.d.call(void 0, r);try{return(await n.put(`/v1/external-transfers/${t.externalId}`,e)).data}catch(a){_chunkUD2TOWHPjs.c.call(void 0, a)}}}};var k=t=>({input:t,metadata:{commandName:t.commandName||"CustomUpdate",path:t.url,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.put(t.url,{...t.updates},{params:t.params})).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),F= exports.CustomCreate =t=>({input:t,metadata:{commandName:t.commandName||"CustomCreate",path:t.url,method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.post(t.url,t.data,{params:t.params})).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}}),L= exports.CustomGet =t=>({input:t,metadata:{commandName:t.commandName||"CustomGet",path:t.url,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let r=await _chunkUD2TOWHPjs.d.call(void 0, e);try{return(await r.get(t.url,{params:t.params})).data}catch(n){_chunkUD2TOWHPjs.c.call(void 0, n)}}});exports.CreateClient = _chunkUD2TOWHPjs.h; exports.CreateTransfer = w; exports.CustomCreate = F; exports.CustomGet = L; exports.CustomUpdate = k; exports.DeleteClient = _chunkUD2TOWHPjs.k; exports.GetClient = _chunkUD2TOWHPjs.e; exports.GetClients = _chunkUD2TOWHPjs.j; exports.GetTransfer = N; exports.GetTransfers = M; exports.GraphQL = _chunkS3G3HESYjs.c; exports.LogFailTransfer = v; exports.MarkAsFail = _; exports.MarkAsProcessing = U; exports.MarkAsReturned = G; exports.MarkAsSuccess = E; exports.SendAuthorizationToCore = _chunkS3G3HESYjs.a; exports.UpdateCardID = _chunkS3G3HESYjs.b; exports.UpdateClient = _chunkUD2TOWHPjs.f; exports.UpdateClientIdentifier = _chunkUD2TOWHPjs.g; exports.UpdateTraceNumber = b;
