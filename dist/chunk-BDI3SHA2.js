"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkOGW7GTJPjs = require('./chunk-OGW7GTJP.js');var I=t=>{let e=t.skipNotification&&"?skipNotification=true"||"",i=t.card.cardType==="CREDIT"?"creditcards":"cards",n={...t.payload,query:e,flag:t.flag};return{input:t,metadata:{commandName:"SendAuthorizationToCore",path:`/${i}/${t.card.internalCardId}/authorization${e}`,method:"POST"},execute:async a=>{t.tenantId&&(a.tenantId=t.tenantId);let o=await _chunkOGW7GTJPjs.d.call(void 0, a);try{return await o.post(`/${i}/${t.card.internalCardId}/authorization${e}`,n)}catch(c){_chunkOGW7GTJPjs.c.call(void 0, c)}}}},p= exports.b =t=>({input:t,metadata:{commandName:"UpdateCardID",path:`/clients/${t.clientId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let i=await _chunkOGW7GTJPjs.d.call(void 0, e);try{await i.put(`/clients/${t.clientId}`,{businessCardIDURL:t.businessCardIDURL,businessCardIDQRCode:t.businessCardIDQRCode})}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}});var h=t=>({input:t,metadata:{commandName:"GetClientData",path:`/v1/clients/${t.clientId}`,method:"GET"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let i=await _chunkOGW7GTJPjs.d.call(void 0, e),n={clientData:void 0,riskRatingData:void 0,clientAddressData:void 0,clientIdentifierData:void 0};try{return n.clientData=await i.get(`/v1/clients/${t.clientId}`),t.riskRating&&(n.riskRatingData=await i.get(`/v1/clients/${t.clientId}/riskrating`)),t.clientAddress&&(n.clientAddressData=await i.get(`/v1/client/${t.clientId}/addresses`)),t.clientIdentifier&&(n.clientIdentifierData=await i.get(`/v1/clients/${t.clientId}/identifiers?unmaskValue=true`)),n}catch(a){_chunkOGW7GTJPjs.c.call(void 0, a)}}}),b= exports.d =t=>({input:t,metadata:{commandName:"UpdateClient",path:`/v1/clients/${t.clientId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let i=await _chunkOGW7GTJPjs.d.call(void 0, e);try{return(await i.put(`/v1/clients/${t.clientId}`,{...t.updates})).data}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}}),y= exports.e =t=>({input:t,metadata:{commandName:"UpdateClientIdentifier",path:`/v1/clients/${t.clientId}/identifiers/${t.identifierId}`,method:"PUT"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let i=await _chunkOGW7GTJPjs.d.call(void 0, e);try{return(await i.put(`/v1/clients/${t.clientId}/identifiers/${t.identifierId}`,{...t.updates})).data}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}});var _graphql = require('graphql');var $=t=>({input:t,metadata:{commandName:t.operationName||"GraphQL",path:"/graphql",method:"POST"},execute:async e=>{t.tenantId&&(e.tenantId=t.tenantId);let i=await _chunkOGW7GTJPjs.d.call(void 0, e),n=e.graphqlPath||"/graphql";try{let a=typeof t.command=="string"?t.command:_graphql.print.call(void 0, t.command),{data:o}=await i.post(n,{query:a,variables:t.variables,operationName:t.operationName});if(_optionalChain([o, 'access', _ => _.errors, 'optionalAccess', _2 => _2.length]))throw _chunkOGW7GTJPjs.a.call(void 0, {message:o.errors[0].message,code:"graphql_error",originalError:o.errors[0]});if(!o.data)throw _chunkOGW7GTJPjs.a.call(void 0, {message:"No data returned from GraphQL query",code:"graphql_no_data"});return o.data}catch(a){throw a.name==="CommandError"?a:_chunkOGW7GTJPjs.a.call(void 0, {message:a.message,code:"graphql_request_failed",originalError:a})}}});exports.a = I; exports.b = p; exports.c = h; exports.d = b; exports.e = y; exports.f = $;
