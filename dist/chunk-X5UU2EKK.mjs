import Ue from"axios";var y=({message:e,statusCode:a,code:i,requestId:o,originalError:p})=>({name:"CommandError",message:e,statusCode:a,code:i,requestId:o,originalError:p}),ln=e=>typeof e=="object"&&e!==null&&"name"in e&&e.name==="CommandError",Be=e=>{if(!e||typeof e!="object")return e;let a={...e};if(a.config&&typeof a.config=="object"){let i=a.config;if(i.httpsAgent&&typeof i.httpsAgent=="object")try{i.httpsAgent.sockets&&delete i.httpsAgent.sockets,i.httpsAgent.freeSockets&&delete i.httpsAgent.freeSockets,i.httpsAgent._sessionCache&&delete i.httpsAgent._sessionCache}catch{}}return a},u=e=>{if(Ue.isAxiosError(e)){let a=e.response?.data?.message,i=e.response?.status?`Request failed with status code ${e.response.status}`:e.message||"Request failed";throw y({message:a||i,statusCode:e.response?.status,code:e.code,requestId:e.response?.headers?.["x-request-id"],originalError:Be(e)})}throw e};import{z as r,ZodError as $}from"zod";var _=r.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),S=r.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),R=r.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),v=r.enum(["CREDIT","DEBIT"]),L=r.enum(["ASC","DESC"]),gn=_.options,fn=S.options,bn=R.options,hn=v.options,Cn=L.options,je=e=>_.parse(e),ze=e=>S.parse(e),$e=e=>R.parse(e),_e=e=>v.parse(e),Ge=e=>L.parse(e),G=r.string().min(1),M=r.string().min(1),K=r.string().min(1),V=r.string().min(1),W=r.string().min(1),H=r.string().min(1),Q=r.string().min(1),Y=r.string().min(1),X=r.string().min(1),J=r.union([r.string(),r.number()]),Z=r.string(),ee=r.string(),te=r.string(),O=r.string(),N=r.string(),T=r.string(),ne=r.boolean(),ae=r.string(),Me=e=>G.parse(e),Ke=e=>M.parse(e),Ve=e=>K.parse(e),We=e=>V.parse(e),He=e=>W.parse(e),Qe=e=>H.parse(e),Ye=e=>Q.parse(e),Xe=e=>Y.parse(e),Je=e=>X.parse(e),Ze=e=>J.parse(e),et=e=>Z.parse(e),tt=e=>ee.parse(e),nt=e=>te.parse(e),at=e=>O.parse(e),rt=e=>N.parse(e),it=e=>T.parse(e),ot=e=>ne.parse(e),st=e=>ae.parse(e),ct={originatorName:G.optional(),originatorAccount:M.optional(),originatorBankRoutingCode:K.optional(),recipientName:V.optional(),recipientAccount:W.optional(),recipientBankRoutingCode:H.optional(),reference:Q.optional(),traceNumber:Y.optional(),externalId:X.optional(),clientId:J.optional(),dateFormat:Z.optional(),locale:ee.optional(),originatedBy:te.optional(),paymentRail:R.optional(),paymentType:v.optional(),fromValueDate:O.optional(),toValueDate:O.optional(),fromExecuteDate:N.optional(),toExecuteDate:N.optional(),status:S.optional(),fromReturnDate:T.optional(),toReturnDate:T.optional(),isSettlement:ne.optional(),orderBy:ae.optional(),sortOrder:L.optional(),limit:r.number().min(0).optional().describe("Maximum number of records to return. Defaults to 20 if not specified. Set to 0 to return all records."),offset:r.number().min(0).optional()},In=r.object(ct).partial();var pt={id:r.number(),clientId:r.number(),amount:r.number().positive(),correlationId:r.string(),paymentType:v,paymentRail:R,recipient:r.object({cardId:r.string().optional(),recipientType:r.string(),address:r.object({line1:r.string().optional(),line2:r.string().optional(),stateCode:r.string().optional(),countryCode:r.string(),postalCode:r.string().optional()}),name:r.string()}),originator:r.object({accountId:r.string().optional(),recipientType:r.string(),address:r.object({line1:r.string().optional(),line2:r.string().optional(),stateCode:r.string().optional(),countryCode:r.string(),postalCode:r.string().optional()}),name:r.string()}),executedAt:r.string(),createdAt:r.string(),externalId:r.string(),status:S,paymentRailMetaData:r.record(r.string(),r.any()).optional(),currencyData:r.object({code:r.string(),name:r.string(),decimalPlaces:r.number(),displaySymbol:r.string(),nameCode:r.string(),currencyCodeInDigit:r.number(),isBaseCurrency:r.boolean()}),currency:r.string().min(3).max(3)},re=r.object(pt).catchall(r.any()),dt=r.object({line1:r.string().optional(),line2:r.string().optional(),city:r.string().optional(),stateCode:r.string().optional(),countryCode:r.string().optional(),postalCode:r.string().optional()}).optional(),lt=r.object({accountId:r.string()}),z=r.object({name:r.string(),accountId:r.string().optional(),recipientId:r.string().optional(),accountType:r.enum(["CHECKING","SAVINGS"]).optional(),recipientType:r.enum(["INDIVIDUAL","BUSINESS"]).optional(),accountEntity:r.enum(["PERSONAL","BUSINESS"]).optional(),accountNumber:r.string().optional(),bankInformation:r.object({routingNumber:r.string()}).optional(),cardId:r.string().optional(),contactNumber:r.string().optional(),address:dt}),mt={amount:r.number().positive(),currency:r.string().min(3).max(3),paymentRail:R,paymentType:v,originator:lt,recipient:z,clientId:r.string().optional(),correspondent:z.optional(),exchangeRate:r.number().positive().optional(),externalId:r.string().optional(),reference:r.union([r.string(),r.array(r.string())]).optional(),paymentRailMetaData:r.record(r.string(),r.any()).optional(),chargeBearer:r.enum(["OUR","BEN","SHA"]).optional(),purposeCode:r.string().optional(),valueDate:r.string().optional(),executionDate:r.string().optional()},ut=r.object(mt).catchall(r.any()).refine(e=>(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")&&e.recipient?e.recipient.name&&e.recipient.address&&e.recipient.address.stateCode&&e.recipient.address.countryCode&&e.recipient.accountNumber&&e.recipient.accountType&&e.recipient.bankInformation:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}).refine(e=>e.paymentRail==="INTERNAL"?e.originator.accountId&&e.recipient.accountId:!0,{message:"For INTERNAL transfers, both originator and recipient accountId are mandatory"}).refine(e=>e.paymentRail==="ACH"||e.paymentRail==="SAMEDAYACH"?e.recipient.name&&e.originator.accountId&&e.recipient.accountType&&e.recipient.recipientType&&e.recipient.accountNumber&&e.recipient.bankInformation:!0,{message:"For ACH/SAMEDAYACH transfers, originator and recipient accountId, recipient accountType, originator recipientType, recipient accountNumber and recipient bankInformation are mandatory"}).refine(e=>e.paymentRail==="CARD"&&e.recipient?e.recipient.cardId:!0,{message:"For CARD payments, recipient cardId is mandatory"}).refine(e=>e.paymentRail==="FXPAY"?e.recipient.recipientId&&e.recipient.name&&e.recipient.accountNumber&&e.recipient.accountType&&e.recipient.recipientType&&e.recipient.accountEntity&&e.paymentRailMetaData:!0,{message:"For FXPAY payments, correspondent name and identifier are mandatory"}),yt={amount:r.number().positive().optional(),correspondent:r.object({name:r.string().optional(),identifier:r.string().optional(),accountType:r.string().optional()}).optional(),creditor:r.object({name:r.string().optional(),identifier:r.string().optional(),accountType:r.string().optional(),agent:r.object({name:r.string().optional(),identifier:r.string().optional()}).optional()}).optional(),debtor:r.object({name:r.string().optional(),identifier:r.string().optional(),accountType:r.string().optional(),agent:r.object({name:r.string().optional(),identifier:r.string().optional()}).optional()}).optional(),exchangeRate:r.number().positive().optional(),externalId:r.string().optional(),errorCode:r.string().optional(),errorMessage:r.string().optional(),reference:r.union([r.string(),r.array(r.string())]).optional(),paymentRailMetaData:r.record(r.string(),r.any()).optional(),status:S.optional()},gt=r.object(yt).catchall(r.any()),Rn=r.object({totalFilteredRecords:r.number(),pageItems:r.array(re)}),k=e=>re.parse(e),ie=e=>ut.parse(e),oe=e=>gt.parse(e);var xn=r.object({id:r.string(),clientId:r.number(),resourceId:r.number(),resourceIdentifier:r.string()}),se=e=>{try{je(e)}catch(a){throw a instanceof $?y({message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},ce=(e,a)=>{try{switch(e){case"status":ze(a);break;case"paymentRail":$e(a);break;case"paymentType":_e(a);break;case"sortOrder":Ge(a);break;case"originatorName":Me(a);break;case"originatorAccount":Ke(a);break;case"originatorBankRoutingCode":Ve(a);break;case"recipientName":We(a);break;case"recipientAccount":He(a);break;case"recipientBankRoutingCode":Qe(a);break;case"reference":Ye(a);break;case"traceNumber":Xe(a);break;case"externalId":Je(a);break;case"clientId":Ze(a);break;case"dateFormat":et(a);break;case"locale":tt(a);break;case"originatedBy":nt(a);break;case"fromValueDate":case"toValueDate":at(a);break;case"fromExecuteDate":case"toExecuteDate":rt(a);break;case"fromReturnDate":case"toReturnDate":it(a);break;case"isSettlement":ot(a);break;case"orderBy":st(a);break;default:break}}catch(i){throw i instanceof $?y({message:`Invalid value for '${e}': '${a}'. ${i.message}`,code:`invalid_${e}_value`}):i}};import ht from"axios";import{v4 as Ct}from"uuid";import*as me from"https";import ft from"axios";import bt from"jsonwebtoken";var pe=(e,a)=>{if(!e)throw y({message:"Missing JWT secret",code:"missing_jwt_secret"});return bt.sign({signee:a},e,{algorithm:"HS512",expiresIn:"1d"})||""},de=async(e,a,i,o)=>{let p={method:"POST",url:`${a}/oauth/token`,headers:{"Content-Type":"application/x-www-form-urlencoded",tenantId:i},data:o},{data:{access_token:d}}=await ft.request(p);return e=d,e};var le={token:""},It=e=>e&&(e.startsWith("Bearer ")?e:`Bearer ${e}`),m=async e=>{let i=ht.create({timeout:e.axiosConfig?.timeout||29e3,baseURL:e.baseUrl,headers:{"Content-Type":"application/json; charset=utf-8","JWT-Token":e?.secret?`${pe(e?.secret,e?.signee||"")}`:void 0,Authorization:e.bearerToken!==void 0?It(e.bearerToken):e.credential?`Bearer ${le.token||await de(le.token,e.baseUrl,e.tenantId,e.credential)}`:void 0,"trace-id":e.traceId||`RequestUUID=${Ct()}`,tenantId:e.tenantId},httpsAgent:new me.Agent({rejectUnauthorized:!0,keepAlive:e.axiosConfig?.keepAlive})});return e.logger&&e.logger(i),i};import{ZodError as ue}from"zod";var Bn=e=>({input:e,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async a=>{try{ie(e.payment)}catch(o){throw o instanceof ue?y({message:`Invalid payment data: ${o.message}`,code:"invalid_payment_input"}):o}e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post("/v1/payments",e.payment)).data}catch(o){u(o)}}}),jn=e=>({input:e,metadata:{commandName:"GetPayment",path:`/v1/payments/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o=await i.get(`/v1/payments/${e.id}`);return k(o.data)}catch(o){u(o)}}}),zn=e=>({input:e,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${e.id}`,method:"PUT"},execute:async a=>{try{oe(e.payment)}catch(o){throw o instanceof ue?y({message:`Invalid payment update data: ${o.message}`,code:"invalid_payment_update_input"}):o}e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o=await i.put(`/v1/payments/${e.id}`,e.payment);return k(o.data)}catch(o){u(o)}}}),A=(e,a,i,o)=>{if(a!==void 0&&a!==0&&a<=0)throw y({message:`Invalid limit: ${a}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(i!==void 0&&i<0)throw y({message:`Invalid offset: ${i}. Offset must be non-negative.`,code:"invalid_offset"});return{where:c=>(se(c),{eq:l=>(ce(c,l),A({...e,[c]:l},a,i,o))}),limit:c=>A(e,c,i,o),offset:c=>A(e,a,c,o),all:()=>A(e,0,i,o),execute:()=>{let c={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},l={...c,...e,limit:a||20,offset:i||0};return{input:{filters:e,limit:a,offset:i,tenantId:o},metadata:{commandName:"ListPayments",path:"/v1/payments",method:"GET"},execute:async g=>{o&&(g.tenantId=o);let f=await m(g);try{if(a===0){let b=[],C=i||0,I=0;do{let x={...c,...e,limit:200,offset:C},P=await f.get("/v1/payments",{params:x}),{totalFilteredRecords:w,pageItems:Fe}=P.data;b.push(...Fe),I=w,C+=200}while(C<I);return{totalFilteredRecords:I,pageItems:b}}else return(await f.get("/v1/payments",{params:l})).data}catch(b){u(b)}}}}}},$n=e=>({list:()=>A({},void 0,void 0,e?.tenantId)}),_n=(e,a)=>({input:{params:e,configuration:a},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async i=>{a?.tenantId&&(i.tenantId=a.tenantId);let o=await m(i),p=[],d=e.limit||20,c=e.offset||0,l=0,g={locale:"en",originatedBy:"us",orderBy:"id",sortOrder:"DESC"},f=b=>{let C=["fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","fromReturnDate","toReturnDate"].some(x=>b[x]!==void 0),I={...b};return C&&I.dateFormat===void 0&&(I.dateFormat="yyyy-MM-dd"),I};try{if(e.limit===0){do{let b={...g,...f(e),limit:d,offset:c},h=await o.get("/v1/payments",{params:b}),{totalFilteredRecords:C,pageItems:I}=h.data;p.push(...I),l=C,c+=d}while(c<l);return{totalFilteredRecords:l,pageItems:p}}else{let b={...g,...f(e),limit:d,offset:c};return(await o.get("/v1/payments",{params:b})).data}}catch(b){u(b)}}}),Gn=e=>({input:e,metadata:{commandName:"DeletePayment",path:`/v1/payments/${e.id}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{await i.delete(`/v1/payments/${e.id}`)}catch(o){u(o)}}});import t from"zod";var ye=t.object({id:t.number(),code:t.string(),value:t.string()}),ge=t.object({id:t.number(),code:t.string(),value:t.string()}),fe=t.object({active:t.boolean(),mandatory:t.boolean(),systemDefined:t.boolean()}),be=t.object({id:t.number()}),he=t.object({id:t.number(),name:t.string().optional()}),Ce=t.object({active:t.boolean()}),Ie=t.object({submittedOnDate:t.array(t.number()),submittedByUsername:t.string().optional(),submittedByFirstname:t.string().optional(),submittedByLastname:t.string().optional(),activatedOnDate:t.array(t.number()).optional(),activatedByUsername:t.string().optional(),activatedByFirstname:t.string().optional(),activatedByLastname:t.string().optional()}),Rt=t.object({}).catchall(t.any()),xt=t.object({}).catchall(t.any()),St=t.object({}).catchall(t.any()),Re=t.object({constitution:Rt,mainBusinessLine:xt,countryOfIncorporation:St}).catchall(t.any()),xe=t.object({isExternalCardDebitDisable:t.boolean(),isExternalCardCreditDisable:t.boolean(),isAchDebitOutgoingDisable:t.boolean(),isAchCreditOutgoingDisable:t.boolean(),isAchDebitIncomingDisable:t.boolean(),isAchCreditIncomingDisable:t.boolean(),isInternalCreditDisable:t.boolean(),isInternalDebitDisable:t.boolean(),isWireCreditOutgoingDisable:t.boolean(),isWireCreditIncomingDisable:t.boolean(),isSwiftCreditOutgoingDisable:t.boolean(),isSwiftCreditIncomingDisable:t.boolean(),isFxpayCreditOutgoingDisable:t.boolean(),isAllocateToSubAccountDisable:t.boolean(),isInternalCreditOwnDisable:t.boolean(),type:t.string(),resourceId:t.number(),id:t.number()}).catchall(t.any()),Se=t.object({}).catchall(t.any()),ve=t.object({id:t.number(),accountNo:t.string(),status:ge,subStatus:fe,active:t.boolean(),activationDate:t.array(t.number()).optional(),firstname:t.string(),lastname:t.string(),displayName:t.string(),mobileNo:t.string(),emailAddress:t.string(),dateOfBirth:t.array(t.number()),gender:be,clientTypes:t.array(t.any()),clientClassification:he,occupation:Ce,isStaff:t.boolean(),skipAvs:t.boolean(),officeId:t.number(),officeName:t.string(),imageId:t.string().optional(),imagePresent:t.boolean().optional(),timeline:Ie,legalForm:ye,clientVerificationStatus:t.string(),updatedAt:t.string(),isBlockExternalCardsAddition:t.boolean(),clientNonPersonDetails:Re,clientTransferOptionData:xe,authorizations:t.array(t.number()).optional(),mobileCountryCode:t.string(),clientKycStatus:Se,ofLoanCycle:t.number(),ofLoanActive:t.number(),activeDepositAccount:t.number(),onBoardingStatus:t.string().optional()}).catchall(t.any()),vt=t.object({riskScore:t.number(),rating:t.string()}).catchall(t.any()),At=t.object({street:t.string(),city:t.string(),state:t.string(),zipCode:t.string()}).catchall(t.any()),Dt=t.object({type:t.string(),value:t.string()}).catchall(t.any()),Et={firstname:t.string(),middlename:t.string().optional(),lastname:t.string(),fullname:t.string().optional(),dob:t.string(),genderId:t.number(),locale:t.string(),officeId:t.number(),mobileCountryCode:t.string(),mobileNo:t.string(),emailAddress:t.string().email(),legalFormId:t.number(),externalId:t.string().optional(),isOptedForMLALStatus:t.boolean().optional(),currentMLALStatus:t.string().optional(),isStaff:t.boolean().optional(),staffId:t.number().optional(),clientClassificationId:t.number().optional(),savingsProductId:t.number().optional(),active:t.boolean().optional(),dateFormat:t.string(),activationDate:t.string().optional(),submittedOnDate:t.string(),dateOfBirth:t.string()},Wn=t.object(Et).catchall(t.any()),Pt={clientId:t.number(),status:t.string()},Hn=t.object(Pt).catchall(t.any()),wt={firstname:t.string().optional(),middlename:t.string().optional(),fullname:t.string().optional(),genderId:t.number().optional(),lastname:t.string().optional(),occupationId:t.number().optional(),mobileCountryCode:t.string().optional(),mobileNo:t.string().optional(),emailAddress:t.string().email().optional(),externalId:t.string().optional(),clientClassificationId:t.number().optional(),dateOfBirth:t.string().optional(),dateFormat:t.string().optional()},Qn=t.object(wt).catchall(t.any()),Ot={documentTypeId:t.string(),documentKey:t.string(),status:t.string(),description:t.string().optional(),issuedBy:t.string().optional(),locale:t.string().optional(),dateFormat:t.string().optional(),expiryDate:t.string().optional(),nationality:t.number().optional(),issuedDate:t.string().optional()},Yn=t.object(Ot).catchall(t.any()),Nt={id:t.number(),officeId:t.number(),clientId:t.number(),resourceId:t.number(),changes:t.record(t.string(),t.any()),isScheduledTransfer:t.boolean(),isSkipNotification:t.boolean()},Xn=t.object(Nt).catchall(t.any()),Tt={developerMessage:t.string(),defaultUserMessage:t.string(),userMessageGlobalisationCode:t.string(),parameterName:t.string().optional(),value:t.any().nullable(),args:t.array(t.object({value:t.any()})).optional()},Lt=t.object(Tt),kt={developerMessage:t.string(),httpStatusCode:t.string(),defaultUserMessage:t.string(),userMessageGlobalisationCode:t.string(),errors:t.array(Lt).optional()},Jn=t.object(kt).catchall(t.any()),qt={tenantId:t.string().optional(),offset:t.number().optional(),limit:t.number().optional(),orderBy:t.string().optional(),sortOrder:t.string().optional(),officeId:t.number().optional(),displayName:t.string().optional(),firstname:t.string().optional(),lastname:t.string().optional(),externalId:t.string().optional(),orphansOnly:t.boolean().optional(),clientStatus:t.string().optional(),mobileNo:t.string().optional(),createdStartDate:t.string().optional(),creationEndDate:t.string().optional(),activatedStartDate:t.string().optional(),activatedEndDate:t.string().optional(),closedStartDate:t.string().optional(),closedEndDate:t.string().optional()},Zn=t.object(qt),ea={id:t.number(),accountNo:t.string(),status:ge,subStatus:fe,active:t.boolean(),activationDate:t.array(t.number()).optional(),firstname:t.string(),lastname:t.string(),displayName:t.string(),mobileNo:t.string(),emailAddress:t.string(),dateOfBirth:t.array(t.number()),gender:be,clientTypes:t.array(t.any()),clientClassification:he,occupation:Ce,isStaff:t.boolean(),skipAvs:t.boolean(),officeId:t.number(),officeName:t.string(),imageId:t.string().optional(),imagePresent:t.boolean().optional(),timeline:Ie,legalForm:ye,clientVerificationStatus:t.string(),updatedAt:t.string(),isBlockExternalCardsAddition:t.boolean(),clientNonPersonDetails:Re,clientTransferOptionData:xe,authorizations:t.array(t.number()).optional(),mobileCountryCode:t.string(),clientKycStatus:Se,ofLoanCycle:t.number(),ofLoanActive:t.number(),activeDepositAccount:t.number(),onBoardingStatus:t.string().optional()},Ft={totalFilteredRecords:t.number(),pageItems:t.array(ve)},ta=t.object(Ft).catchall(t.any()),Ut={clientData:ve.optional(),riskRatingData:vt.optional(),clientAddressData:At.optional(),clientIdentifierData:Dt.optional()},na=t.object(Ut);var Bt=t.enum(["offset","limit","orderBy","sortOrder","officeId","displayName","firstname","lastname","externalId","orphansOnly","clientStatus","mobileNo","createdStartDate","creationEndDate","activatedStartDate","activatedEndDate","closedStartDate","closedEndDate"]),jt=t.enum(["displayName","accountNo","officeId","officeName"]),zt=t.enum(["ASC","DESC"]),$t=t.enum(["ACTIVE","PENDING","INACTIVE"]),q=e=>Bt.parse(e),_t=e=>jt.parse(e),Gt=e=>zt.parse(e),Mt=e=>$t.parse(e),Ae=e=>{try{for(let[a,i]of Object.entries(e))if(q(a),i!=null)switch(a){case"orderBy":_t(i);break;case"sortOrder":Gt(i);break;case"clientStatus":Mt(i);break;case"offset":case"limit":case"officeId":t.number().min(0).parse(i);break;case"orphansOnly":t.boolean().parse(i);break;case"displayName":case"firstname":case"lastname":case"externalId":case"mobileNo":case"createdStartDate":case"creationEndDate":case"activatedStartDate":case"activatedEndDate":case"closedStartDate":case"closedEndDate":t.string().min(1).parse(i);break}}catch(a){throw a instanceof t.ZodError?y({message:`Validation error: ${a.errors.map(i=>i.message).join(", ")}`,code:"validation_error"}):a}};var ga=e=>({input:e,metadata:{commandName:"GetClient",path:`/v1/clients/${e.clientId}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{let o={},p=new URLSearchParams;e.staffInSelectedOfficeOnly&&p.append("staffInSelectedOfficeOnly","true"),e.checkIdentitiesExpiration&&p.append("checkIdentitiesExpiration","true"),e.clientAccountAssociate&&p.append("clientAccountAssociate","true");let d=p.toString(),c=`/v1/clients/${e.clientId}${d?`?${d}`:""}`,l=await i.get(c);if(o.clientData=l,e.riskRating){let g=await i.get(`/v1/clients/${e.clientId}/riskrating`);o.riskRatingData=g}if(e.clientAddress){let g=await i.get(`/v1/client/${e.clientId}/addresses`);o.clientAddressData=g}if(e.clientIdentifier){let g=await i.get(`/v1/clients/${e.clientId}/identifiers?unmaskValue=true`);o.clientIdentifierData=g}return o}catch(o){u(o)}}}),fa=e=>({input:e,metadata:{commandName:"UpdateClient",path:`/v1/clients/${e.clientId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/clients/${e.clientId}`,{...e.updates})).data}catch(o){u(o)}}}),ba=e=>({input:e,metadata:{commandName:"UpdateClientIdentifier",path:`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/clients/${e.clientId}/identifiers/${e.identifierId}`,{...e.updates})).data}catch(o){u(o)}}}),ha=e=>({input:e,metadata:{commandName:"CreateClient",path:"/v1/clients",method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post("/v1/clients",e.clientData)).data}catch(o){u(o)}}}),D=(e,a,i,o)=>{if(a!==void 0&&a!==0&&a<=0)throw y({message:`Invalid limit: ${a}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(i!==void 0&&i<0)throw y({message:`Invalid offset: ${i}. Offset must be non-negative.`,code:"invalid_offset"});return{where:c=>(q(c),{eq:l=>(Ae({[c]:l}),D({...e,[c]:l},a,i,o))}),limit:c=>D(e,c,i,o),offset:c=>D(e,a,c,o),all:()=>D(e,0,i,o),execute:()=>{let c={...e,limit:a||200,offset:i||0};return{input:{filters:e,limit:a,offset:i,tenantId:o},metadata:{commandName:"ListClients",path:"/v1/clients",method:"GET"},execute:async l=>{o&&(l.tenantId=o);let g=await m(l);try{if(a===0){let f=[],h=i||0,C=0;do{let I={...e,limit:200,offset:h},x=await g.get("/v1/clients",{params:I}),{totalFilteredRecords:P,pageItems:w}=x.data;f.push(...w),C=P,h+=200}while(h<C);return{totalFilteredRecords:C,pageItems:f}}else return(await g.get("/v1/clients",{params:c})).data}catch(f){u(f)}}}}}},Ca=e=>({list:()=>D({},void 0,void 0,e?.tenantId)}),Ia=(e,a)=>({input:{params:e,configuration:a},metadata:{commandName:"GetClients",path:"/v1/clients",method:"GET"},execute:async i=>{a.tenantId&&(i.tenantId=a.tenantId);let o=await m(i),p=[],d=e.limit||200,c=e.offset||0,l=0,g={...e,limit:d,offset:c};try{if(e.limit===0){do{let f=await o.get("/v1/clients",{params:g}),{totalFilteredRecords:b,pageItems:h}=f.data;p.push(...h),l=b,c+=d}while(c<l);return{totalFilteredRecords:l,pageItems:p}}else return(await o.get("/v1/clients",{params:g})).data}catch(f){u(f)}}}),Ra=e=>({input:e,metadata:{commandName:"DeleteClient",path:`/v1/clients/${e.clientId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/clients/${e.clientId}`)).data}catch(o){u(o)}}});import{z as n}from"zod";var De=n.object({id:n.number(),code:n.string(),value:n.string(),submittedAndPendingApproval:n.boolean(),approved:n.boolean(),rejected:n.boolean(),withdrawnByApplicant:n.boolean(),active:n.boolean(),closed:n.boolean(),prematureClosed:n.boolean(),transferInProgress:n.boolean(),transferOnHold:n.boolean(),matured:n.boolean()}),F=n.object({code:n.string(),name:n.string(),decimalPlaces:n.number(),inMultiplesOf:n.number(),displaySymbol:n.string(),nameCode:n.string(),displayLabel:n.string(),currencyCodeInDigit:n.number().optional(),isBaseCurrency:n.boolean().optional()}),Kt=n.object({id:n.number(),code:n.string(),value:n.string()}),Ee=n.object({submittedOnDate:n.array(n.number()),submittedByUsername:n.string(),submittedByFirstname:n.string(),submittedByLastname:n.string(),approvedOnDate:n.array(n.number()).optional(),approvedByUsername:n.string().optional(),approvedByFirstname:n.string().optional(),approvedByLastname:n.string().optional(),activatedOnDate:n.array(n.number()).optional(),activatedByUsername:n.string().optional(),activatedByFirstname:n.string().optional(),activatedByLastname:n.string().optional()}),Pe=n.object({id:n.number(),code:n.string(),value:n.string(),none:n.boolean(),inactive:n.boolean(),dormant:n.boolean(),escheat:n.boolean(),block:n.boolean(),blockCredit:n.boolean(),blockDebit:n.boolean()}),we=n.object({id:n.number(),code:n.string(),value:n.string()}),Vt=n.object({id:n.number(),accountNo:n.string(),productId:n.number(),productName:n.string(),shortProductName:n.string(),status:De,currency:F,accountBalance:n.number(),accountType:Kt,timeline:Ee,subStatus:Pe,lastActiveTransactionDate:n.array(n.number()).optional(),depositType:we,availableBalance:n.number(),allowPrepaidCard:n.boolean(),primaryAccount:n.record(n.any())}),Wt={id:n.number(),accountNo:n.string(),depositType:we,clientId:n.number(),clientName:n.string(),savingsProductId:n.number(),savingsProductName:n.string(),fieldOfficerId:n.number(),status:De,subStatus:Pe,timeline:Ee,currency:F,nominalAnnualInterestRate:n.number(),interestCompoundingPeriodType:n.object({id:n.number(),code:n.string(),value:n.string()}),interestPostingPeriodType:n.object({id:n.number(),code:n.string(),value:n.string()}),interestCalculationType:n.object({id:n.number(),code:n.string(),value:n.string()}),interestCalculationDaysInYearType:n.object({id:n.number(),code:n.string(),value:n.string()}),lockinPeriodFrequency:n.number(),lockinPeriodFrequencyType:n.object({id:n.number(),code:n.string(),value:n.string()}),withdrawalFeeForTransfers:n.boolean(),allowOverdraft:n.boolean(),enforceMinRequiredBalance:n.boolean(),onHoldFunds:n.number(),withHoldTax:n.boolean(),lastActiveTransactionDate:n.array(n.number()),isDormancyTrackingActive:n.boolean(),savingsAmountOnHold:n.number(),summary:n.object({currency:F,totalDeposits:n.number(),totalInterestEarned:n.number(),totalInterestPosted:n.number(),accountBalance:n.number(),totalOverdraftInterestDerived:n.number(),interestNotPosted:n.number(),lastInterestCalculationDate:n.array(n.number()),availableBalance:n.number()}),isLinkedToFloatingInterestRates:n.boolean(),interestRateDifferential:n.number(),overdraftInterestRateDifferential:n.number(),floatingRateId:n.number(),isBaseLendingRate:n.boolean(),isFloatingInterestRateCalculationAllowed:n.boolean(),bankDetails:n.object({routingNumber:n.string(),name:n.string(),swiftCode:n.string(),address:n.string(),city:n.string(),postcode:n.string()}),skipCollectTransferCharge:n.boolean(),cardRestricted:n.boolean(),overdraftLimit:n.number(),minRequiredBalance:n.number(),minBalanceForInterestCalculation:n.number(),minOverdraftForInterestCalculation:n.number(),overdraftMinimumDue:n.number(),currentFloatingInterestPeriod:n.object({fromDate:n.array(n.number()),interestRate:n.number(),isDifferentialToBLR:n.boolean()}),floatingRateName:n.string(),floatingRateDifferential:n.number(),parentAccount:n.object({withdrawalFeeForTransfers:n.boolean(),allowOverdraft:n.boolean(),enforceMinRequiredBalance:n.boolean(),withHoldTax:n.boolean(),isDormancyTrackingActive:n.boolean(),isLinkedToFloatingInterestRates:n.boolean(),isBaseLendingRate:n.boolean(),skipCollectTransferCharge:n.boolean(),cardRestricted:n.boolean(),allowPrepaidCard:n.boolean(),prepaidAccount:n.boolean()}),allowPrepaidCard:n.boolean(),prepaidAccount:n.boolean(),prepaidLimitAmount:n.number()},Aa=n.object(Wt),Ht={savingsAccounts:n.array(Vt)},Da=n.object(Ht),Qt=n.enum(["showReservedAccount"]),Yt={tenantId:n.string().optional(),showReservedAccount:n.boolean().optional().default(!1)},Ea=n.object(Yt),U=e=>Qt.parse(e),Oe=e=>{try{for(let[a,i]of Object.entries(e))if(U(a),i!=null)switch(a){case"showReservedAccount":n.boolean().parse(i);break}}catch(a){throw a instanceof n.ZodError?y({message:`Validation error: ${a.errors.map(i=>i.message).join(", ")}`,code:"validation_error"}):a}},Xt={clientId:n.number(),productId:n.number(),submittedOnDate:n.string(),nominalAnnualInterestRate:n.string(),minRequiredOpeningBalance:n.string(),lockinPeriodFrequency:n.string(),withdrawalFeeForTransfers:n.boolean(),allowOverdraft:n.boolean(),overdraftLimit:n.number(),minOverdraftForInterestCalculation:n.number(),enforceMinRequiredBalance:n.boolean(),minRequiredBalance:n.number(),withHoldTax:n.boolean(),interestCompoundingPeriodType:n.number(),interestPostingPeriodType:n.number(),interestCalculationType:n.number(),interestCalculationDaysInYearType:n.number(),fieldOfficerId:n.number(),lockinPeriodFrequencyType:n.number(),locale:n.string(),dateFormat:n.string(),monthDayFormat:n.string(),charges:n.array(n.any())},Pa=n.object(Xt);var Fa=e=>({input:e,metadata:{commandName:"GetAccount",path:`/v1/savingaccounts/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.get(`/v1/savingaccounts/${e.id}`)).data}catch(o){u(o)}}}),Ua=e=>({input:e,metadata:{commandName:"UpdateAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"PUT"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.put(`/v1/savingsaccounts/${e.accountId}`,{...e.updates,clientId:e.clientId})).data}catch(o){u(o)}}}),Ba=e=>({input:e,metadata:{commandName:"DeleteAccount",path:`/v1/savingsaccounts/${e.accountId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/savingsaccounts/${e.accountId}`)).data}catch(o){u(o)}}}),Ne=(e,a,i)=>({where:d=>(U(d),{eq:c=>(Oe({[d]:c}),Ne({...e,[d]:c},a,i))}),execute:()=>({input:{filters:e,tenantId:i},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${a}/accounts`,method:"GET"},execute:async d=>{i&&(d.tenantId=i);let c=await m(d);try{return(await c.get(`/v1/clients/${a}/accounts`,{params:e})).data}catch(l){u(l)}}})}),ja=e=>({list:()=>Ne({},e?.clientId||0,e?.tenantId)}),za=(e,a,i)=>({input:{params:a,configuration:i},metadata:{commandName:"ListAccountsOfClient",path:`/v1/clients/${e}/accounts`,method:"GET"},execute:async o=>{i.tenantId&&(o.tenantId=i.tenantId);let p=await m(o);try{return(await p.get(`/v1/clients/${e}/accounts`,{params:a})).data}catch(d){u(d)}}});import{z as s,ZodError as Te}from"zod";var Jt=s.object({routingNumber:s.string(),swiftCode:s.string()}),B=s.object({accountNumber:s.string(),bankInformation:Jt}),j=s.object({line1:s.string(),line2:s.string(),city:s.string(),stateCode:s.string(),countryCode:s.string(),postalCode:s.string()}),Zt={id:s.number(),clientId:s.number(),nickName:s.string(),firstName:s.string(),lastName:s.string(),businessName:s.string(),emailAddress:s.string(),phoneNumber:s.string(),recipientType:s.string(),paymentRail:s.string(),isOwnAccount:s.boolean(),address:j,accountDetailsData:B},en=s.object(Zt),Ka=s.array(en),tn={limit:s.number().min(1).optional().describe("Maximum number of records to return. Defaults to 20 if not specified. Set to 0 to return all records."),offset:s.number().min(0).optional(),name:s.string().optional()},Va=s.object(tn),nn={nickName:s.string(),firstName:s.string(),lastName:s.string(),businessName:s.string().optional(),emailAddress:s.string().email(),phoneNumber:s.string(),recipientType:s.string(),paymentRail:R,isOwnAccount:s.boolean().optional(),address:j.optional(),accountDetailsData:B},Wa=s.object(nn).refine(e=>e.paymentRail==="WIRE"||e.paymentRail==="SWIFT"?e.address!==void 0&&e.address.stateCode!==void 0&&e.address.countryCode!==void 0:!0,{message:"Address with state code and country code is required for WIRE and SWIFT payment rails",path:["address"]}),an=s.enum(["name"]),rn=e=>an.parse(e),Le=e=>{try{rn(e)}catch(a){throw a instanceof Te?y({message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},ke=(e,a)=>{try{switch(e){case"name":s.string().parse(a);break;default:break}}catch(i){throw i instanceof Te?y({message:`Invalid value for '${e}': '${a}'. ${i.message}`,code:`invalid_${e}_value`}):i}},on={nickName:s.string().optional(),firstName:s.string().optional(),lastName:s.string().optional(),businessName:s.string().optional(),emailAddress:s.string().email().optional(),phoneNumber:s.string().optional(),recipientType:s.string().optional(),paymentRail:R.optional(),isOwnAccount:s.boolean().optional(),address:j.optional(),accountDetailsData:B.optional()},Ha=s.object(on).refine(e=>e.paymentRail&&e.address&&(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")?e.address.stateCode!==void 0&&e.address.countryCode!==void 0:!0,{message:"When updating address for WIRE/SWIFT payment rails, state code and country code are required",path:["address"]});var ar=e=>({input:e,metadata:{commandName:"GetRecipient",path:`/v1/clients/${e.clientId}/recipients/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.get(`/v1/clients/${e.clientId}/recipients/${e.id}`)).data}catch(o){u(o)}}}),rr=e=>({input:e,metadata:{commandName:"CreateRecipient",path:`/v1/clients/${e.clientId}/recipients`,method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.post(`/v1/clients/${e.clientId}/recipients`,e.recipient)).data}catch(o){u(o)}}}),ir=e=>({input:e,metadata:{commandName:"DeleteRecipient",path:`/v1/clients/${e.clientId}/recipients/${e.recipientId}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.delete(`/v1/clients/${e.clientId}/recipients/${e.recipientId}`)).data}catch(o){u(o)}}}),E=(e,a,i,o,p)=>({where:l=>(Le(l),{eq:g=>(ke(l,g),E(e,{...a,[l]:g},i,o,p))}),limit:l=>E(e,a,l,o,p),offset:l=>E(e,a,i,l,p),execute:()=>{let g={...{name:""},...a,limit:i||20,offset:o||0};return{input:{tenantId:p},metadata:{commandName:"ListRecipients",path:`/v1/clients/${e}/recipients`,method:"GET"},execute:async f=>{p&&(f.tenantId=p);let b=await m(f);try{return(await b.get(`/v1/clients/${e}/recipients`,{params:g})).data}catch(h){u(h)}}}}}),or=e=>({list:()=>E(e?.clientId||0,{},void 0,void 0,e?.tenantId)}),sr=(e,a,i)=>({input:{params:a,configuration:i},metadata:{commandName:"GetRecipients",path:`/v1/clients/${e}/recipients`,method:"GET"},execute:async o=>{i.tenantId&&(o.tenantId=i.tenantId);let p=await m(o);(!a.limit||a.limit<=0)&&(a.limit=20),a.name||(a.name="");try{return(await p.get(`/v1/clients/${e}/recipients`,{params:a})).data}catch(d){u(d)}}});import{print as cn}from"graphql";var sn=`
  mutation updateRecipient($id: ID!, $input: UpdateRecipientInput!) {
    updateRecipient(id: $id, input: $input) {
      id
      clientId
      nickName
      firstName
      lastName
      businessName
      emailAddress
      phoneNumber
      recipientType
      paymentRail
      isOwnAccount
      address {
        line1
        line2
        city
        stateCode
        countryCode
        postalCode
      }
      accountDetailsData {
        accountNumber
        bankInformation {
          routingNumber
          swiftCode
        }
      }
    }
  }
`,dr=e=>{let a=qe({command:sn,variables:{id:e.id,input:e.input},operationName:"updateRecipient",tenantId:e.tenantId});return{input:e,metadata:{commandName:"UpdateRecipientGQL",path:"/graphql",method:"POST"},execute:a.execute}};var qe=e=>({input:e,metadata:{commandName:e.operationName||"GraphQL",path:"/graphql",method:"POST"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let i=await m(a),o=a.graphqlPath||"/graphql";try{let p=typeof e.command=="string"?e.command:cn(e.command),{data:d}=await i.post(o,{query:p,variables:e.variables,operationName:e.operationName});if(d.errors?.length)throw y({message:d.errors[0].message,code:"graphql_error",originalError:d.errors[0]});if(!d.data)throw y({message:"No data returned from GraphQL query",code:"graphql_no_data"});return d.data}catch(p){throw p.name==="CommandError"?p:y({message:p.message,code:"graphql_request_failed",originalError:p})}}});var Cr=e=>({input:e||{},metadata:{commandName:"GetUserDetail",path:"/v1/userdetails",method:"GET"},execute:async a=>{e?.tenantId&&(a.tenantId=e.tenantId);let i=await m(a);try{return(await i.get("/v1/userdetails")).data}catch(o){u(o)}}});export{y as a,ln as b,u as c,m as d,_ as e,S as f,R as g,v as h,L as i,ct as j,In as k,pt as l,mt as m,ut as n,yt as o,gt as p,Rn as q,Bn as r,jn as s,zn as t,$n as u,_n as v,Gn as w,ga as x,fa as y,ba as z,ha as A,Ca as B,Ia as C,Ra as D,Wt as E,Aa as F,Ht as G,Da as H,Yt as I,Ea as J,Xt as K,Pa as L,Fa as M,Ua as N,Ba as O,ja as P,za as Q,ar as R,rr as S,ir as T,or as U,sr as V,qe as W,dr as X,Cr as Y};
