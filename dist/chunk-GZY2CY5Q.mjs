import{a as y,c as g,d as f}from"./chunk-RX3BFHHX.mjs";var v=t=>{let n=[];if(!t.baseUrl)n.push("baseUrl is required");else if(typeof t.baseUrl!="string")n.push("baseUrl must be a string");else try{new URL(t.baseUrl)}catch{n.push("baseUrl must be a valid URL")}return t.axiosConfig?.timeout!==void 0&&(typeof t.axiosConfig.timeout!="number"||t.axiosConfig.timeout<0)&&n.push("timeout must be a positive number"),n};import{z as e}from"zod";var O=e.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),h=e.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),P=e.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),C=e.enum(["CREDIT","DEBIT"]),w=e.enum(["ASC","DESC"]),_e=O.options,ze=h.options,Ve=P.options,je=C.options,$e=w.options,N=t=>O.parse(t),k=t=>h.parse(t),B=t=>P.parse(t),U=t=>C.parse(t),F=t=>w.parse(t),L=e.string().min(1),_=e.string().min(1),z=e.string().min(1),V=e.string().min(1),j=e.string().min(1),$=e.string().min(1),M=e.string().min(1),G=e.string().min(1),q=e.string().min(1),K=e.union([e.string(),e.number()]),H=e.string(),Y=e.string(),W=e.string(),D=e.string(),A=e.string(),T=e.string(),X=e.boolean(),J=e.string(),Q=t=>L.parse(t),Z=t=>_.parse(t),ee=t=>z.parse(t),te=t=>V.parse(t),ne=t=>j.parse(t),ae=t=>$.parse(t),re=t=>M.parse(t),oe=t=>G.parse(t),ie=t=>q.parse(t),se=t=>K.parse(t),pe=t=>H.parse(t),ce=t=>Y.parse(t),me=t=>W.parse(t),de=t=>D.parse(t),ye=t=>A.parse(t),le=t=>T.parse(t),ue=t=>X.parse(t),ge=t=>J.parse(t),De={originatorName:L.optional(),originatorAccount:_.optional(),originatorBankRoutingCode:z.optional(),recipientName:V.optional(),recipientAccount:j.optional(),recipientBankRoutingCode:$.optional(),reference:M.optional(),traceNumber:G.optional(),externalId:q.optional(),clientId:K.optional(),dateFormat:H.optional(),locale:Y.optional(),originatedBy:W.optional(),paymentRail:P.optional(),paymentType:C.optional(),fromValueDate:D.optional(),toValueDate:D.optional(),fromExecuteDate:A.optional(),toExecuteDate:A.optional(),status:h.optional(),fromReturnDate:T.optional(),toReturnDate:T.optional(),isSettlement:X.optional(),orderBy:J.optional(),sortOrder:w.optional(),limit:e.number().positive().optional(),offset:e.number().min(0).optional()},Me=e.object(De).partial();var Ae={id:e.number(),clientId:e.number(),amount:e.number().positive(),correlationId:e.string(),paymentType:C,paymentRail:P,recipient:e.object({cardId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),originator:e.object({accountId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),executedAt:e.string(),createdAt:e.string(),externalId:e.string(),status:h,paymentRailMetaData:e.record(e.string(),e.any()).optional(),currencyData:e.object({code:e.string(),name:e.string(),decimalPlaces:e.number(),displaySymbol:e.string(),nameCode:e.string(),currencyCodeInDigit:e.number(),isBaseCurrency:e.boolean()}),currency:e.string().min(3).max(3)},fe=e.object(Ae).catchall(e.any()),xe=e.object({streetAddress:e.string().optional(),city:e.string().optional(),state:e.string().optional(),country:e.string().optional(),postalCode:e.string().optional()}).optional(),Te=e.object({name:e.string().optional(),identifier:e.string().optional(),address:xe}).optional(),E=e.object({name:e.string(),identifier:e.string(),accountType:e.enum(["CHECKING","SAVINGS"]).optional(),address:xe,agent:Te}),we={amount:e.number().positive(),currency:e.string().min(3).max(3),paymentRail:P,paymentType:C,debtor:E,creditor:E,clientId:e.string().optional(),correspondent:E.optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),chargeBearer:e.enum(["OUR","BEN","SHA"]).optional(),purposeCode:e.string().optional(),valueDate:e.string().optional(),executionDate:e.string().optional()},Oe=e.object(we).catchall(e.any()).refine(t=>(t.paymentRail==="WIRE"||t.paymentRail==="SWIFT")&&t.creditor?t.creditor.address&&t.creditor.address.state&&t.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),Ne={amount:e.number().positive().optional(),correspondent:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional()}).optional(),creditor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),debtor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),errorCode:e.string().optional(),errorMessage:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),status:h.optional()},ke=e.object(Ne).catchall(e.any()),Ge=e.object({totalFilteredRecords:e.number(),pageItems:e.array(fe)}),S=t=>fe.parse(t),Ie=t=>Oe.parse(t),he=t=>ke.parse(t);import{ZodError as b}from"zod";var Be=t=>{try{N(t)}catch(n){throw n instanceof b?y({message:`Invalid filter key: '${t}'. ${n.message}`,code:"invalid_filter_key"}):n}},Ue=(t,n)=>{try{switch(t){case"status":k(n);break;case"paymentRail":B(n);break;case"paymentType":U(n);break;case"sortOrder":F(n);break;case"originatorName":Q(n);break;case"originatorAccount":Z(n);break;case"originatorBankRoutingCode":ee(n);break;case"recipientName":te(n);break;case"recipientAccount":ne(n);break;case"recipientBankRoutingCode":ae(n);break;case"reference":re(n);break;case"traceNumber":oe(n);break;case"externalId":ie(n);break;case"clientId":se(n);break;case"dateFormat":pe(n);break;case"locale":ce(n);break;case"originatedBy":me(n);break;case"fromValueDate":case"toValueDate":de(n);break;case"fromExecuteDate":case"toExecuteDate":ye(n);break;case"fromReturnDate":case"toReturnDate":le(n);break;case"isSettlement":ue(n);break;case"orderBy":ge(n);break;default:break}}catch(r){throw r instanceof b?y({message:`Invalid value for '${t}': '${n}'. ${r.message}`,code:`invalid_${t}_value`}):r}},Pe=t=>({input:t,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async n=>{try{Ie(t.payment)}catch(a){throw a instanceof b?y({message:`Invalid payment data: ${a.message}`,code:"invalid_payment_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let r=await f(n);try{let a=await r.post("/v1/payments",t.payment);return S(a.data)}catch(a){g(a)}}}),Ce=t=>({input:t,metadata:{commandName:"GetPayment",path:`/v1/payments/${t.id}`,method:"GET"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await f(n);try{let a=await r.get(`/v1/payments/${t.id}`);return S(a.data)}catch(a){g(a)}}}),Re=t=>({input:t,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${t.id}`,method:"PUT"},execute:async n=>{try{he(t.payment)}catch(a){throw a instanceof b?y({message:`Invalid payment update data: ${a.message}`,code:"invalid_payment_update_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let r=await f(n);try{let a=await r.put(`/v1/payments/${t.id}`,t.payment);return S(a.data)}catch(a){g(a)}}}),R=(t,n,r,a)=>{if(n!==void 0&&n!==0&&n<=0)throw y({message:`Invalid limit: ${n}. Limit must be positive or 0 for fetching all records.`,code:"invalid_limit"});if(r!==void 0&&r<0)throw y({message:`Invalid offset: ${r}. Offset must be non-negative.`,code:"invalid_offset"});return{where:c=>(Be(c),{eq:o=>(Ue(c,o),R({...t,[c]:o},n,r,a))}),limit:c=>R(t,c,r,a),offset:c=>R(t,n,c,a),all:()=>R(t,0,r,a),execute:()=>{let c={...t,limit:n||200,offset:r||0};return{input:{filters:t,limit:n,offset:r,tenantId:a},metadata:{commandName:"ListPayments",path:"/v1/payments",method:"GET"},execute:async o=>{a&&(o.tenantId=a);let s=await f(o);try{if(n===0){let i=[],m=r||0,l=0;do{let u={...t,limit:200,offset:m},I=await s.get("/v1/payments",{params:u}),{totalFilteredRecords:ve,pageItems:Ee}=I.data;i.push(...Ee),l=ve,m+=200}while(m<l);return{totalFilteredRecords:l,pageItems:i}}else return(await s.get("/v1/payments",{params:c})).data}catch(i){g(i)}}}}}},Se=t=>({list:()=>R({},void 0,void 0,t?.tenantId)}),Xe=(t,n)=>({input:{params:t,configuration:n},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async r=>{n.tenantId&&(r.tenantId=n.tenantId);let a=await f(r),d=[],x=t.limit||20,c=t.offset||0,o=0,s={...t,limit:x,offset:c};try{if(t.limit===0){do{let i=await a.get("/v1/payments",{params:s}),{totalFilteredRecords:p,pageItems:m}=i.data;d.push(...m),o=p,c+=x}while(c<o);return{totalFilteredRecords:o,pageItems:d}}else return(await a.get("/v1/payments",{params:s})).data}catch(i){g(i)}}}),be=t=>({input:t,metadata:{commandName:"DeletePayment",path:`/v1/payments/${t.id}`,method:"DELETE"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let r=await f(n);try{await r.delete(`/v1/payments/${t.id}`)}catch(a){g(a)}}});var tt=t=>{let n=v(t);if(n.length>0)throw y({message:`Invalid configuration: ${n.join(", ")}`,code:"invalid_config"});let r=async(o,s,i)=>{if(t.middlewares)for(let p of t.middlewares)o==="before"&&p.before?await p.before(s):o==="after"&&p.after?await p.after(s,i):o==="onError"&&p.onError&&await p.onError(s,i)},a={...t},d=async o=>{try{await r("before",o);let s=await o.execute(a);return await r("after",o,s),s}catch(s){throw await r("onError",o,s),s}},x=o=>{let s=o||a.tenantId;return{payment:{create:i=>{let p=Pe({payment:i,tenantId:s});return{execute:async()=>d(p)}},get:i=>{let p=Ce({id:i,tenantId:s});return{execute:async()=>d(p)}},update:(i,p)=>{let m=Re({id:i,payment:p,tenantId:s});return{execute:async()=>d(m)}},delete:i=>{let p=be({id:i,tenantId:s});return{execute:async()=>d(p)}},list:()=>{let p=Se({tenantId:s}).list(),m=l=>({where:l.where,limit:u=>{let I=l.limit(u);return m(I)},offset:u=>{let I=l.offset(u);return m(I)},all:()=>{let u=l.all();return m(u)},execute:async()=>{let u=l.execute();return d(u)}});return m(p)}}}};return{setConfig:o=>{a=o},updateConfig:o=>{let s={...a,...o,axiosConfig:{...a.axiosConfig,...o.axiosConfig,headers:{...a.axiosConfig?.headers,...o.axiosConfig?.headers}}},i=v(s);if(i.length>0)throw y({message:`Invalid configuration: ${i.join(", ")}`,code:"invalid_config"});a=s},resetConfig:()=>{a=t},request:d,tenant:o=>x(o),...x()}};export{O as a,h as b,P as c,C as d,w as e,De as f,Me as g,Ae as h,we as i,Oe as j,Ne as k,ke as l,Ge as m,Pe as n,Ce as o,Re as p,Xe as q,tt as r};
