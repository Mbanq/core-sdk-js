"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; } async function _asyncOptionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = await fn(value); } else if (op === 'call' || op === 'optionalCall') { value = await fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkNKXRKPECjs = require('./chunk-NKXRKPEC.js');var x=m=>{let p=[];if(!m.baseUrl)p.push("baseUrl is required");else if(typeof m.baseUrl!="string")p.push("baseUrl must be a string");else try{new URL(m.baseUrl)}catch (e2){p.push("baseUrl must be a valid URL")}return _optionalChain([m, 'access', _2 => _2.axiosConfig, 'optionalAccess', _3 => _3.timeout])!==void 0&&(typeof m.axiosConfig.timeout!="number"||m.axiosConfig.timeout<0)&&p.push("timeout must be a positive number"),p};var te=m=>{let p=x(m);if(p.length>0)throw _chunkNKXRKPECjs.a.call(void 0, {message:`Invalid configuration: ${p.join(", ")}`,code:"invalid_config"});let C=async(o,t,n)=>{if(m.middlewares)for(let e of m.middlewares)o==="before"&&e.before?await e.before(t):o==="after"&&e.after?await e.after(t,n):o==="onError"&&e.onError&&await e.onError(t,n)},f={...m},a=async o=>{try{await C("before",o);let t=await o.execute(f);return await C("after",o,t),t}catch(t){throw await C("onError",o,t),t}},w=o=>{let t=o||f.tenantId;return{user:{getDetail:()=>{let n=_chunkNKXRKPECjs.Y.call(void 0, {tenantId:t});return{execute:async()=>a(n)}}},payment:{create:n=>{let e=_chunkNKXRKPECjs.r.call(void 0, {payment:n,tenantId:t});return{execute:async()=>a(e)}},get:n=>{let e=_chunkNKXRKPECjs.s.call(void 0, {id:n,tenantId:t});return{execute:async()=>a(e)}},update:(n,e)=>{let s=_chunkNKXRKPECjs.t.call(void 0, {id:n,payment:e,tenantId:t});return{execute:async()=>a(s)}},delete:n=>{let e=_chunkNKXRKPECjs.w.call(void 0, {id:n,tenantId:t});return{execute:async()=>a(e)}},list:()=>{let e=_chunkNKXRKPECjs.u.call(void 0, {tenantId:t}).list(),s=u=>({where:u.where,limit:i=>{let d=u.limit(i);return s(d)},offset:i=>{let d=u.offset(i);return s(d)},all:()=>{let i=u.all();return s(i)},execute:async()=>{let i=u.execute();return a(i)}});return s(e)}},client:{create:n=>{let e=_chunkNKXRKPECjs.A.call(void 0, {clientData:n,tenantId:t});return{execute:async()=>a(e)}},get:n=>{let e=_chunkNKXRKPECjs.x.call(void 0, {clientId:n,tenantId:t});return{execute:async()=>a(e)}},update:(n,e)=>{let s=_chunkNKXRKPECjs.y.call(void 0, {clientId:n,updates:e,tenantId:t});return{execute:async()=>a(s)}},updateDocumentRecord:(n,e)=>{let s=_chunkNKXRKPECjs.z.call(void 0, {clientId:n,identifierId:e.id,updates:e,tenantId:t});return{execute:async()=>a(s)}},delete:n=>{let e=_chunkNKXRKPECjs.D.call(void 0, {clientId:n,tenantId:t});return{execute:async()=>a(e)}},for:n=>{let e=parseInt(n,10),u=_chunkNKXRKPECjs.P.call(void 0, {clientId:e,tenantId:t}).list(),d=_chunkNKXRKPECjs.U.call(void 0, {clientId:e,tenantId:t}).list(),N=async()=>{let r=u.execute();returnawait _asyncOptionalChain([(await a(r)), 'optionalAccess', async _4 => _4.savingsAccounts])||[]},y=r=>({where:c=>{let l=r.where?r.where(c):r;return{eq:Q=>{let g=l.eq?l.eq(Q):l;return{where:k=>y(g).where(k),list:()=>y(g)}}}},execute:async()=>{let c=r.execute();return a(c)}});return{accounts:{get:r=>({execute:async()=>{let c=_chunkNKXRKPECjs.M.call(void 0, {id:r,tenantId:t});return a(c)}}),getFromList:r=>({execute:async()=>(await N()).find(l=>l.id===r)||null}),update:(r,c)=>{let l=_chunkNKXRKPECjs.N.call(void 0, {clientId:e,accountId:r,updates:c,tenantId:t});return{execute:async()=>a(l)}},delete:r=>{let c=_chunkNKXRKPECjs.O.call(void 0, {accountId:r,tenantId:t});return{execute:async()=>a(c)}},where:r=>y(u).where(r),list:()=>y(u)},recipients:{create:r=>{let c=_chunkNKXRKPECjs.S.call(void 0, {clientId:e,recipient:r,tenantId:t});return{execute:async()=>a(c)}},get:r=>({execute:async()=>{let c=_chunkNKXRKPECjs.R.call(void 0, {clientId:e,id:r,tenantId:t});return a(c)}}),update:(r,c)=>{let l=_chunkNKXRKPECjs.X.call(void 0, {id:r,input:c,tenantId:t});return{execute:async()=>a(l)}},delete:r=>{let c=_chunkNKXRKPECjs.T.call(void 0, {clientId:e,recipientId:r,tenantId:t});return{execute:async()=>a(c)}},where:r=>y(d).where(r),list:()=>y(d)}}},list:()=>{let e=_chunkNKXRKPECjs.B.call(void 0, {tenantId:t}).list(),s=u=>({where:u.where,limit:i=>{let d=u.limit(i);return s(d)},offset:i=>{let d=u.offset(i);return s(d)},all:()=>{let i=u.all();return s(i)},execute:async()=>{let i=u.execute();return a(i)}});return s(e)}}}};return{setConfig:o=>{f=o},updateConfig:o=>{let t={...f,...o,axiosConfig:{...f.axiosConfig,...o.axiosConfig,headers:{..._optionalChain([f, 'access', _5 => _5.axiosConfig, 'optionalAccess', _6 => _6.headers]),..._optionalChain([o, 'access', _7 => _7.axiosConfig, 'optionalAccess', _8 => _8.headers])}}},n=x(t);if(n.length>0)throw _chunkNKXRKPECjs.a.call(void 0, {message:`Invalid configuration: ${n.join(", ")}`,code:"invalid_config"});f=t},resetConfig:()=>{f=m},request:a,tenant:o=>w(o),...w()}};exports.a = te;
