import{a as m,c as y,d as u}from"./chunk-RX3BFHHX.mjs";var E=t=>{let n=[];if(!t.baseUrl)n.push("baseUrl is required");else if(typeof t.baseUrl!="string")n.push("baseUrl must be a string");else try{new URL(t.baseUrl)}catch{n.push("baseUrl must be a valid URL")}return t.axiosConfig?.timeout!==void 0&&(typeof t.axiosConfig.timeout!="number"||t.axiosConfig.timeout<0)&&n.push("timeout must be a positive number"),n};import{z as e}from"zod";var N=e.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),f=e.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),x=e.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),I=e.enum(["CREDIT","DEBIT"]),O=e.enum(["ASC","DESC"]),we=N.options,ke=f.options,Be=x.options,Ue=I.options,_e=O.options,w=t=>N.parse(t),k=t=>f.parse(t),B=t=>x.parse(t),U=t=>I.parse(t),_=t=>O.parse(t),F=e.string().min(1),L=e.string().min(1),z=e.string().min(1),V=e.string().min(1),j=e.string().min(1),$=e.string().min(1),M=e.string().min(1),G=e.string().min(1),q=e.string().min(1),K=e.union([e.string(),e.number()]),H=e.string(),Y=e.string(),W=e.string(),D=e.string(),T=e.string(),A=e.string(),X=e.boolean(),J=e.string(),Q=t=>F.parse(t),Z=t=>L.parse(t),ee=t=>z.parse(t),te=t=>V.parse(t),ne=t=>j.parse(t),ae=t=>$.parse(t),re=t=>M.parse(t),oe=t=>G.parse(t),ie=t=>q.parse(t),se=t=>K.parse(t),pe=t=>H.parse(t),ce=t=>Y.parse(t),me=t=>W.parse(t),de=t=>D.parse(t),ye=t=>T.parse(t),ue=t=>A.parse(t),le=t=>X.parse(t),ge=t=>J.parse(t),Fe=e.object({originatorName:F.optional(),originatorAccount:L.optional(),originatorBankRoutingCode:z.optional(),recipientName:V.optional(),recipientAccount:j.optional(),recipientBankRoutingCode:$.optional(),reference:M.optional(),traceNumber:G.optional(),externalId:q.optional(),clientId:K.optional(),dateFormat:H.optional(),locale:Y.optional(),originatedBy:W.optional(),paymentRail:x.optional(),paymentType:I.optional(),fromValueDate:D.optional(),toValueDate:D.optional(),fromExecuteDate:T.optional(),toExecuteDate:T.optional(),status:f.optional(),fromReturnDate:A.optional(),toReturnDate:A.optional(),isSettlement:X.optional(),orderBy:J.optional(),sortOrder:O.optional(),limit:e.number().positive().optional(),offset:e.number().min(0).optional()}).partial();var fe=e.object({id:e.number(),clientId:e.number(),amount:e.number().positive(),correlationId:e.string(),paymentType:I,paymentRail:x,recipient:e.object({cardId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),originator:e.object({accountId:e.string().optional(),recipientType:e.string(),address:e.object({line1:e.string().optional(),line2:e.string().optional(),stateCode:e.string().optional(),countryCode:e.string(),postalCode:e.string().optional()}),name:e.string()}),executedAt:e.string(),createdAt:e.string(),externalId:e.string(),status:f,paymentRailMetaData:e.record(e.string(),e.any()).optional(),currencyData:e.object({code:e.string(),name:e.string(),decimalPlaces:e.number(),displaySymbol:e.string(),nameCode:e.string(),currencyCodeInDigit:e.number(),isBaseCurrency:e.boolean()}),currency:e.string().min(3).max(3)}).catchall(e.any()),xe=e.object({streetAddress:e.string().optional(),city:e.string().optional(),state:e.string().optional(),country:e.string().optional(),postalCode:e.string().optional()}).optional(),Ee=e.object({name:e.string().optional(),identifier:e.string().optional(),address:xe}).optional(),v=e.object({name:e.string(),identifier:e.string(),accountType:e.enum(["CHECKING","SAVINGS"]).optional(),address:xe,agent:Ee}),ve=e.object({amount:e.number().positive(),currency:e.string().min(3).max(3),paymentRail:x,paymentType:I,debtor:v,creditor:v,clientId:e.string().optional(),correspondent:v.optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),chargeBearer:e.enum(["OUR","BEN","SHA"]).optional(),purposeCode:e.string().optional(),valueDate:e.string().optional(),executionDate:e.string().optional()}).catchall(e.any()).refine(t=>(t.paymentRail==="WIRE"||t.paymentRail==="SWIFT")&&t.creditor?t.creditor.address&&t.creditor.address.state&&t.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),De=e.object({amount:e.number().positive().optional(),correspondent:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional()}).optional(),creditor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),debtor:e.object({name:e.string().optional(),identifier:e.string().optional(),accountType:e.string().optional(),agent:e.object({name:e.string().optional(),identifier:e.string().optional()}).optional()}).optional(),exchangeRate:e.number().positive().optional(),externalId:e.string().optional(),errorCode:e.string().optional(),errorMessage:e.string().optional(),reference:e.union([e.string(),e.array(e.string())]).optional(),paymentRailMetaData:e.record(e.string(),e.any()).optional(),status:f.optional()}).catchall(e.any()),Le=e.object({totalFilteredRecords:e.number(),pageItems:e.array(fe)}),C=t=>fe.parse(t),Ie=t=>ve.parse(t),he=t=>De.parse(t);import{ZodError as S}from"zod";var Te=t=>{try{w(t)}catch(n){throw n instanceof S?m({message:`Invalid filter key: '${t}'. ${n.message}`,code:"invalid_filter_key"}):n}},Ae=(t,n)=>{try{switch(t){case"status":k(n);break;case"paymentRail":B(n);break;case"paymentType":U(n);break;case"sortOrder":_(n);break;case"originatorName":Q(n);break;case"originatorAccount":Z(n);break;case"originatorBankRoutingCode":ee(n);break;case"recipientName":te(n);break;case"recipientAccount":ne(n);break;case"recipientBankRoutingCode":ae(n);break;case"reference":re(n);break;case"traceNumber":oe(n);break;case"externalId":ie(n);break;case"clientId":se(n);break;case"dateFormat":pe(n);break;case"locale":ce(n);break;case"originatedBy":me(n);break;case"fromValueDate":case"toValueDate":de(n);break;case"fromExecuteDate":case"toExecuteDate":ye(n);break;case"fromReturnDate":case"toReturnDate":ue(n);break;case"isSettlement":le(n);break;case"orderBy":ge(n);break;default:break}}catch(o){throw o instanceof S?m({message:`Invalid value for '${t}': '${n}'. ${o.message}`,code:`invalid_${t}_value`}):o}},Ce=t=>({input:t,metadata:{commandName:"CreatePayment",path:"/v1/payments",method:"POST"},execute:async n=>{try{Ie(t.payment)}catch(a){throw a instanceof S?m({message:`Invalid payment data: ${a.message}`,code:"invalid_payment_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let o=await u(n);try{let a=await o.post("/v1/payments",t.payment);return C(a.data)}catch(a){y(a)}}}),Re=t=>({input:t,metadata:{commandName:"GetPayment",path:`/v1/payments/${t.id}`,method:"GET"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let o=await u(n);try{let a=await o.get(`/v1/payments/${t.id}`);return C(a.data)}catch(a){y(a)}}}),Se=t=>({input:t,metadata:{commandName:"UpdatePayment",path:`/v1/payments/${t.id}`,method:"PUT"},execute:async n=>{try{he(t.payment)}catch(a){throw a instanceof S?m({message:`Invalid payment update data: ${a.message}`,code:"invalid_payment_update_input"}):a}t.tenantId&&(n.tenantId=t.tenantId);let o=await u(n);try{let a=await o.put(`/v1/payments/${t.id}`,t.payment);return C(a.data)}catch(a){y(a)}}}),R=(t,n,o,a)=>({where:c=>(Te(c),{eq:r=>(Ae(c,r),R({...t,[c]:r},n,o,a))}),limit:c=>R(t,c,o,a),offset:c=>R(t,n,c,a),execute:()=>{let c={...t,limit:n||200,offset:o||0};return{input:{filters:t,limit:n,offset:o,tenantId:a},metadata:{commandName:"GetPayments",path:"/v1/payments",method:"GET"},execute:async r=>{a&&(r.tenantId=a);let i=await u(r);try{return(await i.get("/v1/payments",{params:c})).data}catch(s){y(s)}}}}}),be=t=>({list:()=>R({},void 0,void 0,t?.tenantId)}),Pe=t=>({input:t,metadata:{commandName:"DeletePayment",path:`/v1/payments/${t.id}`,method:"DELETE"},execute:async n=>{t.tenantId&&(n.tenantId=t.tenantId);let o=await u(n);try{await o.delete(`/v1/payments/${t.id}`)}catch(a){y(a)}}});var Ye=t=>{let n=E(t);if(n.length>0)throw m({message:`Invalid configuration: ${n.join(", ")}`,code:"invalid_config"});let o=async(r,i,s)=>{if(t.middlewares)for(let p of t.middlewares)r==="before"&&p.before?await p.before(i):r==="after"&&p.after?await p.after(i,s):r==="onError"&&p.onError&&await p.onError(i,s)},a={...t},d=async r=>{try{await o("before",r);let i=await r.execute(a);return await o("after",r,i),i}catch(i){throw await o("onError",r,i),i}},b=r=>{let i=r||a.tenantId;return{payment:{create:s=>{let p=Ce({payment:s,tenantId:i});return{execute:async()=>d(p)}},get:s=>{let p=Re({id:s,tenantId:i});return{execute:async()=>d(p)}},update:(s,p)=>{let l=Se({id:s,payment:p,tenantId:i});return{execute:async()=>d(l)}},delete:s=>{let p=Pe({id:s,tenantId:i});return{execute:async()=>d(p)}},list:()=>{let p=be({tenantId:i}).list(),l=h=>({where:h.where,limit:g=>{let P=h.limit(g);return l(P)},offset:g=>{let P=h.offset(g);return l(P)},execute:async()=>{let g=h.execute();return d(g)}});return l(p)}}}};return{setConfig:r=>{a=r},updateConfig:r=>{let i={...a,...r,axiosConfig:{...a.axiosConfig,...r.axiosConfig,headers:{...a.axiosConfig?.headers,...r.axiosConfig?.headers}}},s=E(i);if(s.length>0)throw m({message:`Invalid configuration: ${s.join(", ")}`,code:"invalid_config"});a=i},resetConfig:()=>{a=t},request:d,tenant:r=>b(r),...b()}};export{N as a,f as b,x as c,I as d,O as e,Fe as f,ve as g,De as h,Le as i,Ce as j,Re as k,Se as l,be as m,Ye as n};
