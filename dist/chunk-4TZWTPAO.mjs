import{a as f}from"./chunk-YPDJGVWM.mjs";var u=r=>{let t=[];if(!r.baseUrl)t.push("baseUrl is required");else if(typeof r.baseUrl!="string")t.push("baseUrl must be a string");else try{new URL(r.baseUrl)}catch{t.push("baseUrl must be a valid URL")}return r.axiosConfig?.timeout!==void 0&&(typeof r.axiosConfig.timeout!="number"||r.axiosConfig.timeout<0)&&t.push("timeout must be a positive number"),t};var C=r=>{let t=u(r);if(t.length>0)throw f({message:`Invalid configuration: ${t.join(", ")}`,code:"invalid_config"});let n=async(e,o,s)=>{if(r.middlewares)for(let a of r.middlewares)e==="before"&&a.before?await a.before(o):e==="after"&&a.after?await a.after(o,s):e==="onError"&&a.onError&&await a.onError(o,s)},i={...r};return{setConfig:e=>{i=e},updateConfig:e=>{let o={...i,...e,axiosConfig:{...i.axiosConfig,...e.axiosConfig,headers:{...i.axiosConfig?.headers,...e.axiosConfig?.headers}}},s=u(o);if(s.length>0)throw f({message:`Invalid configuration: ${s.join(", ")}`,code:"invalid_config"});i=o},resetConfig:()=>{i=r},request:async e=>{try{await n("before",e);let o=await e.execute(i);return await n("after",e,o),o}catch(o){throw await n("onError",e,o),o}}}};export{C as a};
