"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkOGW7GTJPjs = require('./chunk-OGW7GTJP.js');var x=e=>{let a=[];if(!e.baseUrl)a.push("baseUrl is required");else if(typeof e.baseUrl!="string")a.push("baseUrl must be a string");else try{new URL(e.baseUrl)}catch (e2){a.push("baseUrl must be a valid URL")}return _optionalChain([e, 'access', _2 => _2.axiosConfig, 'optionalAccess', _3 => _3.timeout])!==void 0&&(typeof e.axiosConfig.timeout!="number"||e.axiosConfig.timeout<0)&&a.push("timeout must be a positive number"),a};var _zod = require('zod');var v=_zod.z.enum(["originatorName","originatorAccount","originatorBankRoutingCode","recipientName","recipientAccount","recipientBankRoutingCode","reference","traceNumber","externalId","clientId","dateFormat","locale","originatedBy","paymentRail","paymentType","fromValueDate","toValueDate","fromExecuteDate","toExecuteDate","status","fromReturnDate","toReturnDate","isSettlement","orderBy","sortOrder"]),l= exports.b =_zod.z.enum(["DRAFT","AML_SCREENING","AML_REJECTED","EXECUTION_SCHEDULED","EXECUTION_PROCESSING","EXECUTION_SUCCESS","EXECUTION_FAILURE","RETURNED","CANCELLED","COMPLIANCE_FAILURE","DELETED","UNKNOWN"]),E= exports.c =_zod.z.enum(["ACH","SAMEDAYACH","WIRE","SWIFT","INTERNAL","FXPAY","CARD"]),S= exports.d =_zod.z.enum(["CREDIT","DEBIT"]),R= exports.e =_zod.z.enum(["ASC","DESC"]),H=v.options,Y=l.options,W=E.options,X=S.options,J=R.options,b=e=>v.parse(e),T=e=>l.parse(e),w=e=>E.parse(e),A=e=>S.parse(e),U=e=>R.parse(e),D=_zod.z.object({id:_zod.z.string(),amount:_zod.z.number().positive(),clientId:_zod.z.string(),currency:_zod.z.string().min(3).max(3),status:l.optional(),createdAt:_zod.z.string().optional(),updatedAt:_zod.z.string().optional()}).catchall(_zod.z.any()),_=_zod.z.object({streetAddress:_zod.z.string().optional(),city:_zod.z.string().optional(),state:_zod.z.string().optional(),country:_zod.z.string().optional(),postalCode:_zod.z.string().optional()}).optional(),V=_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),address:_}).optional(),h=_zod.z.object({name:_zod.z.string(),identifier:_zod.z.string(),accountType:_zod.z.enum(["CHECKING","SAVINGS"]).optional(),address:_,agent:V}),G= exports.f =_zod.z.object({amount:_zod.z.number().positive(),currency:_zod.z.string().min(3).max(3),paymentRail:E,paymentType:S,debtor:h,creditor:h,clientId:_zod.z.string().optional(),correspondent:h.optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),chargeBearer:_zod.z.enum(["OUR","BEN","SHA"]).optional(),purposeCode:_zod.z.string().optional(),valueDate:_zod.z.string().optional(),executionDate:_zod.z.string().optional()}).catchall(_zod.z.any()).refine(e=>(e.paymentRail==="WIRE"||e.paymentRail==="SWIFT")&&e.creditor?e.creditor.address&&e.creditor.address.state&&e.creditor.address.country:!0,{message:"For WIRE transfers, recipient address with state and country is mandatory"}),q= exports.g =_zod.z.object({amount:_zod.z.number().positive().optional(),correspondent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional()}).optional(),creditor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),debtor:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional(),accountType:_zod.z.string().optional(),agent:_zod.z.object({name:_zod.z.string().optional(),identifier:_zod.z.string().optional()}).optional()}).optional(),exchangeRate:_zod.z.number().positive().optional(),externalId:_zod.z.string().optional(),errorCode:_zod.z.string().optional(),errorMessage:_zod.z.string().optional(),reference:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),paymentRailMetaData:_zod.z.record(_zod.z.string(),_zod.z.any()).optional(),status:l.optional()}).catchall(_zod.z.any()),Q= exports.h =_zod.z.object({totalFilteredRecords:_zod.z.number(),pageItems:_zod.z.array(D)}),g=e=>D.parse(e),N=e=>G.parse(e),L=e=>q.parse(e);var k=e=>{try{b(e)}catch(a){throw a instanceof _zod.ZodError?_chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid filter key: '${e}'. ${a.message}`,code:"invalid_filter_key"}):a}},z=(e,a)=>{try{switch(e){case"status":T(a);break;case"paymentRail":w(a);break;case"paymentType":A(a);break;case"sortOrder":U(a);break;default:break}}catch(o){throw o instanceof _zod.ZodError?_chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid value for '${e}': '${a}'. ${o.message}`,code:`invalid_${e}_value`}):o}},O= exports.i =e=>({input:e,metadata:{commandName:"CreatePayment",path:"/v1/transfers",method:"POST"},execute:async a=>{try{N(e.payment)}catch(n){throw n instanceof _zod.ZodError?_chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid payment data: ${n.message}`,code:"invalid_payment_input"}):n}e.tenantId&&(a.tenantId=e.tenantId);let o=await _chunkOGW7GTJPjs.d.call(void 0, a);try{let n=await o.post("/v1/transfers",e.payment);return g(n.data)}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}}),F= exports.j =e=>({input:e,metadata:{commandName:"GetPayment",path:`/v1/transfers/${e.id}`,method:"GET"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let o=await _chunkOGW7GTJPjs.d.call(void 0, a);try{let n=await o.get(`/v1/transfers/${e.id}`);return g(n.data)}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}}),$= exports.k =e=>({input:e,metadata:{commandName:"UpdatePayment",path:`/v1/transfers/${e.id}`,method:"PUT"},execute:async a=>{try{L(e.payment)}catch(n){throw n instanceof _zod.ZodError?_chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid payment update data: ${n.message}`,code:"invalid_payment_update_input"}):n}e.tenantId&&(a.tenantId=e.tenantId);let o=await _chunkOGW7GTJPjs.d.call(void 0, a);try{let n=await o.put(`/v1/transfers/${e.id}`,e.payment);return g(n.data)}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}}),f=(e,a,o,n)=>({where:m=>(k(m),{eq:r=>(z(m,r),f({...e,[m]:r},a,o,n))}),limit:m=>f(e,m,o,n),offset:m=>f(e,a,m,n),execute:()=>{let m={...e,limit:a||200,offset:o||0};return{input:{filters:e,limit:a,offset:o,tenantId:n},metadata:{commandName:"GetPayments",path:"/v1/transfers",method:"GET"},execute:async r=>{n&&(r.tenantId=n);let i=await _chunkOGW7GTJPjs.d.call(void 0, r);try{return(await i.get("/v1/transfers",{params:m})).data.pageItems}catch(p){_chunkOGW7GTJPjs.c.call(void 0, p)}}}}}),j= exports.l =e=>({list:()=>f({},void 0,void 0,_optionalChain([e, 'optionalAccess', _4 => _4.tenantId]))}),M=e=>({input:e,metadata:{commandName:"DeletePayment",path:`/v1/transfers/${e.id}`,method:"DELETE"},execute:async a=>{e.tenantId&&(a.tenantId=e.tenantId);let o=await _chunkOGW7GTJPjs.d.call(void 0, a);try{await o.delete(`/v1/transfers/${e.id}`)}catch(n){_chunkOGW7GTJPjs.c.call(void 0, n)}}});var pt=e=>{let a=x(e);if(a.length>0)throw _chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid configuration: ${a.join(", ")}`,code:"invalid_config"});let o=async(r,i,p)=>{if(e.middlewares)for(let s of e.middlewares)r==="before"&&s.before?await s.before(i):r==="after"&&s.after?await s.after(i,p):r==="onError"&&s.onError&&await s.onError(i,p)},n={...e},d=async r=>{try{await o("before",r);let i=await r.execute(n);return await o("after",r,i),i}catch(i){throw await o("onError",r,i),i}},I=r=>{let i=r||n.tenantId;return{payment:{create:async p=>{let s=O({payment:p,tenantId:i});return{execute:async()=>d(s)}},get:async p=>{let s=F({id:p,tenantId:i});return{execute:async()=>d(s)}},update:async(p,s)=>{let C=$({id:p,payment:s,tenantId:i});return{execute:async()=>d(C)}},delete:async p=>{let s=M({id:p,tenantId:i});return{execute:async()=>d(s)}},list:()=>{let s=j({tenantId:i}).list();return{where:s.where,limit:s.limit,offset:s.offset,execute:async()=>{let C=s.execute();return d(C)}}}}}};return{setConfig:r=>{n=r},updateConfig:r=>{let i={...n,...r,axiosConfig:{...n.axiosConfig,...r.axiosConfig,headers:{..._optionalChain([n, 'access', _5 => _5.axiosConfig, 'optionalAccess', _6 => _6.headers]),..._optionalChain([r, 'access', _7 => _7.axiosConfig, 'optionalAccess', _8 => _8.headers])}}},p=x(i);if(p.length>0)throw _chunkOGW7GTJPjs.a.call(void 0, {message:`Invalid configuration: ${p.join(", ")}`,code:"invalid_config"});n=i},resetConfig:()=>{n=e},request:d,tenant:r=>I(r),...I()}};exports.a = v; exports.b = l; exports.c = E; exports.d = S; exports.e = R; exports.f = G; exports.g = q; exports.h = Q; exports.i = O; exports.j = F; exports.k = $; exports.l = j; exports.m = pt;
